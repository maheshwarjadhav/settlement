C:\Maheshwar\workspace\ReactUI\src\actions\loginAction.js

import {loginConstants,localUrl} from '../constants/DlosConstants';
import axios from 'axios';
const SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';
const SET_LOGIN_CREDEN = 'SET_LOGIN_CREDEN';
const SET_ERROR = 'SET_ERROR_LOGIN';
function setLoginSuccess(isLoginSuccess) {
    return {
        type: SET_LOGIN_SUCCESS,
        isLoginSuccess
    };
}
function setError(error) {
    return {
        type: SET_ERROR,
        error
    };
}
function setLoginCredentials(uname,password) {
    return {
        type: SET_LOGIN_CREDEN,
        uname,
        password
    };
}
export function logout(){
    return dispatch => {
        dispatch(setLoginSuccess(false));
        dispatch(setError(""));
        dispatch(setLoginCredentials("",""));
    }
}
function callLoginApi(uname,password){
    return dispatch => {
        axios({
            method: 'post',
            url: localUrl.LOCAL_URL+'/adapter/login',
            data: {
                uname:uname,
                password:password,
            }
        }).then(function (response) {
            console.log(response.data.status );
            if (response.data.status === loginConstants.SUCCESS) {
                dispatch(setLoginSuccess(true));
                dispatch(setLoginCredentials(uname,password));
            }else if(response.data.status==="failed"){
                dispatch(setError("Invalid uname & password"));
                dispatch(setLoginSuccess(false));
            }else{
                dispatch(setError(response.data.status));
                dispatch(setLoginSuccess(false));
            }
        }).catch(function (error) {
            dispatch(setError(""+error));
        });
    }

}
export function login(uname, password) {
    return dispatch => {
     dispatch(callLoginApi(uname,password));
    }
}

-------------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\actions\mockSearchAction.js

import axios from 'axios';
import {localUrl} from '../constants/DlosConstants';
const SET_RESULTS = 'SET_RESULTS';
const SET_ERROR = 'SET_ERROR';
const SET_DISPLAY = 'SET_DISPLAY';
const SET_MOCK = 'SET_MOCK';
const SET_DISPLAY_ERROR = 'SET_DISPLAY_ERROR';
function setError(error) {
    return {
        type: SET_ERROR,
        error,
    }
}
function setResults(searchResults) {
    return {
        type: SET_RESULTS,
        searchResults
    }
}
function setDisplay(display) {
    return {
        type: SET_DISPLAY ,
        display
    }
}
function setDisplayError(detailsLinkVisibility) {
    return {
        type: SET_DISPLAY_ERROR ,
        detailsLinkVisibility
    }
}
export function setMock(clickedMock) {
    return {
        type: SET_MOCK ,
        clickedMock
    }
}
export function callSearchApi(mockNo, fname, lname, zipP, searchType) {
    return dispatch => {
        axios({
            method: 'post',
            url: localUrl.LOCAL_URL+'/adapter/executeService',
            data: {
                functionName:"searchOffer",
                searchType: searchType,
                mockAcct: mockNo,
                firstName: fname,
                lastName: lname,
                zipPrimary: zipP,
                authInfo: {
                    sessionId: "V_0Z9z2yE2vsOJ1SwiGDYnt",
                    userId: "wseng00",
                    groupname: "",
                    centerCode: "RWD"
                }
            }
        }).then(function (response) {
            console.log(response);
            if (response.data === '') {
                dispatch(setError("Invalid mock#/name"));
                dispatch(setDisplay("none"));
            } else if(typeof (response.data) == 'string') {
                let error = response.data;
                dispatch(setError(response.data));
                dispatch(setDisplay("none"));
                dispatch(setDisplayError(""));
            }else if((response.data) instanceof Object){
                if(response.data.searchVOList.length===0){
                    dispatch(setError("No records"));
                    dispatch(setDisplay("none"));
                }else{
                    dispatch(setError(""));
                    dispatch(setResults(response.data.searchVOList));
                    dispatch(setDisplay("inline"));
                    dispatch(setDisplayError("none"));
                }
            }
        }).catch(function (error) {
            dispatch(setError(""+error));
            dispatch(setDisplay("none"));
        });
    };

}

-----------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\actions\offerAction.js

import axios from 'axios';
import {localUrl} from '../constants/DlosConstants';
const SET_OFFER_RESULTS = 'SET_OFFER_RESULTS';
const BUTTON_DISABLED = 'BUTTON_DISABLED';
function setResults(searchVOList,alSrcCde) {
    return {
        type: SET_OFFER_RESULTS,
        searchVOList,
        alSrcCde
    }
}
function setButtonDisabled(viewOfferBtn) {
    return {
        type: BUTTON_DISABLED,
        viewOfferBtn
    }
}
    export function callOfferApi(mockNo, searchList) {
        let searchListWithThisMock = [];
        for (let i = 0; i < searchList.length; i++) {
            if (searchList[i].mockAccNum === mockNo) {
                searchListWithThisMock = mockNo;
                console.log("match");
                break;
            }
        }
        return dispatch => {
            axios({
                method: 'post',
                url: localUrl.LOCAL_URL + '/adapter/executeService',
                data: {
                    mockAcct: mockNo,
                    searchLst: searchList,
                    functionName: "verifyOffer",
                    authInfo: {
                        sessionId: "V_0Z9z2yE2vsOJ1SwiGDYnt",
                        userId: "wseng00",
                        groupname: "",
                        centerCode: "RWD"
                    }
                }
            }).then(function (response) {
                if (response.data === '') {
                    console.log("no data");
                } else if ((response.data.searchVOList)[0].disableButton === "Yes") {
                    dispatch(setButtonDisabled(false));
                    dispatch(setResults(response.data.searchVOList, response.data.alSrcCde));
                } else {
                    dispatch(setButtonDisabled(true));
                    dispatch(setResults(response.data.searchVOList, response.data.alSrcCde));
                }
            }).catch(function (error) {
                console.log(error);
            });
        };
}


--------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\actions\scanListAction.js

import axios from 'axios';
import {localUrl} from '../constants/DlosConstants';
const SET_OFFER_RESULTS = 'SET_OFFER_RESULTS';
const BUTTON_DISABLED = 'BUTTON_DISABLED';
function setResults(searchVOList,alSrcCde) {
    return {
        type: SET_OFFER_RESULTS,
        searchVOList,
        alSrcCde
    }
}
function setButtonDisabled(viewOfferBtn) {
    return {
        type: BUTTON_DISABLED,
        viewOfferBtn
    }
}
export function callOfferApi(mockNo, searchList) {
    let searchListWithThisMock = [];
    for (let i = 0; i < searchList.length; i++) {
        if (searchList[i].mockAccNum === mockNo) {
            searchListWithThisMock = mockNo;
            console.log("match");
            break;
        }
    }
    return dispatch => {
        axios({
            method: 'post',
            url: localUrl.LOCAL_URL + '/adapter/executeService',
            data: {
                mockAcct: mockNo,
                searchLst: searchList,
                functionName: "verifyOffer",
                authInfo: {
                    sessionId: "V_0Z9z2yE2vsOJ1SwiGDYnt",
                    userId: "wseng00",
                    groupname: "",
                    centerCode: "RWD"
                }
            }
        }).then(function (response) {
            if (response.data === '') {
                console.log("no data");
            } else if ((response.data.searchVOList)[0].disableButton === "Yes") {
                dispatch(setButtonDisabled(false));
                dispatch(setResults(response.data.searchVOList, response.data.alSrcCde));
            } else {
                dispatch(setButtonDisabled(true));
                dispatch(setResults(response.data.searchVOList, response.data.alSrcCde));
            }
        }).catch(function (error) {
            console.log(error);
        });
    };
}


--------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\actions\selectOfferAction.js


/**
 * Created by rbhatta on 5/15/2018.
 */
import axios from 'axios';
import {localUrl} from '../constants/DlosConstants';

const SET_SEARCH_RESULTS = 'SET_SEARCH_RESULTS';


function setOfferResults(searchVOList) {
    return {
        type: SET_SEARCH_RESULTS,
        searchVOList,
    }
}


export function callSelectOfferApi(unsolicited,searchVO,alSrcCde) {
    console.log(unsolicited);
    console.log(searchVO);
    console.log(alSrcCde);
    return dispatch => {
        axios({
            method: 'post',
            url:  localUrl.LOCAL_URL+'/adapter/executeService',
            data: {
                unsolicited: unsolicited,
                searchVO: searchVO[0],
                functionName:"selectOffer",
                offerList: alSrcCde,
                authInfo: {
                    sessionId: "V_0Z9z2yE2vsOJ1SwiGDYnt",
                    userId: "wseng00",
                    groupname: "",
                    centerCode: "RWD"
                }
            }
        }).then(function (response) {
            console.log(response);
            if (response.data === '') {
                console.log("no data")
            } else {
                dispatch(setOfferResults(response.data.searchVOList));
            }
        }).catch(function (error) {
            console.log(error);
        });
    };

}

------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\components\AdminScreen.js


/**
 * Created by mali04 on 5/17/2018.
 */

import React, {Component} from 'react';
import './../css/cmacommon.css';
import './../css/discover.css';
import './../css/focus.css';
import AppHeader from  '../components/AppHeader';
import axios from 'axios';
import {loginConstants,localUrl} from '../constants/DlosConstants';


class AdminScreen extends Component {
    constructor() {
        super();
        this.state = {
            message: null,
            message2: null,
            modifydisplay:"hidden",
            currentLogLevel:"INFO",
            getRegion:"DLOS_SYSTEM_REGION_CACHE",
            addRegion:"DLOS_SYSTEM_REGION_CACHE",
            removeRegion:"DLOS_USER_REGION_CACHE",
            keyForAdd:"",
            keyForGet:"",
            keyForRemove:"",
            valueForAdd:"",
            messageAddElement:"",
            messageGetElement:"",
            messageRemoveElement:""
        };
        this.onSelect = this.onSelect.bind(this);
    }


    viewLogLevel(){
        axios({
            method: 'post',
            url: localUrl.LOCAL_URL+'/clientLog/viewCurrentLogLevel'
        }).then(function (response) {
            console.log(response.data );
            this.setState({
                message:response.data
            })
        }.bind(this)).catch(function (error) {
            console.log(error);
        });
    }
    modifyLogLevel() {
        if (this.state.modifydisplay === "hidden") {
            this.setState({
                modifydisplay: "visible",

            });
        } else {
            this.setState({
                modifydisplay: "hidden"
            });
        }
    }

    onSelect(event)
    {
        this.setState({
            currentLogLevel:event.target.value
        })
    }
    onSelectRegionForGet(event){
        this.setState({
            getRegion:event.target.value
        })
    }
    onSelectRegionForAdd(event){
        this.setState({
            addRegion:event.target.value
        })
    }
    onSelectRegionForRemove(event){
        this.setState({
            removeRegion:event.target.value
        })
    }
    modifyLogLevel2(){
        axios({
            method: 'post',
            url: localUrl.LOCAL_URL+'/clientLog/modifyCurrentLogLevel',
            data: {
                logLevel: this.state.currentLogLevel
            }
        }).then(function (response) {
            console.log(response.data );
            this.setState({
                message2:response.data
            })
        }.bind(this)).catch(function (error) {
            console.log(error);
        });
    }
    addCacheElement(){
        if(this.state.valueForAdd.length===0 ||this.state.keyForAdd.length===0){
            alert("Enter fields");
            return;
        }
        axios({
            method: 'post',
            url: localUrl.LOCAL_URL+'/clientCache/addElement',
            data: {
                cacheRegion: this.state.addRegion,
                cacheKey:this.state.keyForAdd,
                element:this.state.valueForAdd
            }
        }).then(function (response) {
            console.log(response.data);
            alert(response.data);

        }.bind(this)).catch(function (error) {
            console.log(error);
        });
    }
    getCacheElement(){
        if(this.state.keyForGet.length===0){
            alert("Enter fields");
            return;
        }
        axios({
            method: 'get',
            url: localUrl.LOCAL_URL+'/clientCache/getElement',
            params: {
                cacheRegion: this.state.getRegion,
                cacheKey:this.state.keyForGet,
            }
        }).then(function (response) {
            console.log(response.data);
            alert(response.data);

        }.bind(this)).catch(function (error) {
            console.log(error);
        });
    }
    removeCacheElement(){
        if(this.state.keyForRemove.length===0){
            alert("Enter fields");
            return;
        }
        axios({
            method: 'post',
            url: localUrl.LOCAL_URL+'/clientCache/removeElement',
            data: {
                cacheRegion: this.state.removeRegion,
                cacheKey:this.state.keyForRemove,
            }
        }).then(function (response) {
            console.log(response.data);
            alert(response.data);

        }.bind(this)).catch(function (error) {
            console.log(error);
        });
    }
    handleKeyNameForAdd(event){
        this.setState({
            keyForAdd:event.target.value
        })
    }
    handleKeyNameForGet(event){
        this.setState({
            keyForGet:event.target.value
        })
    }
    handleKeyNameForRemove(event){
        this.setState({
            keyForRemove:event.target.value
        })
    }
    handleValueForAdd(event){
        this.setState({
            valueForAdd:event.target.value
        })
    }
    render() {
        return (
            <div >
                <AppHeader onRef={ref => (this.child = ref)}/>

                <h6 style={{color:'navy'}}>Admin Screen</h6>
                <table>
                    <tr>
                        <td onClick={this.viewLogLevel.bind(this)} style={{fontStyle: 'Tahoma',lineHeight:'60px',color:'navy',width:'300px',fontSize:'13px'}}><u><a href="#">View Current Client Log Level</a></u></td>
                        <td style={{color:'red',fontSize:'13px'}}>{this.state.message}  </td>
                        <td></td>
                    </tr>
                    <tr>
                        <td onClick={this.modifyLogLevel.bind(this)} style={{ marginBottom: '15px',fontStyle: 'Tahoma',color:'navy',fontSize:'13px'}}><u><a href="#">Modify Current Client Log Level</a></u></td>

                        <td style={{visibility:this.state.modifydisplay}}>

                            <select onChange={this.onSelect} style={{width:'200px',height:'23px',fontStyle:'Tahoma',fontSize:'12px'}} size="1" className="slctpull">
                                <option value="ERROR">ERROR</option>
                                <option value="WARN">WARN</option>
                                <option value="INFO">INFO</option>
                                <option value="DEBUG">DEBUG</option>
                                <option value="TRACE">TRACE</option>
                            </select>
                            <td style={{color:'red',fontSize:'13px'}}>{this.state.message2}  </td>
                        </td>
                        <td style={{visibility:this.state.modifydisplay}}>
                            <button onClick={this.modifyLogLevel2.bind(this)} name="btnSubmit" className="btnmain"
                                    style={{width: '72px', height: '26px',marginLeft:'50px',fontSize:'12px'}}>Submit</button>
                        </td>

                    </tr>
                    <tr>

                        <td></td>
                        <td></td>
                    </tr>
                    <tr>
                        <td style={{ marginBottom: '15px',fontStyle: 'Tahoma',lineHeight:'50px',color:'navy',fontSize:'13px'}}><u><a href="#">Add Element To Cache</a></u></td>
                        <td style={{}}>

                            <select onChange={this.onSelectRegionForAdd.bind(this)} style={{width:'200px',height:'23px',fontStyle:'Tahoma',fontSize:'12px'}} size="1" className="slctpull">
                                <option value="DLOS_SYSTEM_REGION_CACHE">DLOS_SYSTEM_REGION_CACHE</option>
                                <option value="DLOS_USER_REGION_CACHE">DLOS_USER_REGION_CACHE</option>
                            </select>
                            <td style={{color:'red',fontSize:'13px'}}>{this.state.messageAddElement}</td>
                        </td>
                        <td>
                            <input  style={{marginLeft:'30px'}} placeholder="Enter Key" value={this.state.keyForAdd}
                                   onChange={this.handleKeyNameForAdd.bind(this)}
                                    className="txtregular"/>
                        </td>
                        <td>
                            <input  style={{marginLeft:'30px'}} placeholder="Enter Value" value={this.state.valueForAdd}
                                   onChange={this.handleValueForAdd.bind(this)}
                                   className="txtregular"/>
                        </td>
                        <td style={{}}>
                            <button onClick={this.addCacheElement.bind(this)} name="btnSubmit" className="btnmain"
                                    style={{width: '72px', height: '26px',marginLeft:'30px',fontSize:'12px'}}>Submit</button>
                        </td>
                    </tr>
                    <tr>
                        <td style={{ marginBottom: '15px',fontStyle: 'Tahoma',lineHeight:'50px',color:'navy',fontSize:'13px'}}><u><a href="#">Get Element To Cache</a></u></td>
                        <td style={{}}>

                            <select onChange={this.onSelectRegionForGet.bind(this)} style={{width:'200px',height:'23px',fontStyle:'Tahoma',fontSize:'12px'}} size="1" className="slctpull">
                                <option value="DLOS_SYSTEM_REGION_CACHE">DLOS_SYSTEM_REGION_CACHE</option>
                                <option value="DLOS_USER_REGION_CACHE">DLOS_USER_REGION_CACHE</option>
                            </select>
                            <td style={{color:'red',fontSize:'13px'}}>{this.state.messageGetElement}</td>
                        </td>
                        <td>
                            <input  style={{marginLeft:'30px'}} placeholder="Enter Key" value={this.state.keyForGet}
                                    onChange={this.handleKeyNameForGet.bind(this)}
                                    className="txtregular"/>
                        </td>
                        <td style={{}}>
                            <button onClick={this.getCacheElement.bind(this)} name="btnSubmit" className="btnmain"
                                    style={{width: '72px', height: '26px',marginLeft:'30px',fontSize:'12px'}}>Get</button>
                        </td>
                    </tr>
                    <tr>
                        <td style={{ marginBottom: '15px',fontStyle: 'Tahoma',lineHeight:'50px',color:'navy',fontSize:'13px'}}><u><a href="#">Remove Element From Cache</a></u></td>
                        <td style={{}}>

                            <select onChange={this.onSelectRegionForRemove.bind(this)} style={{width:'200px',height:'23px',fontStyle:'Tahoma',fontSize:'12px'}} size="1" className="slctpull">
                                <option value="DLOS_USER_REGION_CACHE">DLOS_USER_REGION_CACHE</option>
                            </select>
                            <td style={{color:'red',fontSize:'13px'}}>{this.state.messageRemoveElement}</td>
                        </td>
                        <td>
                            <input  style={{marginLeft:'30px'}} placeholder="Enter Key" value={this.state.keyForRemove}
                                    onChange={this.handleKeyNameForRemove.bind(this)}
                                    className="txtregular"/>
                        </td>
                        <td style={{}}>
                            <button onClick={this.removeCacheElement.bind(this)} name="btnSubmit" className="btnmain"
                                    style={{width: '72px', height: '26px',marginLeft:'30px',fontSize:'12px'}}>Remove</button>
                        </td>
                    </tr>
                </table>
            </div>
        );
    }
}
export default AdminScreen;


---------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\components\AppHeader.js


import React, {Component} from 'react';
import './../css/cmacommon.css';
import './../css/main.css';
import arrow from './../img/black_down_arrow.gif';
import printer from '../img/printer.gif';
import {connect} from 'react-redux';
import {logout} from '../actions/loginAction';
import {Redirect} from 'react-router';
import ToggleDisplay from 'react-toggle-display';

class AppHeader extends Component {
    constructor() {
        super();
        this.logout = this.logout.bind(this);
        this.scanList = this.scanList.bind(this);
        this.adminScreen = this.adminScreen.bind(this);



        this.state = {
            showLink: false,
            showNav: false,
            showScanList:false,
            showMockSearch:false,
            showAdminScreen:false
        }
    }

    componentDidMount() {
        this.props.onRef(this);
            document.addEventListener('keydown', this.keydownHandler);
    }

    componentWillUnmount() {
        this.props.onRef(undefined);
            document.removeEventListener('keydown', this.keydownHandler);
    }

    showNav() {
        this.setState({
            linkbackOnHover: 'navy',
            linkbackOnOut: '#6699CC',
            showNav: true,
            showLink: false
        })
    }

    showLink() {
        this.setState({
            showLink: true,
            showNav: false
        })
    }

    onBlurNav() {
        this.setState({
            showLink: false,
            showNav: false
        });
        console.log("Blur call from header");
    }

    logout() {
        this.setState({
            showLink: false,
            showNav: false
        });

        this.props.logout();
       // this.props.setLoginCredentials("", "");
    }
    scanList() {
        this.setState({
            showScanList:true
        });
    }
    adminScreen() {
        this.setState({
            showAdminScreen:true
        });
    }
    mockSearch(){
        this.setState({
            showMockSearch:true
        });
    }
    keydownHandler(e) {
        if (e.keyCode === 16) {
            if (document.activeElement.tagName === "TD"
                || document.activeElement.tagName === "SELECT"
                || document.activeElement.tagName === "BUTTON"
                || (document.activeElement.type !== "password"
                && document.activeElement.type !== "PASSWORD")
                && document.activeElement.type !== "FILE"
                && document.activeElement.type !== "file")
            return
        }

        if (e.keyCode === 117) {
            alert("History Screen[F6]");
        }
        else if (e.keyCode === 115) {
            alert("Credit Bureau[F4]");
        }
        else if (e.keyCode === 114) {
            alert("Full Application [F3]")
        }

        else if (e.keyCode === 118) {
            alert("Discover Accounts[F7]");
        }
        else if (e.keyCode === 112) {
            e.return = false;
            e.cancel = true;
            e.keyCode = 0;
        }
        else if (e.keyCode === 113 && e.ctrlKey) {
            alert("Action/Letter[CTRL F2]");
        }
        else if (e.keyCode === 112 && e.shiftKey) {
            alert("Disbursement[Shift F5]");
        }
        else if (e.keyCode === 118 && e.shiftKey) {
            alert("Calc and Decision[Shift F7]");
        }
        else if (e.keyCode === 113) {
            alert("WorkList[F2]");
        }
        else if (e.keyCode === 114) {
            alert("Full Application[F3]");
        }
        else if (e.keyCode === 121) {
            alert("Credit Summary[F10]");
        }

    }

    render() {
      /*if(!this.props.status){
            return <Redirect push to = '/'/>
        }*/
        if(this.state.showScanList){
            return <Redirect push to = '/ScanList'/>
        }
        if(this.state.showMockSearch){
            return <Redirect push to = '/MockSearch'/>
        }
        if(this.state.showAdminScreen){
            return <Redirect push to = '/AdminScreen'/>
        }
        return (
            <div >
                <ToggleDisplay show={this.state.showNav}>
                    <div className="navDiv">
                        <table>
                            <tr>
                                <td style={{color: 'white'}}>
                                    <div className="topmenu link">
                                        <span className="linkSpan">History[F6]</span>
                                    </div>
                                    <div className="topmenu link">
                                        <span className="linkSpan">Credit Bureau[F4]</span>
                                    </div>
                                    <div className="topmenu link">
                                        <span className="linkSpan">Full Application[F3]</span>
                                    </div>
                                    <div className="topmenu link">
                                        <span className="linkSpan">Discover Accounts[F7]</span>
                                    </div>
                                    <div className="topmenu link">
                                        <span className="linkSpan">Verification[F12]</span>
                                    </div>
                                    <div className="topmenu link">
                                        <span className="linkSpan">Fraud Screen [Shift F2]</span>
                                    </div>
                                    <div className="topmenu link">
                                        <span className="linkSpan">Action/Letter[CTRL F2]</span>
                                    </div>
                                    <div className="topmenu link">
                                        <span className="linkSpan">Memo[Shift F3]</span>
                                    </div>
                                    <div className="topmenu link">
                                        <span className="linkSpan">Disbursement[Shift F5]</span>
                                    </div>
                                    <div className="topmenu link">
                                        <span className="linkSpan">Calc and Decision[Shift F7]</span>
                                    </div>
                                    <div className="topmenu link">
                                        <span className="linkSpan">Credit Summary[F10]</span>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </ToggleDisplay>
                <ToggleDisplay show={this.state.showLink}>
                    <div className="linkDiv">
                        <table>
                            <tr>
                                <td style={{color: 'white'}}>
                                    <div className="topmenu link" width="100%">
                                        <span className="linkSpan">Prefill (Restart) App</span>
                                    </div>
                                    <div className="topmenu link" width="100%">
                                        <span className="linkSpan">Down Time Application</span>
                                    </div>
                                    <div style={{borderBottom: '1px solid black'}} className="topmenu link"
                                         width="100%">
                                        <span className="linkSpan">Verification</span>
                                    </div>
                                    <div className="topmenu link" width="100%">
                                        <span className="linkSpan">WorkList[F2]</span>
                                    </div>
                                    <div onClick={this.scanList}  className="topmenu link" width="100%">
                                        <span className="linkSpan">ScanList</span>
                                    </div>
                                    <div className="topmenu link" width="100%">
                                        <span className="linkSpan">Calculator</span>
                                    </div>
                                    <div style={{borderBottom: '1px solid black'}} className="topmenu link"
                                         width="100%">
                                        <span className="linkSpan">Queue List Statistics</span>
                                    </div>
                                    <div className="topmenu link" width="100%">
                                        <span className="linkSpan">Fraud Case Search</span>
                                    </div>
                                    <div className="topmenu link" width="100%">
                                        <span className="linkSpan">Maintain Fraud Case</span>
                                    </div>
                                    <div onClick={this.mockSearch.bind(this)} style={{borderBottom: '1px solid black'}} className="topmenu link"
                                         width="100%">
                                        <span className="linkSpan">Mock Acc/Name Search</span>
                                    </div>
                                    <div style={{borderBottom: '1px solid black'}} className="topmenu link"
                                         width="100%">
                                        <span className="linkSpan">Reports</span>
                                    </div>
                                    <div style={{borderBottom: '1px solid black'}} className="topmenu link"
                                         width="100%">
                                        <span className="linkSpan">Prefill (Restart) App</span>
                                    </div>
                                    <div style={{borderBottom: '1px solid black'}} className="topmenu link"
                                         width="100%">
                                        <a onClick={this.logout} className="topmenu link">
                                            <span className="linkSpan">Logout</span>
                                        </a>
                                    </div>
                                    <div onClick={this.adminScreen} className="topmenu link" width="100%">
                                        <span className="linkSpan"> Admin Screen</span>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </ToggleDisplay>
                <table width="100%" cellSpacing="0" cellPadding="0" border="1" >
                    <tr>
                        <td colSpan='3' align='left' valign='top'>
                            <table width='100%' border='0' cellSpacing='0' cellPadding='0'>
                                <tr>
                                    <td>
                                        <table width='100%' border='0' cellSpacing='0' cellPadding='0'
                                               bgcolor="#6699CC">
                                            <tr align='left' valign='middle' height="20px">
                                                <td width="70px"  className='tdcntntsmallcapsbold'>
                                                </td>
                                                <td width="5px">&nbsp;</td>
                                                <td width="225px" className='tdcntntsmallcapsbold nowrap' align='left'>
                                                </td>
                                                <td width="5px">&nbsp;</td>
                                                <td>
                                                    <table width="115px" className='menuback'>
                                                        <tr>
                                                            <th align='left' width="75px">
                                                                <ilayer>
                                                                    <layer visibility='show'>
                                                                        <span id='menuback0' className='iewrap2'
                                                                              style={{zIndex: '100', width: '75'}}
                                                                              accessKey="n">
                                                                            <a href="javascript:void(0)" className="menuhead"
                                                                               accessKey="n"
                                                                               onClick={this.showNav.bind(this)}
                                                                            ><u>N</u>avigation
                                                                            </a>
                                                                        </span>
                                                                    </layer>
                                                                </ilayer>
                                                                <br/>
                                                            </th>
                                                            <th width='5px'/>
                                                            <th align='left' width='35px'>
                                                                <ilayer>
                                                                    <layer>
                                                                        <span id='menuback1' className='iewrap2'
                                                                              style={{zIndex: '100', width: '45'}}
                                                                              accessKey="l">
                                                                            <a href="javascript:void(0)" className="menuhead"
                                                                               accessKey="l"
                                                                               onClick={this.showLink.bind(this)}
                                                                            ><u>L</u>inks
                                                                            </a>
                                                                        </span>
                                                                    </layer>
                                                                </ilayer>
                                                                <br/>
                                                            </th>
                                                            <th/>
                                                            <th align="left">
                                                                <ilayer>
                                                                    <layer S>
                                                                        <span id='adminMenuBack' className='iewrap2'
                                                                              style={{zIndex: '100', width: '5'}}
                                                                              accessKey="l">
                                                                            <a href="javascript:void(0)" className="menuhead"
                                                                               accessKey="l">&nbsp;&#187;
                                                                            </a>
                                                                        </span>
                                                                    </layer>
                                                                </ilayer>
                                                                <br/>
                                                            </th>
                                                        </tr>
                                                    </table>
                                                </td>
                                                <td width="5px">&nbsp;</td>
                                                <td>
                                                    <table width="130px" border='0' cellSpacing='0' cellPadding='0'>
                                                        <tr>
                                                            <td>
                                                                <input id="appId" type="text" className="txtregular"
                                                                       name="appId" maxLength="15"
                                                                       onKeyPress="" accessKey="b"/>
                                                                <div id='dropmenu2' style={{
                                                                    position: 'absolute',
                                                                    left: '0px',
                                                                    top: '0px',
                                                                    backgroundColor: '#E6E6FA',
                                                                    width: '180',
                                                                    visibility: 'hidden',
                                                                    padding: '0px'
                                                                }}>
                                                                </div>
                                                            </td>
                                                            <td style={{paddingRight: '10px'}}>
                                                                <ilayer>
                                                                    <layer visibility='show'>
                                                                        <span className='iewrap2'>
                                                                            <a href="javascript:void(0)">
                                                                                <button name="btnDown"
                                                                                        className="btnpull">
                                                                                    <img src={arrow}
                                                                                         style={{marginLeft:'-4px'}}
                                                                                    />
                                                                        </button>
                                                                    </a></span>
                                                                    </layer>
                                                                </ilayer>
                                                                <br/>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </td>
                                                <td width="5px">&nbsp;</td>
                                                <td width="60px">
                                                    <button name="btnNext" disabled className="btnsmall"
                                                            style={{width: '72px', height: '24px'}}>Next [F9]
                                                    </button>
                                                </td>
                                                <td width="5px">&nbsp;</td>
                                                <td width="60px">
                                                    <button name="btnFind" className="btnsmall"
                                                            style={{width: '72px', height: '24px'}}>Find [F11]
                                                    </button>
                                                </td>
                                                <td width="5px">&nbsp;</td>
                                                <td>
                                                    <button className="btnprint">
                                                        <img src={printer} border='0' style={{verticalAlign: 'middle',marginBottom:'5px'}}/>
                                                    </button>
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </div>
        );
    }
}
const mapStateToProps = (state) => {
    return {
        status: state.reducerLogin.isLoginSuccess,
    };
};
const mapDispatchToProps = (dispatch) => {
    return {
        logout: () => {
            dispatch(logout());
        }
    };
};
export default connect(mapStateToProps, mapDispatchToProps)(AppHeader);


------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\components\Baid.js

/**
 * Created by mali04 on 5/18/2018.
 */

/**
 * Created by kgehlot on 5/15/2018.
 */
import React, {Component} from 'react';
import calenderImg from '../img/calendar.gif';
import AppHeader from  '../components/AppHeader';

class Baid extends Component {
    onBlurHeader=()=>{
        this.child.onBlurNav();
    };
    render() {
        return (
            <div style={{overflowY:'scroll',overflowX:'hidden'}}>
                <AppHeader onRef={ref => (this.child = ref)}/>
                <table onClick={this.onBlurHeader} width='100%' border='0' cellSpacing='0' cellPadding='0' style={{backgroundColor:'#FFFFFF',overflow:'scroll'}}>

                    <tr>
                        <td>
                            <table width='100%' border='0' cellSpacing='0' cellPadding='0' style={{backgroundColor:'#fbdcda'}}>
                                <tr valign="top">
                                    <td width="30%" align="left" valign="top">
                                        <table height="60px" width='100%' border='0' cellSpacing='0' cellPadding='0'>
                                            <tr>
                                                <td valign="top">
                                                    <table className='tdcntntsmall' width='100%' border='0' cellSpacing='0' cellPadding='0'>
                                                        <tr>
                                                            <td className="tdcntntGreenbold" width='70' style={{fontWeight:'bold'}}>ID:</td>
                                                            <td width='1'>&nbsp;</td>
                                                            <td width='120' className="tdcntntGreenbold" nowRap style={{color: 'black'}}><b>000818074203816</b></td>
                                                            <td width='4'>&nbsp;</td>
                                                            <td width='63'> </td>
                                                        </tr>
                                                        <tr>
                                                            <td className="tdcntntGreenbold" style={{fontWeight:'bold'}} >Solicited:</td>
                                                            <td className="tdcntntGreenbold">&nbsp;</td>
                                                            <td className="tdcntntGreenbold" colspan="2" style={{color: 'black'}}><b>Re-Eng / Exist APR 10.99/ Bal 0.00/Payment 107.08</b> </td>
                                                            <td nowRap style={{paddingTop:'2px'}}></td>
                                                        </tr>
                                                        <tr>
                                                            <td className="tdcntntGreenbold" style={{fontWeight:'bold'}}>Segment:</td>
                                                            <td className="tdcntntGreenbold">&nbsp;</td>
                                                            <td className="tdcntntGreenbold"  style={{fontWeight:'bold'}}colspan="2" style={{color: 'black',}}><b>Cross Sell Solicited</b></td>
                                                            <td nowRap style={{paddingTop:'2px'}}></td>
                                                        </tr>
                                                        <tr>
                                                            <td className="tdcntntGreenbold" style={{fontWeight:'bold'}}>Line Req:</td>
                                                            <td className="tdcntntGreenbold">&nbsp;</td>
                                                            <td className="tdcntntGreenbold" style={{fontWeight:'bold'}} colspan="2"style={{color: 'black',}}><b>$15,100/DEBT CONSOLIDATION/60</b></td>

                                                        </tr>
                                                        <tr>
                                                            <td className="tdcntntGreenbold" style={{fontWeight:'bold'}}>Acq Method:</td>
                                                            <td className="tdcntntGreenbold" style={{fontWeight:'bold'}}>&nbsp;</td>
                                                            <td className="tdcntntGreenbold" style={{fontWeight:'bold'}} colspan="2" style={{color: 'black',fontWeight:'bold'}}>    Direct Mail  </td>
                                                        </tr>
                                                        <tr>
                                                            <td className="tdcntntGreenbold" style={{fontWeight:'bold'}}>SCD Expiration:</td>
                                                            <td className="tdcntntGreenbold">&nbsp;</td>
                                                            <td className="tdcntntGreenbold" colspan="2" style={{color: 'black',fontWeight:'bold'}}></td>
                                                        </tr>
                                                        {/* <tr>
                                                         <td className="tdcntntGreenbold" style={{fontWeight:'bold'}}>Last Internet Action</td>
                                                         <td className="tdcntntGreenbold">&nbsp;</td>
                                                         <td className="tdcntntGreenbold" colspan="2" style={{color: 'black',fontWeight:'bold'}}>Unknown</td>
                                                         </tr>*/
                                                        }
                                                        {/*  <tr>
                                                         <td className="tdcntntGreenbold">Reward:</td>
                                                         <td className="tdcntntGreenbold">&nbsp;</td>
                                                         <td className="tdcntntGreenbold" colspan="2" style={{color: 'black'}}>h</td>
                                                         </tr>*/}
                                                        {/* <tr>
                                                         <td className="tdcntntGreenbold">Last Internet Action:</td>
                                                         <td className="tdcntntGreenbold">&nbsp;</td>
                                                         <td className="tdcntntGreenbold" colspan="2" style={{color: 'black'}}>hhh</td>
                                                         </tr>*/}
                                                    </table>
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                    <td className='tddivider'>&nbsp;</td>
                                    <td align='left' valign='top'>
                                        <table width="100%" cellPadding="1" className='tdcntntsmall'>
                                            <tr className='tdcntntsamll'>
                                                <td style={{color: 'black',fontWeight:'bold'}}>SHUJAAT &nbsp;ALI &nbsp;
                                                    &nbsp;

                                                </td>
                                            </tr>
                                            <tr>
                                                <td style={{color: 'black',fontWeight:'bold'}}>
                                                    73 GAGNON ST
                                                </td>
                                            </tr>
                                            <tr>
                                                <td style={{color: 'black', fontWeight:'bold'}}> FALL RIVER ,MA  02723  &nbsp; </td>
                                            </tr>
                                            <tr>
                                                <td style={{color: 'black' ,fontWeight:'bold'}}> &nbsp;</td>
                                            </tr>
                                            <tr>
                                                <td style={{color: 'red'}}><h5><b>No Review - No Verification &nbsp; </b></h5></td>
                                            </tr>
                                        </table>
                                    </td>
                                    <td className='tddivider'>&nbsp;</td>
                                    <td width="16%" align='left' valign='top' style={{paddingRight:'3px'}}>
                                        <table width='100%' border='0' cellSpacing='0' cellPadding='0'>
                                            <tr className='tdcntntsmall'>
                                                <td style={{fontWeight:'bold',color:'navy'}}>SSN: 894-74- 5620 </td>
                                            </tr>
                                            <tr className='tdcntntsmall'>
                                                <td style={{fontWeight:'bold',color:'navy'}}>DOB: 21/07/1995</td>
                                            </tr>
                                            <tr className='tdcntntsmall' >
                                                <td style={{paddingTop:'2px',fontWeight:'bold',color:'navy'}}>MMN:</td>
                                            </tr>
                                        </table>
                                    </td>
                                    <td className='tddivider'>&nbsp;</td>
                                    <td width="15%" align='left' valign='top' style={{paddingRight:'3px'}}>
                                        <table width='100%' border='0' cellSpacing='1' cellPadding='0'>
                                            <tr className='tdcntntsmall'>
                                                <td colSpan='3' nowRap style={{color: 'black'}}>US Citizen</td>
                                            </tr>
                                            <tr className='tdcntntsmall'>
                                                <td width='20'  style={{fontWeight:'bold',color:'navy'}}>H:</td>
                                                <td nowRap style={{color: 'black'}}>
                                                    <font color="black">201</font>
                                                    <font color="black">408 -</font>
                                                    <font color="black">2691&nbsp;&nbsp;</font>
                                                </td>
                                                <td nowRap></td>
                                            </tr>
                                            <tr className='tdcntntsmall'>
                                                <td width='20' style={{fontWeight:'bold',color:'navy'}}>B:</td>
                                                <td nowRap style={{color: 'black'}}>
                                                    <font color="black">201</font>
                                                    <font color="black">408 -</font>
                                                    <font color="black">1256&nbsp;&nbsp;</font>
                                                </td>
                                                <td nowRap></td>
                                            </tr>
                                            <tr className='tdcntntsmall'>
                                                <td width='20' style={{fontWeight:'bold',color:'navy'}}>C:</td>
                                                <td nowRap style={{color: 'black'}}>
                                                    <font color="black">201</font>
                                                    <font color="black">408 -</font>
                                                    <font color="black">5672&nbsp;&nbsp;</font>
                                                </td>
                                                <td nowRap></td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td className='tdShade2' align='left' valign='top' style={{paddingTop:'0px',paddingBottom:'0px'}}>
                            <table width="100%" height="62px" cellSpacing='0'  cellPadding='0'  border='0'>
                                <tr>
                                    <td>
                                        <table width="100%" border="0" cellSpacing="0" cellPadding="0">
                                            <tr>
                                                <td align="left" valign="top" width="40%">
                                                    <table width="100%" border="0" cellSpacing="0" cellPadding="0">
                                                        <tr>
                                                            <td>
                                                                <table width="100%" border="0" cellSpacing="0" cellPadding="0">
                                                                    <tr valign="top">
                                                                        <td className="tdcntntsmallcaps" width="81%" style={{color: 'red'}}>
                                                                        </td>
                                                                        <td className="tdcntntsmallcaps" width="81%"></td>
                                                                        <td className="tdcntntsmallB" style={{fontSize:'11px',color:'red'}} nowRap> Day:95 </td>
                                                                    </tr>
                                                                </table>
                                                            </td>
                                                        </tr>
                                                        <tr>
                                                            <td>
                                                                <table width="100%" border="0" cellSpacing="0" cellPadding="0">
                                                                    <tr>
                                                                        <td  style={{fontSize:'11px'}} className="tdcntntsmall" nowRap width="20%">P45_APPROVED_PENDING_ACCEPTANCE</td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td  style={{fontSize:'11px'}} className="tdcntntsmall" nowRap width="20%">[WSENG00]</td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td  style={{fontSize:'11px'}} className="tdcntntsmall" nowRap width="20%">Status - Approve Accept</td>
                                                                    </tr>

                                                                </table>
                                                            </td>
                                                            <td>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </td>
                                                <td width="1%"></td>
                                                <td align="left" valign="top" width="26%">
                                                    <textarea style={{ overflowY: 'scroll'}} name="memoText"  cols="50" rows="3" className="txtregular" onclick="" ></textarea>
                                                </td>
                                                <td width="1%"></td>
                                                <td align="left" valign="middle">
                                                    <table border="0" cellSpacing="1" cellPadding="1">
                                                        <tr valign="middle" align="center">
                                                            <td><button style={{height:'24px',fontSize:'11px'}} className="btnheader" name="btnMemo" accesskey="m" ><u>M</u>emo</button></td>
                                                            <td><button  style={{height:'24px',fontSize:'11px'}} className="btnheader" name="btnAC" accesskey="a" ><u>A</u>C</button></td>
                                                            <td><button  style={{height:'24px',fontSize:'11px'}} className="btndec" name="btnDEC" accesskey="k">DEC [<u>K</u>]</button></td>
                                                            <td><button  style={{height:'24px',fontSize:'11px'}} className="btndec" name="btnRep" >Reprocess</button></td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <table width="100%" border="0" cellSpacing="0" cellPadding="0">
                                            <tr>
                                                <td  className="tdsubtitlefocus" width="180" nowRap>
                                                </td>
                                                <td width="5" className="tdcntntR">&nbsp;</td>
                                                <td width="75" className="tdcntntsmallR">
                                                </td>
                                                <td width="5">&nbsp;</td>
                                                <td  style={{fontWeight:'bold',fontSize:'12px'}}className="tdcntntsmallR"> Discover Bank Customer Data</td>
                                                <td width="150">
                                                    <table width="100%" border="0" cellSpacing="2" cellPadding="2">
                                                        <tr className="tdcntntsmallR" style={{fontSize:'12px'}}>
                                                            <td>MULT</td>
                                                        </tr>
                                                    </table>
                                                </td>
                                                <td width="3">&nbsp;</td>
                                                <td  className="tdcntntsmallR" style={{fontSize:'12px'}}>ACPT HLD</td>
                                                <td>
                                                    <table width="100%" border="0" cellSpacing="0" cellPadding="0">
                                                        <tr>
                                                            <td className="tdcntnt" width="20" style={{fontWeight: 'bold',fontSize:'12px'}}>Hold:</td>
                                                            <td width="3">&nbsp;</td>
                                                            <td className="tdcntnt" style={{fontWeight: 'bold',fontSize:'12px'}} nowRap>21/04/2108</td>
                                                            <td width="3">&nbsp;</td>
                                                            <td valign="middle" nowRap>
                                                                <input type="text" name="holdmonth" size="1" className="txtRegular" maxlength="2" onkeyup="return autoTab(this, 2, event)"/>
                                                                <span className="tdshade1">/</span>
                                                                <input type="text" name="holdDay" size="1" className="txtRegular" maxlength="2" onkeyup="return autoTab(this, 2, event)"/>
                                                                <span className="tdshade1">/</span>
                                                                <input type="text" name="holdYear" size="3" className="txtRegular" maxlength="4"/>
                                                                <a href="#" id="calendar" onClick="openCalendar();"><img src={calenderImg} border='0' width="16" height="16"/></a>
                                                            </td>
                                                            <td className="tdcntntR" width="20" style={{fontWeight: 'bold',fontSize:'13px'}}>Bureau:</td>
                                                            <td>&nbsp;</td>
                                                            <td   style={{fontSize:'13px'}}className="tdcntntR" nowRap>HARD</td>
                                                            <td>&nbsp;</td>
                                                            <td valign="middle"  style={{fontSize:'14px',fontWeight:'bold'}}>
                                                                <button style={{height:'22px',fontSize:'12px'}}  type = "button" className="btnsmall" name="hold" onClick="" accesskey="h" ><u>H</u>old
                                                                </button>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                <tr>
                                    { /* <td colspan="3" className="tdcntntR" style={{fontSize:'12px'}}>
                                     Application is waiting response from OFAC interface. Please open a ticket with Command Center.
                                     </td>*/}
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="3" className="tdcntntR" style={{fontWeight:'bold',color:'navy'}}>
                            HISTORY
                        </td>
                    </tr>
                    <div style={{borderTop:'1px solid black',borderBottom:'1px solid black' ,height: '60px',width: '100%'}}>
                        <tr>
                            <td style ={{fontWeight:'bold',color:'navy'}}>Review Rules</td>
                        </tr>

                        <button name="btnSubmit" className="btnsmall"
                                style={{width: '72px', height: '26px',fontWeight:'bold',float: 'right'}}>Submit
                        </button>

                    </div>
                    <div>
                        <select style={{width:'270px',height:'23px',marginLeft: '40%'}} size="1" className="slctpull">
                            <option value="none">...</option>
                            <option value="none">**ACQ only</option>
                            <option value="none">**OBH#MLR</option>
                            <option value="none">**DHL transfer declined</option>
                            <option value="none">**DHL transfer accepted</option>
                            <option value="none">**No Additional Household income</option>
                            <option value="none">**Fax Rexceived</option>
                            <option value="none">**Email Received</option>
                            <option value="none">*WithDrawFinal</option>




                        </select>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        <button name="btnSubmit" className="btnsmall"
                                style={{width: '95px', height: '25px',fontWeight:'bold',float: 'center'}}>  Quick Memo</button>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        <label style={{color:'navy',fontSize:'14px'}}>Filter By</label>
                        &nbsp;&nbsp;&nbsp;&nbsp;

                        <select style={{height:'25px'}} size="1" className="slctpull">
                            <option value="review">Review Rules</option>
                            <option value="letter">Letter</option>
                            <option value="analyst">Analyst</option>
                            <option value="date" selected="selected">DateTime</option>
                        </select>
                    </div>
                    <div style={{border:'2px'}}>
                        <table style={{width:'800px',border:'1px solid black', align:'left',zIndex:'2'}}>
                            <tr style={{backgroundColor: '#ddd',fontSize:'12px',height:'5px',fontWeight:'bold',color:'navy'}}>
                                <td style={{width:'25%'}}>Date/Time</td>
                                <td style={{width:'25%'}}>Analyst</td>
                                <td style={{width:'20%'}} >Rte</td>
                                <td style={{width:'30%'}} nowrap>Comments</td>
                            </tr>

                            <tr style={{fontSize:'12px',width:'35%',color:'navy'}} nowrap >
                                <td>2018-05-18 06:14:23</td>
                                <td>wseng00</td>
                                <td>B01</td>
                                <td>Application viewed by:wseng00</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'35%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>srokkam</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:sjatla</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:sjatla</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:sjatla</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <a>wseng00:modified the payment due date</a>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy',}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:sjatla</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:vmandad</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>
                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <a>wseng00:modified the payment due date</a>
                            </tr>

                            <tr style={{fontSize:'12px',width:'95%',color:'navy'}} nowrap>
                                <td>2018-05-18 06:14:23</td>
                                <td>mali04</td>
                                <td>B01</td>
                                <td>Application viewed by:mali04</td>
                            </tr>

                        </table>
                    </div>
                </table>
                <hr style={{border:'1px solid navy'}}/>
            </div>



        );
    }
}
export default Baid;


----------------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\components\Error.js

import React, {Component} from 'react';
import {connect} from 'react-redux';
class Error extends Component {
    render() {
        return (
           <pre style={{color:'red'}}>{this.props.error}</pre>
        );
    }
}
const mapStateToProps = (state) => {
    return {
        error: state.reducerMock.error,
    };
};

const mapDispatchToProps = (dispatch) => {
    return {

    };
};

export default connect(mapStateToProps, mapDispatchToProps)(Error);

--------------------------------------------------------------------------------------------------------------------------------

C:\Maheshwar\workspace\ReactUI\src\components\Login.js

/**
 * Created by kgehlot on 4/20/2018.
 */
import React, {Component} from 'react';
import './../css/discover.css';
import './../css/cmacommon.css';
import './../css/focus.css';
import logo from './../img/logo_discover.gif';
import {Redirect} from 'react-router';
import { login} from '../actions/loginAction';
import {connect} from 'react-redux';
import {loginConstants} from '../constants/DlosConstants';
import {loginUIlabel} from '../constants/UILabel';
const error = {
    margin: 'auto',
    padding: '10px',
    color: 'red',
    fontSize: '13px'
};
class Login extends Component {
    constructor(props) {
        super(props);
        this.state = {
            uname: "",
            password: "",
            extension: "",
            popoverOpen: false
        };
        this.handleUnameChange = this.handleUnameChange.bind(this);
        this.handlePasswordChange = this.handlePasswordChange.bind(this);
        this.handleExtenChange = this.handleExtenChange.bind(this);
        this.loginClick = this.loginClick.bind(this);
        this.clearClick = this.clearClick.bind(this);
        this.onFocus = this.onFocus.bind(this);
        this.isCapsLockOn = this.isCapsLockOn(this);
        this.toggle = this.toggle.bind(this);
    }

    loginClick() {

        if (this.state.uname === "" && this.state.password !== "") {

            alert(loginConstants.PLS_ENTER_REF_ID);
        }
        else if (this.state.password === "" && this.state.uname !== "") {

            alert(loginConstants.PLS_ENTER_PASS);
        }
        else if (this.state.password === "" && this.state.uname === "") {
            alert(loginConstants.PLS_ENTER_BOTH);
        } else {
            this.props.login(this.state.uname, this.state.password);
        }
    }

    onFocus() {
        this.setState({
            type: 'text'
        });
    }


    isCapsLockOn(e) {
        let keyCode = e.keyCode ? e.keyCode : e.which;
        let shiftKey = e.shiftKey ? e.shiftKey : ((keyCode === 16) ? true : false);
        return (((keyCode >= 65 && keyCode <= 90) && !shiftKey) || ((keyCode >= 97 && keyCode <= 122) && shiftKey))
    }

    showCapsLockMsg(e) {
        let warningElement = document.getElementById('capsLockWarning');
        if (this.isCapsLockOn(e))
            warningElement.style.display = 'block';
        else
            warningElement.style.display = 'none';
    }


    clearClick() {
        this.setState({uname: ""});
        this.setState({password: ""});
        this.setState({extension: ""});
    }

    handleUnameChange(event) {
        this.setState({uname: event.target.value});
        let output =event.target.value;
        if(output.length>=7){
            this.password.focus();
        }

    }

    handlePasswordChange(event) {
        this.setState({password: event.target.value});
        let value = event.target.value;
        if (value.toUpperCase() === value && value.toLowerCase() !== value) {

        }

    }

    handleExtenChange(event) {
        this.setState({extension: event.target.value});
    }

    _handleKeyPress = (e) => {
        if (e.key === 'Enter') {
            this.loginClick();
        }
    };

    toggle() {
        this.setState({
            popoverOpen: !this.state.popoverOpen
        });
    }
    componentDidMount(){
        this.nameInput.focus();
    }

    render() {
        if (this.props.status) {
            return <Redirect push to='/MockSearch'/>
        }
        return (
            <table align="center" cellSpacing='0' cellPadding='0' style={{height:"100%",width:"100%"}}
                   onKeyPress={this._handleKeyPress}>
                <tr >
                    <td align="center" valign="top">
                        <table className="divbox" cellSpacing='0 ' cellPadding='0' border='0' width="100%">
                            <tr>
                                <td align="left" rowSpan='2'><img src={logo} alt="Discover Card" border="0"/></td>
                                <td align="center" className="menuback" width="99%"><span
                                    className="tdapplication"><u>D</u>iscover <u>L</u>oan <u>O</u>rigination <u>S</u>ystem</span>
                                </td>
                            </tr>
                            <tr>
                                <td align="center" className="menuback" width="99%"><span className="tddepartment"/>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td align="center" valign="top">
                        <table cellSpacing='0' cellPadding='0' border='0' width="100%" height="100%">
                            <tr>
                                <td colSpan="2">&nbsp;</td>
                            </tr>
                            <tr>
                                <td colSpan="2">&nbsp;</td>
                            </tr>
                            <tr>
                                <td colSpan="2">&nbsp;</td>
                            </tr>
                            <tr>
                                <td colSpan="2">&nbsp;</td>
                            </tr>
                            <tr>
                                <td className="tdcntntR" align="center" colSpan="2">
                                    <h6 style={error}>{this.props.error}</h6>
                                </td>
                            </tr>
                            <tr>
                                <td colSpan="2">&nbsp;</td>
                            </tr>
                            <tr>
                                <td className="tdhead" align="center" colSpan="2">{loginConstants.PLEASE_ENTER_UID_PASS}
                                </td>
                            </tr>
                            <tr>
                                <td colSpan="2">&nbsp;</td>
                            </tr>
                            <tr>
                                <td align="right" className="tdsmall">{loginUIlabel.OPERATOR_ID}</td>
                                <td align="left">&nbsp;&nbsp;<input name="userId" ref={(input) => {
                                    this.nameInput = input;}} value={this.state.uname} onChange={this.handleUnameChange}
                                                                    onfocus={this.showCapsLockMsg}
                                                                    className="txtregular" type="text" size="6"
                                                                    maxlength="7"/></td>
                            </tr>
                            <tr>
                                <td align="right" className="tdsmall" width="50%">{loginUIlabel.PASSWORD}</td>
                                <td align="left" width="50%">&nbsp;&nbsp;<input name="password" ref={(input) => { this.password = input; }} onClick={this.toggle}
                                                                                value={this.state.password}
                                                                                onChange={this.handlePasswordChange}
                                                                                className="txtregular" size="6"
                                                                                type="password"/></td>
                            </tr>
                            <tr>
                                <td align="right" className="tdsmall" width="50%">{loginUIlabel.EXTENSION}</td>
                                <td align="left" width="50%">&nbsp;&nbsp;<input name="extension" ref={(input) => { this.exten = input; }} value={this.state.extension}
                                                                                onChange={this.handleExtenChange}
                                                                                className="txtregular" size="10"
                                                                                type="text"/></td>

                            </tr>
                            <tr>
                                <td colSpan="2">&nbsp;</td>
                            </tr>
                            <tr>
                                <td colSpan="2" align="center">
                                    <button name="login" type="button" name="login" value="Login" className="btnmain"
                                            onClick={this.loginClick} accessKey="l"><u>L</u>ogin
                                    </button>
                                    &nbsp;&nbsp;
                                    <button name="clear" type="button" name="clear" value="Clear" className="btnmain"
                                            onClick={this.clearClick} accessKey="c"><u>C</u>lear
                                    </button>
                                    &nbsp;&nbsp;
                                </td>
                            </tr>
                        </table>
                        <table>
                            <tr>
                                <td>&nbsp;</td>
                            </tr>
                            <tr>
                                <td align="center">{loginConstants.EXTENTION_MANDATORY}
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
        );
    }
}
const mapStateToProps = (state) => {
    console.log("mapStateTOProps");
    return {
        status: state.reducerLogin.isLoginSuccess,
        error : state.reducerLogin.error
    };
};

const mapDispatchToProps = (dispatch) => {
    return {
        login: (uname, password) => {
            dispatch(login(uname, password));
        }
    };
};

export default connect(mapStateToProps, mapDispatchToProps)(Login);

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\components\MockSearch.js

import React, { Component } from 'react';
import './../css/focus.css';
import './../css/cmacommon.css';
import './../css/discover.css';
import './../css/main.css';
import './../css/bootstrap.css';
import AppHeader from  '../components/AppHeader';
import {mockSearchConstants} from '../constants/DlosConstants';
import {mockUIlabel} from '../constants/UILabel';
import {Redirect} from 'react-router';
import {callSearchApi,setMock} from '../actions/mockSearchAction';
import {connect} from 'react-redux';
class Mock extends Component {
    getDetails(mockno) {
        console.log(mockno);
        this.props.setMock(mockno);
        this.setState ({
            redirect: true,
        });
    }

    constructor() {
        super();
        this.state = {
            searchType: "",
            firstName: "",
            lastName: "",
            mockAcct: "",
            zip1: "",
            zip2: "",
            vanityOffer: "",
            loanNo: "",
            dropDownHide : false,
            mockClearVisibility:"none",
            loanClearVisibility:"none",
            fnameClearVisibility:"none",
            lnameClearVisibility:"none",
            redirect:false,
            redirectError:false,

        };

        this.handlefirstNameChange = this.handlefirstNameChange.bind(this);
        this.handlelastnameChange = this.handlelastnameChange.bind(this);
        this.handlemockAcctChange = this.handlemockAcctChange.bind(this);
        this.handleZip1Change = this.handleZip1Change.bind(this);
        this.handleZip2Change = this.handleZip2Change.bind(this);
        this.handleLoanAccAnoChange = this.handleLoanAccAnoChange.bind(this);
        this.handlVanityChange = this.handlVanityChange.bind(this);
        this.clear = this.clear.bind(this);
        this.search = this.search.bind(this);
    }
    clear() {
        this.setState({mockAcct: ""});
        this.setState({firstName: ""});
        this.setState({lastName: ""});
        this.setState({zip1: ""});
        this.setState({zip2: ""});
        this.setState({vanityOffer: ""});
        this.setState({loanNo: ""});
    }

    search() {
        let validate = true;
        if (this.state.mockAcct === '' && this.state.vanityOffer === ''
            && this.state.loanNo === '' && this.state.firstName === '' && this.state.lastName === '' && this.state.zip1 === '') {
            alert( mockSearchConstants.ATLEAST_ONE_CREDEN);
            validate = false;
        }
        else if (this.state.mockAcct === "" && this.state.vanityOffer !== "") {
            if (this.state.mockAcct === "") {
                alert(mockSearchConstants.MOCK_NO_MISSING);
                validate = false;
            }
        } else if (this.state.mockAcct !== "" || this.state.vanityOffer !== "") {
            if (this.state.loanNo !== "") {
                alert(mockSearchConstants.EITHER_MOCK_ACC);
                validate = false;
            } else if (this.state.firstName !== "" || this.state.lastName !== "" || this.state.zip1 !== "") {
                alert(mockSearchConstants.EITHER_MOCK_NAME);
                validate = false;
            }
        } else if (this.state.loanNo !== "") {
            if (this.state.firstName !== "" || this.state.lastName !== "" || this.state.zip1 !== "") {
                alert( mockSearchConstants.EITHER_ACC_NAME);
                validate = false;
            }

        } else if (this.state.firstName !== "" || this.state.lastName !== "" || this.state.zip1 !== "") {
            let errors = "Please enter ";
            let eflag = false;
            if (this.state.firstName === "") {
                errors = errors + "First Name";
                eflag = true
            }
            if (this.state.lastName === "") {
                if (eflag === true) {
                    errors = errors + " and ";
                }
                errors = errors + "Last Name";
                eflag = true
            }
            if (this.state.zip1 === "") {
                if (eflag === true) {
                    errors = errors + " and ";
                }
                errors = errors + "Zip";
                eflag = true
            }
            if (eflag) {
                alert(errors);
                validate = false;
            }
        }
        if (validate) {
            if (this.state.mockAcct !== '') {
                if (this.state.mockAcct.length !== 13) {
                    alert( mockSearchConstants.INVALID_MOCK_LENGTH);

                }else{
                    this.props.callSearchApi(this.state.mockAcct, "", "", "", "1");
                }
            } else if (this.state.loanNo) {
                alert("searching using Loan#");
            } else if (this.state.firstName) {
                this.props.callSearchApi("",this.state.firstName,this.state.lastName, this.state.zip1, "4");
            }
        }
    }

    handlemockAcctChange(event) {

        if (isNaN(event.target.value)) {
            alert(mockSearchConstants.PLEASE_ENTER_NO);
            this.setState({mockAcct: ""});
            return;
        }
        if(event.target.value.length===13){
            this.submit.focus();
        }
        if(event.target.value.length>0){
            this.setState({
                mockClearVisibility : "inline"
            })
        }else{
            this.setState({
                mockClearVisibility : "none"
            })
        }
        this.setState({mockAcct: event.target.value});
        
    }

    handlVanityChange(event) {
        this.setState({vanityOffer: event.target.value});

    }

    handlefirstNameChange(event) {
        this.setState({firstName: event.target.value});
        if(event.target.value.length>0){
            this.setState({
                fnameClearVisibility : "inline"
            })
        }else{
            this.setState({
                fnameClearVisibility : "none"
            })
        }

    }

    handlelastnameChange(event) {
        this.setState({lastName: event.target.value});
        if(event.target.value.length>0){
            this.setState({
                lnameClearVisibility : "inline"
            })
        }else{
            this.setState({
                lnameClearVisibility : "none"
            })
        }
    }

    handleLoanAccAnoChange(event) {
        if (isNaN(event.target.value)) {
            alert(mockSearchConstants.PLEASE_ENTER_NO);
            this.setState({loanNo: ""});
            return;
        }
        if(event.target.value.length>0){
            this.setState({
                loanClearVisibility : "inline"
            })
        }else{
            this.setState({
                loanClearVisibility : "none"
            })
        }
        this.setState({loanNo: event.target.value});

    }

    handleZip1Change(event) {
        if (isNaN(event.target.value)) {
            alert(mockSearchConstants.PLEASE_ENTER_NO);
            this.setState({zip1: ""});
            return;
        }
        if(event.target.value.length===5){
            this.zipS.focus();
        }
        this.setState({zip1: event.target.value});

    }

    handleZip2Change(event) {
        if (isNaN(event.target.value)) {
            alert(mockSearchConstants.PLEASE_ENTER_NO);
            this.setState({zip2: ""});
            return;
        }
        if(event.target.value.length===4){
            this.submit.focus();
        }
        this.setState({zip2: event.target.value});

    }
    onBlurHeader=()=>{
        this.child.onBlurNav();
    };
    mockClear(){
        this.setState({
            mockAcct:"",
            mockClearVisibility : "none"
        })
    }
    loanClear(){
        this.setState({
            loanNo:"",
            loanClearVisibility : "none"
        })

    }
    fnameClear(){
    this.setState({
        firstName:"",
        fnameClearVisibility : "none"
    })
}
    lnameClear(){
        this.setState({
            firstName:"",
            lnameClearVisibility : "none"
        })
    }
    errorPage(){
        this.setState({
            redirectError:true
        })
    }
    render() {
        if(this.state.redirect === true){
            return <Redirect push to = '/Offer'  />
        }
        if(this.state.redirectError === true){
            return <Redirect push to = '/Error'  />
        }

        return (
            <div>
            <AppHeader onRef={ref => (this.child = ref)}/>
            <table cellSpacing='0' cellPadding='5' border="0" width="100%" onClick={this.onBlurHeader}>
                <tr>
                    <td align="left" valign="top">
                     <p style={{display:this.props.detailsLinkVisibility,color:'red',fontWeight: 'bold',fontSize:'75%'}}  >Error occurred while calling service mockSearch :<u onClick={this.errorPage.bind(this)} style={{cursor:'pointer'}}> Details</u></p>
                    </td>
                </tr>
                <tr>
                    <td>
                        <form>
                            <table id="bodyLayer" width='100%' border='0' cellSpacing="0" cellPadding="0">
                                <tr>
                                    <td colSpan="2" width="100%" className="tdShade1">
                                        <b>{mockUIlabel.MOCK_ACC_NAME_SRCH}</b>
                                        <hr style={{backgroundColor:'black'}}/>
                                    </td>
                                </tr>
                                <tr>
                                    <td colSpan="2" width="23%" className="tdShade1">
                                        {mockUIlabel.INVITATION_SRCH} <font color='red'>*</font>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <table width="100%" border="0">
                                            <tr>
                                                <td className="tdShade1">
                                                    {mockUIlabel.MOCK_NO}
                                                </td>
                                                <td className="tdShade1">
                                                    {mockUIlabel.VANITY_OFFER_CODE}
                                                </td>
                                            </tr>
                                            <tr>
                                                <td width="28%" align="left">
                                                    <input value={this.state.mockAcct}
                                                           onChange={this.handlemockAcctChange} size="30"
                                                           maxLength="13" type="text"
                                                           className="txtregular mockInput"
                                                           name="mockNo"
                                                    />
                                                    {/*<span className="searchclear" style={{display:this.state.mockClearVisibility}} onClick={this.mockClear.bind(this)}><b>X</b></span>*/}
                                                </td>
                                                <td>
                                                    <input value={this.state.vanityOffer}
                                                           onChange={this.handlVanityChange} size="10"
                                                           maxLength="10" className="txtregular"/>
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                <hr style={{backgroundColor:'black'}}/>
                                <tr>
                                    <td className="tdShade1">
                                        {mockUIlabel.LOAN_ACC_NO}
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <input value={this.state.loanNo} onChange={this.handleLoanAccAnoChange}
                                               className="txtregular" size="30" maxLength="16"/>
                                        {/*<span classNam="searchclear" style={{display:this.state.loanClearVisibility}} onClick={this.loanClear.bind(this)}><b>X</b></span>*/}
                                    </td>
                                </tr>
                                <hr style={{backgroundColor:'black'}}/>
                                <tr>
                                    <td>
                                        <table border="0" cellPadding="0" cellSpacing="0" width="100%">
                                            <tr>
                                                <td width="3%" className="tdShade1">
                                                    {mockUIlabel.FIRST_NAME}
                                                </td>
                                                <td colSpan="3" className="tdShade1">
                                                    {mockUIlabel.LAST_NAME}
                                                </td>
                                            </tr>
                                            <tr>
                                                <td width="3%">
                                                    <input value={this.state.firstName}
                                                           onChange={this.handlefirstNameChange} size="30"
                                                           maxLength="15" className="txtregular"/>
                                                    {/*<span className="searchclear" style={{display:this.state.fnameClearVisibility}} onClick={this.fnameClear.bind(this)}><b>X</b></span>*/}
                                                </td>
                                                <td colSpan="4">
                                                    <input value={this.state.lastName}
                                                           onChange={this.handlelastnameChange} size="35" maxLength="20"
                                                           className="txtregular"/>
                                                    {/*<span className="searchclear" style={{display:this.state.lnameClearVisibility}} onClick={this.lnameClear.bind(this)}><b>X</b></span>*/}
                                                </td>
                                            </tr>
                                            <tr>
                                                <td colSpan="2" className="tdShade1">
                                                    Zip :
                                                </td>
                                            </tr>
                                            <tr>
                                                <td colSpan="2" width="68%">
                                                    <input   value={this.state.zip1} onChange={this.handleZip1Change}
                                                           size="5" maxLength="5" className="txtregular"/>
                                                    <span className="tdShade1">-</span>
                                                    <input  ref={(input) => { this.zipS = input; }} value={this.state.zip2} onChange={this.handleZip2Change}
                                                           size="4" maxLength="4" className="txtregular"/>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td colSpan="2">
                                                    <button name="search"  ref={(input) => { this.submit = input; }} onClick={this.search} type="button" accessKey="s"
                                                            className="btnban">
                                                        <u>S</u>earch
                                                    </button>
                                                    &nbsp;&nbsp;
                                                    <button onClick={this.clear} type="button" className="btnban"
                                                            accessKey="c">
                                                        <u>C</u>lear
                                                    </button>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td height="20px"/>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <div style={{display:this.props.display}}>
                                        <table align="left" width="100%" border="0" cellSpacing="0" cellPadding="5" >
                                            <tr className="tdshade1bgonly">
                                                <td width="20%" bgcolor="#80ffff" className="tdsubtitlefocus">
                                                    {mockUIlabel.MOCK_COLUMN}
                                                </td>
                                                <td width="10%" className="tdsubtitlefocus" bgcolor="#80ffff">
                                                    {mockUIlabel.FIRST_COLUMN}
                                                </td>
                                                <td width="10%" className="tdsubtitlefocus" bgcolor="#80ffff">
                                                    {mockUIlabel.MI_COLUMN}
                                                </td>
                                                <td width="10%" className="tdsubtitlefocus" bgcolor="#80ffff">
                                                    {mockUIlabel.LAST_COLUMN}
                                                </td>
                                                <td width="25%" className="tdsubtitlefocus" bgcolor="#80ffff">
                                                    {mockUIlabel.ADDRESS_COLUMN}
                                                </td>
                                                <td width="10%" className="tdsubtitlefocus" bgcolor="#80ffff">
                                                    {mockUIlabel.ZIP_COLUMN}
                                                </td>
                                                <td width="15%" className="tdsubtitlefocus" bgcolor="#80ffff">
                                                    {mockUIlabel.PHONE_NO_COLUMN}
                                                </td>
                                            </tr>
                                            {
                                                this.props.searchResults.map((result, i) => {
                                                    return <tr className="tdshade1bgonly">
                                                        <td key={i} className="tdsubtitlefocus" >
                                                            <a href="javascript:void(0)"
                                                               onClick={()=>this.getDetails(result.mockAccNum)}><u style={{cursor:'pointer'}}>{result.mockAccNum}</u></a>
                                                        </td>
                                                        <td className="tdsubtitlefocus" key={i}>{result.firstName}</td>
                                                        <td className="tdsubtitlefocus"/>
                                                        <td className="tdsubtitlefocus">{result.lastName}</td>
                                                        <td className="tdsubtitlefocus">{result.address}</td>
                                                        <td className="tdsubtitlefocus">{result.zipCode}</td>
                                                        <td className="tdsubtitlefocus"/>
                                                    </tr>
                                                })
                                            }
                                        </table>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <div
                                            style={{position:'fixed',bottom:'60px',padding:'10px',borderTop:'1px solid black',width:'100%'}}>
                                            <span className='tdsmall'>Partner</span>&nbsp;&nbsp;
                                            <select style={{width:'55px',height:'23px'}} size="1" className="slctpull">
                                                <option value="none">None</option>
                                            </select>&nbsp;&nbsp;
                                            <input style={{width:'230px',height:'23px'}} type="button" id="unsolicited"
                                                   value="Unsolicited application" className="btnban"/>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </form>
                    </td>
                </tr>
            </table>
            </div>
        );
    }
}
const mapStateToProps = (state) => {
    return {
        error: state.reducerMock.error,
        searchResults:state.reducerMock.searchResults,
        display:state.reducerMock.display,
        detailsLinkVisibility: state.reducerMock.detailsLinkVisibility
    };
};

const mapDispatchToProps = (dispatch) => {
    return {
        callSearchApi: (mockNo, fname, lname, zipP, searchType) => {
            dispatch(callSearchApi(mockNo, fname, lname, zipP, searchType));
        },
        setMock:(mock)=> {
            dispatch(setMock(mock));
        }
    };
};

export default connect(mapStateToProps, mapDispatchToProps)(Mock);

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\components\Offer.js


import React, {Component} from 'react';
import './../css/cmacommon.css';
import './../css/discover.css';
import './../css/focus.css';
import {callOfferApi} from '../actions/offerAction';
import {connect} from 'react-redux';
import {Redirect} from 'react-router';
import AppHeader from  '../components/AppHeader';
import SelectOffer from '../components/SelectOffer';
class Offer extends Component {
    constructor(props) {
        super(props);
        this.props.callOfferApi(this.props.mockAcct,this.props.searchList);
        this.state ={
            redirect:false
        }
    };

    onBlurHeader = () => {
        this.child.onBlurNav();
    };
    offerSelect(){
        this.setState ({
            redirect: true,
        });
    }

    render() {
        if (this.props.mockAcct === '') {
            return <Redirect push to='/'/>
        }
        if(this.state.redirect === true){
            return <Redirect push to = '/SelectOffer'/>
        }

        return (
            <div>
                <AppHeader onRef={ref => (this.child = ref)}/>
                <table style={{border:"0", cellpadding: "0", cellspacing:"0",  width: "100%"}}  onClick={this.onBlurHeader}>
                    <tr>
                        <td align="left" valign="top">
                            <table cellspacing='0' cellpadding='0' border="0" width="100%">
                                <tr>
                                    <td align="left" valign="top"></td>
                                </tr>
                                <tr>
                                    <td />
                                </tr>
                                <tr>

                                </tr>
                            </table>
                        </td>
                    </tr>

                    <tr>
                        <tdtitle style={{paddingleft: "5px", paddingright: "5px", rowspan: "1", colspan: "1"}} className= "tdhead" >
                            Verify Prospect Information
                        </tdtitle>

                    </tr>
                    <tr>
                        <td style={{rowspan: "1", colspan: "1"}}>
                            <hr></hr>
                        </td>
                    </tr>

                    <tr>
                        <td style={{colspan: "2"}}>
                            <table style={{border: "0", width: "100%"}}>
                                <tr>
                                    <td style={{paddingleft: "5px", paddingright: "5px",colspan: "2"}} className= "tdhead">
                                        First Name
                                    </td>
                                    <td className="tdhead">
                                        MI
                                    </td>
                                    <td className="tdhead">
                                        Last Name
                                    </td>
                                    <td className="tdhead">
                                        Suffix
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                </tr>

                                <tr>

                                    {
                                            this.props.offerSearchList.map((obj, index) => {
                                                return (
                                                    <td className="tdShade1">
                                                        {
                                                            obj.firstName
                                                        }
                                                    </td>
                                                )
                                            })
                                    }


                                    <td>
                                        &nbsp;
                                    </td>


                                    {
                                        this.props.offerSearchList.map((obj, index) => {
                                            return (
                                                <td className="tdShade1">
                                                    {
                                                        obj.lastName
                                                    }
                                                </td>
                                            )
                                        })
                                    }


                                    <td>
                                        &nbsp;
                                    </td>


                                    <td>
                                        &nbsp;
                                    </td>


                                    <td>
                                        &nbsp;
                                    </td>


                                </tr>
                                <tr>
                                    <td style={{colspan: "2"}} className="tdhead">
                                        Address Line #1
                                    </td>
                                    <td style={{colspan: "4"}} className="tdShade1">
                                        &nbsp;
                                    </td>
                                </tr>

                                <tr>
                                    {
                                        this.props.offerSearchList.map((obj, index) => {
                                            return (
                                                <td className="tdShade1">
                                                    {
                                                        obj.address
                                                    }
                                                </td>
                                            )
                                        })
                                    }
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                </tr>
                                <tr>
                                    <td style={{colspan: "2"}} className="tdhead">
                                        Address Line #2
                                    </td>
                                    <td style={{colspan: "4"}}>
                                        &nbsp;
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                </tr>


                                <tr>
                                    <td className="tdhead">
                                        City
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td className="tdhead">
                                        State
                                    </td>
                                    <td className="tdhead">
                                        Zip
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                </tr>

                                <tr>
                                    {
                                        this.props.offerSearchList.map((obj, index) => {
                                            return (
                                                <td className="tdShade1">
                                                    {
                                                        obj.city
                                                    }
                                                </td>
                                            )
                                        })
                                    }
                                    <td>
                                        &nbsp;
                                    </td>
                                    {
                                        this.props.offerSearchList.map((obj, index) => {
                                            return (
                                                <td className="tdShade1">
                                                    {
                                                        obj.state
                                                    }
                                                </td>
                                            )
                                        })
                                    }
                                    {
                                        this.props.offerSearchList.map((obj, index) => {
                                            return (
                                                <td className="tdShade1">
                                                    {
                                                        obj.zipCode
                                                    }
                                                </td>
                                            )
                                        })
                                    }
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                </tr>
                                <tr>
                                    <td className="tdhead">
                                        Phone
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td colspan="4">
                                        &nbsp;
                                    </td>
                                </tr>
                                <tr>
                                    <td style={{colspan: "6"}} className="tdShade1">
                                        (

                                        )&nbsp;

                                        &nbsp;

                                        <input type="hidden" name="areaCode" value=""/>
                                        <input type="hidden" name="prefix" value=""/>
                                        <input type="hidden" name="phoneSuffix" value=""/>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                </tr>
                                <tr>
                                    <td className="tdhead">
                                        Status
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                </tr>
                                <tr>
                                    {
                                        this.props.offerSearchList.map((obj, index) => {
                                            return (
                                                <td className="tdShade1">
                                                    {
                                                        obj.offerStatus
                                                    }
                                                </td>
                                            )
                                        })
                                    }
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                    <td>
                                        &nbsp;
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style={{colspan: "2"}}>
                            &nbsp;
                        </td>
                    </tr>
                    <tr>
                        <td style={{colspan: "10"}} className="tdShade1">
                            <hr style={{backgroundColor:'black'}}/>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div style={{position:'fixed',bottom:'60px',padding:'10px',borderTop:'1px solid black',width:'100%'}}>
                                <button disabled={!this.props.viewOfferBtn} type="submit" name="submitFindApp" value="Search" class="btnban" onClick={this.offerSelect.bind(this)}>
                                    <u>V</u>iew Offers
                                </button>
                                &nbsp;&nbsp;
                                <button type="button" name="submitFindApp" value="Search" class="btnban" onClick="javascript:history.back();" accesskey="c">
                                    <u>C</u>ancel
                                </button>
                            </div>
                        </td>
                        <td>
                            <div style={{position:'fixed',bottom:'60px',padding:'10px',borderTop:'1px solid black',width:'100%'}}>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                        </td>
                    </tr>
                </table>
            </div>
        );
    }
}
const mapStateToProps = (state) => {
    return {
        searchList: state.reducerMock.searchResults,
        mockAcct: state.reducerMock.clickedMock,
        offerSearchList: state.reducerOffer.searchVOList,
        alSrcCde:state.reducerOffer.alSrcCde,
        viewOfferBtn:state.reducerOffer.viewOfferBtn,
    };
};
const mapDispatchToProps = (dispatch) => {
    return {
        callOfferApi: (mockNo, searchList) => {
            dispatch(callOfferApi(mockNo, searchList));
        }
    };
};
export default connect(mapStateToProps, mapDispatchToProps)(Offer);



-------------------------------------------------------------------------------------------------------------------------------------------------

C:\Maheshwar\workspace\ReactUI\src\components\ScanList.js

import React, { Component } from 'react';
import './../css/bootstrap.css';
import './../css/scanList.css';
import './../css/mockSearch.css';
import arrowUp from '../img/arrow_up.gif';
import arrowDown from '../img/arrow_down.gif';
import axios from 'axios';
import AppHeader from './AppHeader';
import {Redirect} from 'react-router';
import {localUrl,scanListConstants} from '../constants/DlosConstants';
import {scanListUIlabel} from '../constants/UILabel';
import {connect} from 'react-redux';
class ScanList extends Component {

    constructor(){
        super();
        this.state = {
            redirect:false,
            showMainApp:false,
            selectedQueueIndex : 0,
            foundApp:null,
            display:"none",
            queueLabledisplay:"hidden",
            reviewLabledisplay:"hidden",
            queueDefault:"",
            filterLabledisplay:"hidden",
            optionLabledisplay:"hidden",
            buttondisplay:"hidden",
            lobList:[{value:"Personal Loans",Description:"Personal Loans"}],
            queueList: [],
            displayReviewLevelList:[],
            reviewLevelList:[
                {value:"all",Description:"ALL"},
                {value:"quick",Description:"Quick"},
                {value:"medium",Description:"Medium"},
                {value:"detailed",Description:"Detailed"}
            ],
            displayFilterList:[],
            filterList:[
                {value:"channel",Description:"Channel"},
                {value:"segmentation",Description:"Segmentation"}
            ],
            channelOptionList:[
                {value:"4",Description:"Batch"},
                {value:"3",Description:"GUI"},
                {value:"2",Description:"Internet"}
            ],
            segmentationOptionList:[
                {value:"D",Description:"Broad Market Solicited"},
                {value:"M",Description:"Broad Market Unsolicited"},
                {value:"T",Description:"Cross Sell Solicited"},
                {value:"U",Description:"Cross Sell Unsolicited"},
                {value:"other",Description:"Other"}
            ],
            optionList:[],
            results:[],
            selectQueueCode:0,
            selectedQueueName:null,
            topBtn:"none",
            prevBtn:"none",
            nextBtn:"none",
            resultsVisibility:"none",
            reviewLevel:0,
            filter:0,
            filterOption:"",
            action:"",
            nextBtnClickCounter:0,
            offset:0,
            sortArrowImg:arrowDown,
            arrowUpOrDown : 1, //means up
            messageVisibility :"",
            noRecordfound:"none"
        };
        this.setQueueVisibility = this.setQueueVisibility.bind(this);
        this.setAllVisibility = this.setAllVisibility.bind(this);
        this.handleFilterChange=this.handleFilterChange.bind(this);
        this.loadQueus=this.loadQueus.bind(this);
        this.mainApplication = this.mainApplication.bind(this);
        this.callFetchRecordApi = this.callFetchRecordApi.bind(this);
    }

    getAppDetails(appID){
        this.setState({
            redirect:true
        })
    }
    mainApplication() {
        this.setState({
            showMainApp: true
        })
    }

    setQueueVisibility(event){
        if(event.target.value === '0'){
            this.setState({resultsVisibility:"none"});
            this.setState({queueLabledisplay:"hidden"});
            this.setState({reviewLabledisplay:"hidden"});
            this.setState({filterLabledisplay:"hidden"});
            this.setState({optionLabledisplay:"hidden"});
            this.setState({buttondisplay:"hidden"});
            this.setState({queueList:[]});
            this.setState({displayReviewLevelList:[]});
            this.setState({displayFilterList:[]});
            this.setState({optionList:[]});
        }else{
            this.setState({queueLabledisplay:"visible"});
            this.setState({displayReviewLevelList:this.state.reviewLevelList});
            this.setState({displayFilterList:this.state.filterList});
        }
    }

    setAllVisibility(event){
        this.setState({
            selectedQueueIndex:event.target.selectedIndex
        });

        this.setState({
            selectQueueCode:event.target.value,
        });
        if(event.target.value === '0'){
            this.setState({reviewLabledisplay:"hidden"});
            this.setState({filterLabledisplay:"hidden"});
            this.setState({optionLabledisplay:"hidden"});
            this.setState({buttondisplay:"hidden"});
            this.setState({displayReviewLevelList:[]});
            this.setState({displayFilterList:[]});
            this.setState({optionList:[]});
        }else{
            this.setState({queueLabledisplay:"visible"});
            this.setState({reviewLabledisplay:"visible"});
            this.setState({filterLabledisplay:"visible"});
            this.setState({optionLabledisplay:"visible"});
            this.setState({buttondisplay:"visible"});
            this.setState({displayReviewLevelList:this.state.reviewLevelList});
            this.setState({displayFilterList:this.state.filterList});
        }
    }

    handleFilterChange(event){
        this.setState({
            filter:event.target.value
        });
        if(event.target.value === scanListConstants.CHANNEL){
            this.setState({optionList:this.state.channelOptionList});
        }
        else if(event.target.value === scanListConstants.SEGMENTATION){
            this.setState({optionList:this.state.segmentationOptionList});
        }else {
            this.setState({optionList:[]});
        }
    }
    onChangeFilterOption(event){
        this.setState({
            filterOption:event.target.value
        })
    }
    onChangeFilterLvl(event){
        this.setState({
            reviewLevel:event.target.value
        })
    }
    callFetchRecordApi(action,offset){

        axios({
            method: 'post',
            url: localUrl.LOCAL_URL+'/adapter/executeService',
            data: {
                straction:action,
                dtfFlowSwitch:false,
                queueName:this.state.selectQueueCode,
                reviewlvl:this.state.reviewLevel,
                filter:this.state.filter,
                filteroption:this.state.filterOption,
                scanListVO:{
                    scanListOrder:"asc",
                    newApp:false,
                    updated:false,
                    cloaked:false
                },
                offset:offset,
                limit:50,
                authInfo:{
                    sessionId:"sUIxO1_HqeA9Q_gBXtYgPxM",
                    userId:"wseng00",
                    groupname:"NATL2",
                    centerCode:"RWD"
                },
                functionName:"retrieveScanList",
                refreshCache:false,
                requestId:"c6011090-2708-4c8d-a7b2-fd7427c84581"
            }
        }).then(function (response) {
                if(response.data===''){
                    this.setState({
                        results:[],
                        noRecordfound:""
                    });
                    return;
                }
                console.log(response.data.scanListRecords);
                this.setState({
                    messageVisibility:"none"
                });
                if(response.data.scanListRecords.length===0){
                    this.setState({
                        noRecordfound:""
                    });
                }
                if(response.data.scanListRecords.length===50){
                    this.setState({
                        nextBtn:"block"

                    });
                }else{
                    this.setState({
                        nextBtn:"none"
                    });
                }
                if(this.state.offset===50){
                    this.setState({
                        prevBtn:"block",
                    });
                }else if(this.state.offset===0){
                    this.setState({
                        prevBtn:"none",
                    });
                }
                this.setState({
                    results:  response.data.scanListRecords,
                    foundApp:response.data.scanListRecords.length + " Found",
                    topBtn:"block",
                    resultsVisibility:""
                });
            }.bind(this))
            .catch(function (error) {
                console.log(error);
            });
    }
    submitSearch(){
        this.callFetchRecordApi("appScanLst");
    }
    onBlurHeader=()=>{
        this.child.onBlurNav();
    };
    nextRecord(){
        this.setState({
            offset:this.state.offset+50
        },()=>{
            this.callFetchRecordApi("NextPage",this.state.offset);
        });
    }
    prevRecord(){
        this.setState({
            offset:this.state.offset-50
        },()=>{
            console.log(this.state.offset);
            this.callFetchRecordApi("PreviousPage",this.state.offset);
        });

    }
    loadQueus(event){
        axios({
            method: 'post',
            url: localUrl.LOCAL_URL+'/adapter/executeService',
            data: {
                dtfFlowSwitch: false,
                scanListVO: {
                    scanListOrder: "asc",
                    newApp: false,
                    updated: false,
                    cloaked: false
                },
                offset:0,
                limit:50,
                authInfo:{
                    sessionId:"y6cpAnmFbPCObquv790WpgA",
                    userId:"wseng00",
                    groupname:"NATL2",
                    centerCode:"RWD"
                },
                functionName:"retrieveScanList",
                refreshCache:false
            }
        }).then(function (response) {
                if(response.data===''){
                    this.setState({
                        queueList:[]
                    });
                    return;
                }
                console.log(response.data.queList);
                this.setState({
                    queueList:  response.data.queList,
                });
            }.bind(this))
            .catch(function (error) {
                console.log(error);
            });
        this.setQueueVisibility(event);
    }

    sort(){
        if(this.state.arrowUpOrDown === 1){
            this.setState({
                sortArrowImg:arrowDown
            },()=>{
                this.setState({
                    arrowUpOrDown :0
                })
            });
            let results = this.state.results;
            for(let i=0;i<results.length-1;i++){
                for(let j=0;j<results.length-i-1;j++) {
                    if (Date.parse(results[j].dateStr) < Date.parse(results[j + 1].dateStr)) {
                        let b = results[j + 1];
                        results[j + 1] = results[j];
                        results[j] = b;
                    }
                }
            }
            this.setState({
                results : results
            })
        }else{
            this.setState({
                sortArrowImg:arrowUp
            },()=>{
                this.setState({
                    arrowUpOrDown :1
                })
            });
            let results = this.state.results;
            for(let i=0;i<results.length-1;i++){
                for(let j=0;j<results.length-i-1;j++) {
                    if (Date.parse(results[j].dateStr) > Date.parse(results[j + 1].dateStr)) {
                        let b = results[j + 1];
                        results[j + 1] = results[j];
                        results[j] = b;
                    }
                }
            }
            this.setState({
                results : results
            })
        }


    }
    render() {
        if(this.state.redirect === true){
            return <Redirect push to = '/Baid'  />
        }
        let lobOptionList = this.state.lobList.map((lobOption)=> <option value={lobOption.value}>{lobOption.Description}</option>);
        let queueOptionList = this.state.queueList.map((queueOptions)=> <option value={queueOptions.code}>{queueOptions.description}</option>);
        let reviewLvlOptionList = this.state.displayReviewLevelList.map((reviewLvlOption)=> <option value={reviewLvlOption.value}>{reviewLvlOption.Description}</option>);
        let filterOptionList = this.state.displayFilterList.map((filterOption)=> <option value={filterOption.value}>{filterOption.Description}</option>);
        let optionOptionList = this.state.optionList.map((optionsOption)=> <option value={optionsOption.value}>{optionsOption.Description}</option>);
        return (
            <div>
                <AppHeader onRef={ref => (this.child = ref)}/>
                <table cellSpacing="0" cellPadding="0" className="tblmainfocus"  onClick={this.onBlurHeader}>
                    <tr>
                        <td>
                            <table  cellSpacing="0" cellPadding="0" border="0" width="100%">
                                <tr>
                                    <table width="100%" border="0" cellSpacing="0" cellPadding="0">
                                        <tr>
                                            <td align="left" valign="top"/>
                                        </tr>
                                        <tr>
                                            <td className="tdShade2"/>
                                        </tr>
                                        <tr>
                                            <td className="tdhead">{scanListUIlabel.SCAN_LIST}</td>
                                            <td><br/></td>
                                        </tr>
                                    </table>
                                </tr>
                                <tr>
                                    <td style={{align:"left", vAlign:"top", paddingLeft:"1px"}}>
                                        <div className="divbodyLayer">
                                            <table width="100%" border="0" cellSpacing="0" cellPadding="0">
                                                <tr>
                                                    <td>
                                                        <table width="100%" border="0" cellSpacing="0" cellPadding="0">
                                                            <tr>
                                                                <td>&nbsp;</td>
                                                                <td rowSpan="3" align="right" className="tdShade1">

                                                                </td>
                                                            </tr>
                                                            <tr><td><a ></a></td></tr>
                                                            <tr>
                                                                <td className="tdhead" colSpan="2">Select Scanlist:</td>
                                                            </tr>
                                                            <tr>
                                                                <td colSpan="2" className="tdfrmsmall">&nbsp;</td>
                                                            </tr>
                                                        </table>
                                                        <table width="100%" border="0" cellSpacing="0" cellPadding="0">
                                                            <tr>
                                                                <td width="3%" className="tdShade1">&nbsp;</td>
                                                                <td width="6%" className="tdShade1" >Line of Business</td>
                                                                <td width="2%" className="tdShade1">&nbsp;</td>
                                                                <td width="10%">
                                                                    <select size="1" className="slctpull" style={{width:100}}  onChange={this.loadQueus}>
                                                                        <option value="0">...</option>
                                                                        {lobOptionList}
                                                                    </select>
                                                                </td>
                                                                <td width="3%" className="tdShade1">&nbsp;</td>
                                                                <td width="8%" className="tdShade1"><div name="queueLabel" style = {{visibility:this.state.queueLabledisplay}}>Queue</div></td>
                                                                <td width="2%" className="tdShade1">&nbsp;</td>
                                                                <td>
                                                                    <select size="1" defaultValue={this.state.queueDefault} className="slctpull" style = {{visibility:this.state.queueLabledisplay}} onChange={this.setAllVisibility}>
                                                                        <option value="0" selected="selected">...</option>
                                                                        {queueOptionList}
                                                                    </select>
                                                                </td>
                                                                <td colSpan="5"/>
                                                            </tr>
                                                            <tr><td colSpan="5"><br /><input type="hidden" name="UserName" value=""/></td></tr>
                                                            <tr>
                                                                <td width="3%" className="tdShade1">&nbsp;</td>
                                                                <td width="6%" className="tdShade1"><div id="reviewLvlLbl" style = {{visibility:this.state.reviewLabledisplay}}>Review Level</div></td>
                                                                <td width="2%" className="tdShade1">&nbsp;</td>
                                                                <td width="10%">
                                                                    <select property="reviewLvl" size="1" className="slctpull"  style={{width:100, visibility:this.state.reviewLabledisplay}} onChange={this.onChangeFilterLvl.bind(this)}>
                                                                        <option value="0" selected="selected">...</option>
                                                                        {reviewLvlOptionList}
                                                                    </select>
                                                                </td>

                                                                <td width="3%" className="tdShade1">&nbsp;</td>
                                                                <td width="6%" className="tdShade1"><div id="filterLbl" style = {{visibility:this.state.filterLabledisplay}}>Filter</div></td>
                                                                <td width="2%" className="tdShade1">&nbsp;</td>
                                                                <td width="10%">
                                                                    <select property="filter" size="1" className="slctpull" style={{width:"100px", visibility:this.state.filterLabledisplay}} onChange={this.handleFilterChange}>
                                                                        <option value="0" selected="selected">...</option>
                                                                        {filterOptionList}
                                                                    </select>
                                                                </td>
                                                                <td width="3%" className="tdShade1">&nbsp;</td>


                                                                <td width="8%" className="tdShade1"><div id="optionLbl" style = {{visibility:this.state.optionLabledisplay}}>Option</div></td>
                                                                <td width="2%" className="tdShade1">&nbsp;</td>
                                                                <td width="10%">
                                                                    <select property="filterOption" size="1" className="slctpull" style={{width:"120px",visibility:this.state.optionLabledisplay}} onChange={this.onChangeFilterOption.bind(this)} >
                                                                        <option value="0" selected="selected">...</option>
                                                                        {optionOptionList}
                                                                    </select>
                                                                </td>
                                                                <td colSpan="4">
                                                                    &nbsp;&nbsp;
                                                                    <button onClick={this.submitSearch.bind(this)} type="button" name="scanListBtn" style = {{visibility:this.state.buttondisplay}}
                                                                            value="Scan List" className="btnban"  >S<u>u</u>bmit
                                                                    </button>
                                                                </td>
                                                                <td>
                                                                </td>
                                                            </tr>


                                                        </table>
                                                        <table style={{display:this.state.messageVisibility}}  width="97%" border="0" cellSpacing="0" cellPadding="0" className="sortable">
                                                            <tr>
                                                                <td className="tdhead" colspan="11" align="center">System Message<br/>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td className="tdShade1" colspan="11" align="center"><pre>Displays a system message to the user.<br/>The message can be changed by a Capstone CWS user.<br/>The message will be stored in a GUI Calc that once <br/>changed will automatically be picked up by this screen.<br/> </pre>
                                                                </td>
                                                            </tr>
                                                        </table>
                                                        <table style={{display:this.state.resultsVisibility}} id="resultsTable" width="97%" border="0" cellSpacing="0" cellPadding="0" className="sortable">
                                                            <tr>
                                                                <td colSpan="1"  className="tdHead" id="cellStateTitle" style={{fontSize:'13px',textAlign: 'left',fontStyle: 'sans-serif',fontWeight: 'bold'}}> {queueOptionList[this.state.selectedQueueIndex-1]}</td>
                                                                <td colSpan="6"  className="tdHead" id="cellStateTitle" style={{fontSize:'14px',textAlign: 'left',fontStyle: 'sans-serif',fontWeight: 'bold'}}> {this.state.foundApp}
                                                                </td>
                                                            </tr>
                                                            <tr style={{display:this.state.noRecordfound}}>
                                                                <td><span className='tdcntntR'>No Records Found.</span></td>
                                                            </tr>
                                                            <tr>
                                                                <td colspan="3" align="left">
                                                                    <button style={{display:this.state.prevBtn}} type="button" name="prevButton" value="Prev"
                                                                            className="btnban" accessKey="r" onClick={this.prevRecord.bind(this)}>P<u>r</u>ev</button>
                                                                </td>
                                                                <td colspan="5" align="right">
                                                                    <button  style={{display:this.state.nextBtn}} type="button" name="nextButton" value="Next"
                                                                             className="btnban" accessKey="x" onClick={this.nextRecord.bind(this)}>Ne<u>x</u>t</button>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td align="left">
                                                                    <button style={{display:this.state.topBtn}} type="button" name="topButton" value="Top"
                                                                            className="btnban" accessKey="t" onClick=""><u>T</u>op</button>
                                                                </td>
                                                            </tr>


                                                            <tr  style={{display:this.state.resultHeader}}>
                                                                <td className="tblRowHead" width="14%" id="rec"><span className="tdhead">&nbsp;Recieved</span><img onClick={this.sort.bind(this)} style={{cursor:'pointer'}} src={this.state.sortArrowImg}/></td>
                                                                <td className="tblRowHead" width="14%"><span className="tdhead">&nbsp;Application ID</span></td>
                                                                <td className="tblRowHead" width="14%"><span className="tdhead">&nbsp;Last Name</span></td>
                                                                <td className="tblRowHead" width="11%"><span className="tdhead">&nbsp;Product</span></td>
                                                                <td className="tblRowHead" width="12%"><span className="tdhead">&nbsp;Amount</span></td>
                                                                <td className="tblRowHead" width="15%" nowRap><span className="tdhead">&nbsp;Date Entered</span></td>
                                                                <td className="tblRowHead" ><span className="tdhead">&nbsp;Status</span></td>

                                                            </tr>
                                                            {
                                                                this.state.results.map((result, i) => {
                                                                    return <tr className="tdshade1" style={{fontSize:'13px',fontStyle: 'sans-serif'}}>
                                                                        <td key={i}  ><input type="radio" name="appRadio" value="value"  />
                                                                            &nbsp;&nbsp;&nbsp;{result.dateStr}
                                                                        </td>
                                                                        <td  key={i}><u><a style={{cursor:'pointer',color:'#1a1aff'}} href="javascript:void(0)"
                                                                                           id="randomID"
                                                                                           onClick={()=>this.getAppDetails(result.appID)}>{result.appID}
                                                                        </a></u></td>
                                                                        <td>{result.lastName}</td>
                                                                        <td>{result.product}</td>
                                                                        <td>{result.amount}</td>
                                                                        <td>{result.dateEntered}</td>
                                                                        <td>{result.status}</td>
                                                                    </tr>
                                                                })
                                                            }
                                                            <tr>
                                                                <td colspan="3" align="left">
                                                                    <button  style={{display:this.state.prevBtn}} type="button" name="prevButton" value="Prev"
                                                                             className="btnban" accessKey="r" onClick={this.prevRecord.bind(this)}>P<u>r</u>ev</button>
                                                                </td>
                                                                <td colspan="5" align="right">
                                                                    <button  style={{display:this.state.nextBtn}} type="button" name="nextButton" value="Next"
                                                                             className="btnban" accessKey="x" onClick={this.nextRecord.bind(this)}>Ne<u>x</u>t</button>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>
                                                                    <button  style={{display:this.state.topBtn}} type="button" name="topButton" value="Top"
                                                                             className="btnban" accessKey="t" onClick=""><u>T</u>op</button>
                                                                </td>

                                                            </tr>
                                                        </table>
                                                    </td>
                                                </tr>
                                            </table>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                </table>
            </div>
        );
    }
}
const mapStateToProps = (state) => {
    return {
        searchList: state.reducerMock.searchResults,
        mockAcct: state.reducerMock.clickedMock,
        offerSearchList: state.reducerOffer.searchVOList,
        alSrcCde:state.reducerOffer.alSrcCde,
        viewOfferBtn:state.reducerOffer.viewOfferBtn,
    };
};
const mapDispatchToProps = (dispatch) => {
    return {
        callOfferApi: (mockNo, searchList) => {
        }
    };
};
export default connect(mapStateToProps, mapDispatchToProps)(ScanList);

-------------------------------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\components\SelectOffer.js


import React, { Component } from 'react';
import './../css/bootstrap.css';
import './../css/scanList.css';
import './../css/mockSearch.css';
import AppHeader from './AppHeader';
import {callSelectOfferApi} from '../actions/selectOfferAction';
import {connect} from 'react-redux';
import {Redirect} from 'react-router';
class SelectOffer extends Component {
    constructor(props) {
        super(props);
        this.props.callSelectOfferApi(false,this.props.searchVO,this.props.alSrcCde);


        this.state ={
            offerDetailsDisplay:"none",
            redirect:false,
            searchVOList:[],

        }
    }

    setofferDetailsDisplay(){
        this.setState({offerDetailsDisplay:""});
    }



    render(){

        return(
            <div>
                <AppHeader onRef={ref => (this.child = ref)}/>
                <table cellSpacing="0" cellPadding="0" className="tblmainfocus">
                    <tr>
                        <td>
                            <table  cellSpacing="0" cellPadding="0" border="0" width="100%">
                                <tr>
                                    <table width="100%" border="0" cellSpacing="0" cellPadding="0">
                                        <tr>
                                            <td align="left" valign="top"/>
                                        </tr>
                                        <tr>
                                            <td className="tdhead"/>
                                        </tr>
                                        <tr className="tdhead">
                                            <td className="tdhead" style={{width:"30%",fontWeight:'bold',fontSize:'13px'}}>Disclosure</td>
                                            <td><br/></td>
                                        </tr>
                                    </table>
                                </tr>
                                <hr style={{backgroundColor:'black'}}/>
                                <tr><td><a ></a></td></tr>
                                <table style={{cellSpacing:"0", cellPadding:"0", width:"100%", border:"0"}} >
                                    <tbody>
                                    <tr>
                                        <td>
                                            <table style={{width:"100%", border:"0"}}>
                                                <tbody>
                                                <tr>
                                                    <td className="tdshade1" style={{width:"20%", colSpan:"2",fontSize:'13px',fontWeight:'bold',color:'navy'}} noWrap>
                                                        Mock#:
                                                    </td>
                                                    <td className="tdshade1" style={{width:"20%",fontSize:'13px',fontWeight:'bold',color:'navy'}} noWrap>Source Code: </td>
                                                    <td style={{width:"35%"}}>&nbsp; </td>
                                                    <td style={{width:"35%"}}>&nbsp; </td>

                                                </tr>

                                                <tr>
                                                    <td className="tdhead" style={{colSpan:"2"}}>
                                                        {
                                                            this.props.searchVO.map((obj,index) =>{
                                                                return(
                                                                    <td  className="tdshade1">
                                                                        {
                                                                            obj.mockAccNum
                                                                        }
                                                                    </td>
                                                                )
                                                            })
                                                        }
                                                    </td>
                                                    <td><input className="txtregular" style={{maxLength:"9", size:"10"}} name="searchForm"/></td>
                                                </tr>
                                                <tr>
                                                    <td></td>
                                                </tr>
                                                </tbody>
                                            </table>

                                            <hr style={{backgroundColor:'black'}}/>

                                            <div style={{display:this.state.offerDetailsDisplay}}>
                                                <fieldset className="tblthin">
                                                    <legend className="tdheadsmall" >Offer Details </legend>
                                                    <table style={{width:"100%"}}>
                                                        <tbody>
                                                        <tr>
                                                            <td style={{fontSize:'14px',color:'navy',fontWeight:'bold'}} className="tdshade1"><b>Loan amount range:</b></td>
                                                            <td className="tdshade1">
                                                                {this.props.searchVOList.map((method, methodIndex) => {
                                                                    return method.disResultLst.map((unit, unitIndex) => (
                                                                        <td style={{fontSize:'13px',color:'navy'}} className="tdshade1">{unit.loanRng}</td>
                                                                    ));
                                                                })}
                                                            </td></tr>
                                                        <tr>
                                                            <td   style={{fontSize:'14px',color:'navy',fontWeight:'bold'}}className="tdshade1"><b>Agent Talking Point:</b></td>
                                                            <td className="tdshade1">
                                                                {this.props.searchVOList.map((method, methodIndex) => {
                                                                    return method.disResultLst.map((unit, unitIndex) => (
                                                                        <td  style={{fontSize:'13px',color:'navy'}} className="tdshade1">{unit.offUndTxt}</td>
                                                                    ));
                                                                })}
                                                            </td></tr>
                                                        <tr>
                                                            <td   style={{fontSize:'14px',color:'navy',fontWeight:'bold'}}className="tdshade1"><b>Offer Disclosure:</b></td>
                                                            <td className="tdshade1">
                                                                {this.props.searchVOList.map((method, methodIndex) => {
                                                                    return method.disResultLst.map((unit, unitIndex) => (
                                                                        <td  style={{fontSize:'13px',color:'navy'}}  className="tdshade1">{unit.offerDiscr}</td>
                                                                    ));
                                                                })}
                                                            </td></tr>
                                                        <tr>
                                                            <td style={{colSpan:"2"}}>&nbsp;</td>
                                                        </tr>
                                                        </tbody>
                                                    </table>
                                                </fieldset>
                                            </div>
                                            <table style={{cellSpacing:"0", cellPadding:"0", width:"100%", border:"0"}}>
                                                <tbody>
                                                <tr>
                                                    <td style={{colSpan:"2"}}>
                                                        <table cellSpacing="0" cellPadding="0" width="100%" border="0">
                                                            <tbody>
                                                            <tr>
                                                                <td className="tblRowHead" style={{width:"4%"}}>&nbsp; </td>
                                                                <td className="tblRowHead" style={{width:"10%"}}><span className="tdhead">Source Code </span></td>
                                                                <td className="tblRowHead" style={{width:"15%"}}><span className="tdhead">Product</span> </td>
                                                                <td className="tblRowHead" style={{width:"10%"}}><span className="tdhead">Vanity Offer Code</span> </td>
                                                                <td className="tblRowHead" style={{width:"10%"}} wrap><span className="tdhead">Interest Rate Range</span> </td>
                                                                <td className="tblRowHead" style={{width:"10%"}}><span className="tdhead">Expiration Date</span> </td>
                                                                <td className="tblRowHead" style={{width:"5%"}}><span className="tdhead">Source Channel</span> </td>
                                                                <td className="tblRowHead" style={{width:"10%"}}><span className="tdhead">Application Type</span> </td>
                                                                <td className="tblRowHead" style={{width:"15%"}}><span className="tdhead">Relationship ID</span> </td>
                                                                <td className="tblRowHead" style={{width:"20%"}}><span className="tdhead">Relationship Type</span> </td>

                                                            </tr>
                                                            <tr>
                                                                <td><input type="radio" name="radioValue"  onClick={()=> this.setofferDetailsDisplay()}/></td>

                                                                <td><span className="tdshade1">
                                                    {
                                                        this.props.alSrcCde.map((obj,index) =>{
                                                            return(
                                                                <td  style={{fontSize:'13px',color:'navy'}} className="tdshade1">
                                                                    {
                                                                        obj.offerCode
                                                                    }
                                                                </td>
                                                            )
                                                        })
                                                    }
                                            </span> </td>
                                                                <td><span className="tdshade1">

                                                   {this.props.searchVOList.map((method, methodIndex) => {
                                                       return method.disResultLst.map((unit, unitIndex) => (
                                                           <td  style={{fontSize:'13px',color:'navy'}} className="tdshade1">{unit.prizeName}</td>
                                                       ));
                                                   })}


                                            </span> </td>
                                                                <td><span className="tdshade1">
                                                {this.props.searchVOList.map((method, methodIndex) => {
                                                    return method.disResultLst.map((unit, unitIndex) => (
                                                        <td  style={{fontSize:'13px',color:'navy'}} className="tdshade1">{unit.vanityOfferCode}</td>
                                                    ));
                                                })}

                                            </span> </td>
                                                                <td><span className="tdshade1">
                                                 {this.props.searchVOList.map((method, methodIndex) => {
                                                     return method.disResultLst.map((unit, unitIndex) => (
                                                         <td  style={{fontSize:'13px',color:'navy'}}  className="tdshade1">{unit.minAPR}</td>
                                                     ));
                                                 })}
                                                                    -
                                                                    {this.props.searchVOList.map((method, methodIndex) => {
                                                                        return method.disResultLst.map((unit, unitIndex) => (
                                                                            <td  style={{fontSize:'13px',color:'navy'}}  className="tdshade1">{unit.maxAPR}</td>
                                                                        ));
                                                                    })}
                                            </span> </td>
                                                                <td><span className="tdshade1">
                                                {this.props.searchVOList.map((method, methodIndex) => {
                                                    return method.disResultLst.map((unit, unitIndex) => (
                                                        <td  style={{fontSize:'13px',color:'navy'}}  className="tdshade1">{unit.offerCodeEndDate}</td>
                                                    ));
                                                })}


                                            </span> </td>
                                                                <td><span className="tdshade1"></span></td>
                                                                <td><span className="tdshade1">
                                               {this.props.searchVOList.map((method, methodIndex) => {
                                                   return method.disResultLst.map((unit, unitIndex) => (
                                                       <td  style={{fontSize:'13px',color:'navy'}}  className="tdshade1">{unit.loanApplicationTypeCode}</td>
                                                   ));
                                               })}


                                            </span> </td>
                                                                <td><span className="tdshade1">
                                                {this.props.searchVOList.map((method, methodIndex) => {
                                                    return method.disResultLst.map((unit, unitIndex) => (
                                                        <td   style={{fontSize:'13px',color:'navy'}} className="tdshade1">{unit.existingRelationshipID}</td>
                                                    ));
                                                })}

                                            </span></td>
                                                                <td><span className="tdshade1">
                                                {this.props.searchVOList.map((method, methodIndex) => {
                                                    return method.disResultLst.map((unit, unitIndex) => (
                                                        <td   style={{fontSize:'13px',color:'navy'}} className="tdshade1">{unit.existingRelationshipType}</td>
                                                    ));
                                                })}

                                            </span></td>
                                                            </tr>


                                                            <tr>
                                                                <td style={{colSpan:"9"}}>
                                                                    <table style={{cellSpacing:"0", cellPadding:"0", width:"100%", border:"0"}}>
                                                                        <tbody>
                                                                        <tr>
                                                                            <td>&nbsp; </td>
                                                                            <td style={{align:"right"}}>&nbsp; </td>
                                                                        </tr>
                                                                        </tbody>
                                                                    </table>
                                                                </td>
                                                            </tr>
                                                            </tbody>
                                                        </table>
                                                    </td>

                                                    <td style={{colSpan:"2"}}>&nbsp;</td>
                                                </tr>
                                                <tr>
                                                    <td className="tdshade1" style={{colSpan:"2"}}>&nbsp; </td>
                                                    <td colSpan="2" noWrap style={{align:"right"}}>&nbsp; </td>
                                                </tr>
                                                <tr>
                                                    <td className="tdshade" style={{colSpan:"6"}}>
                                                        <hr style={{backgroundColor:'black'}}/>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <button  class="btnban">B<u>e</u>gin Application</button> &nbsp;&nbsp;&nbsp;&nbsp;


                                                        &nbsp;&nbsp;&nbsp;&nbsp;<button  class="btnban"><u>C</u>ancel</button>
                                                    </td>
                                                    <td>&nbsp; </td>
                                                    <td>&nbsp; </td>
                                                    <td>&nbsp; </td>
                                                    <td>&nbsp; </td>
                                                    <td>&nbsp; </td>
                                                </tr>
                                                </tbody>
                                            </table>
                                        </td>
                                    </tr>
                                    </tbody>
                                </table>&nbsp; &nbsp; &nbsp;
                            </table>
                        </td>
                    </tr>
                </table>
            </div>
        );
    }
}
const mapStateToProps = (state) => {
    return {
        mockAcct:state.reducerMock.clickedMock,
        searchVOList:state.reducerSelectOffer.searchVOList,
        searchVO:state.reducerOffer.searchVOList,
        alSrcCde:state.reducerOffer.alSrcCde
    };
};
const mapDispatchToProps = (dispatch) => {
    return {
        callSelectOfferApi: (unsolicited,searchVO,alSrcCde) => {
            dispatch(callSelectOfferApi(unsolicited,searchVO,alSrcCde));
        }

    };

};

export default connect(mapStateToProps, mapDispatchToProps)(SelectOffer);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\constants\DlosConstants.js

export const loginConstants = {
    PLS_ENTER_REF_ID : "Please enter your UserId",
    PLS_ENTER_PASS : "Please enter your password",
    PLS_ENTER_BOTH :"Please enter your UserId & password",
    WRONG_CREDENT :"RACF ID / password incorrect",
    SUCCESS : "success",
    PLEASE_ENTER_UID_PASS:"Please enter your RACF ID, password and click on the \"Login\" button.",
    EXTENTION_MANDATORY:"Note: Extension is not a mandatory field for login, and the value would be used during call recording only."
};

export const mockSearchConstants = {
    ATLEAST_ONE_CREDEN : "You have to enter atleast one search Criteria.",
    MOCK_NO_MISSING:"Please provide Shortened Mock Number",
    EITHER_MOCK_ACC:"Please provide either \n - Shortened Invitation Number Or \n - Account Number",
    EITHER_MOCK_NAME:"Please provide either \n - Shortened Invitation Number Or \n - Name",
    EITHER_ACC_NAME:"Please provide either Account Number Or \n - Name",
    INVALID_MOCK:"Invalid mock#",
    INVALID_NAME:"Invalid name/zip",
    PLEASE_ENTER_NO:"Please enter numbers only here",

};
export const offerConstants = {
    NO_DATA: "No data available"
};
export const localUrl = {
    LOCAL_URL : "http://localhost:8091"
};
export const scanListConstants={
    CHANNEL:"channel",
    SEGMENTATION:"segmentation"
};

---------------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\constants\UILabel.js


export const loginUIlabel = {
    OPERATOR_ID: "Operator ID*",
    PASSWORD:"Password*",
    EXTENSION:"Extension",

};
export const scanListUIlabel = {
    SCAN_LIST: "Scan List",
    PASSWORD:"Password*",
    EXTENSION:"Extension",

};
export const mockUIlabel = {
    MOCK_ACC_NAME_SRCH: "Mock Account/Name Search",
    INVITATION_SRCH:"Shortened Invitation Search:",
    MOCK_NO:"Mock #:",
    VANITY_OFFER_CODE:"Vanity Offer Code #:",
    LOAN_ACC_NO:"Loan Account #:",
    FIRST_NAME:"First Name/Initial :",
    LAST_NAME:"Last Name :",
    MOCK_COLUMN:" Mock/Account Number",
    FIRST_COLUMN:"First",
    MI_COLUMN:"MI",
    LAST_COLUMN:"Last",
    ADDRESS_COLUMN:"Address",
    ZIP_COLUMN:"Zip",
    PHONE_NO_COLUMN:"Phone#",
    NONE:"None"

};
export const baidUILabel = {
    FILTER:"Filter By",
    REVIEW_RULES:"Review Rules",
    LTR:"Letter",
    ANALYST:"Analyst",
    DATE:'Date/Time',
    QUEUE_NUMBER:'Rte',
    CMNT:'Comments'
};


------------------------------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\css\bootstrap.css

/*!
 * Bootstrap v4.0.0 (https://getbootstrap.com)
 * Copyright 2011-2018 The Bootstrap Authors
 * Copyright 2011-2018 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
:root {
  --blue: #007bff;
  --indigo: #6610f2;
  --purple: #6f42c1;
  --pink: #e83e8c;
  --red: #dc3545;
  --orange: #fd7e14;
  --yellow: #ffc107;
  --green: #28a745;
  --teal: #20c997;
  --cyan: #17a2b8;
  --white: #fff;
  --gray: #6c757d;
  --gray-dark: #343a40;
  --primary: #007bff;
  --secondary: #6c757d;
  --success: #28a745;
  --info: #17a2b8;
  --warning: #ffc107;
  --danger: #dc3545;
  --light: #f8f9fa;
  --dark: #343a40;
  --breakpoint-xs: 0;
  --breakpoint-sm: 576px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 992px;
  --breakpoint-xl: 1200px;
  --font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  --font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-family: sans-serif;
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -ms-overflow-style: scrollbar;
  -webkit-tap-highlight-color: transparent;
}

@-ms-viewport {
  width: device-width;
}

article, aside, dialog, figcaption, figure, footer, header, hgroup, main, nav, section {
  display: block;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #212529;
  text-align: left;
  background-color: #fff;
}

[tabindex="-1"]:focus {
  outline: 0 !important;
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: 0.5rem;
}

p {
  margin-top: 0;
  margin-bottom: 1rem;
}

abbr[title],
abbr[data-original-title] {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  border-bottom: 0;
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: 700;
}

dd {
  margin-bottom: .5rem;
  margin-left: 0;
}

blockquote {
  margin: 0 0 1rem;
}

dfn {
  font-style: italic;
}

b,
strong {
  font-weight: bolder;
}

small {
  font-size: 80%;
}

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sub {
  bottom: -.25em;
}

sup {
  top: -.5em;
}

a {
  color: #007bff;
  text-decoration: none;
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
}

a:hover {
  color: #0056b3;
  text-decoration: underline;
}

a:not([href]):not([tabindex]) {
  color: inherit;
  text-decoration: none;
}

a:not([href]):not([tabindex]):hover, a:not([href]):not([tabindex]):focus {
  color: inherit;
  text-decoration: none;
}

a:not([href]):not([tabindex]):focus {
  outline: 0;
}

pre,
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

pre {
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
  -ms-overflow-style: scrollbar;
}

figure {
  margin: 0 0 1rem;
}

img {
  vertical-align: middle;
  border-style: none;
}

svg:not(:root) {
  overflow: hidden;
}

table {
  border-collapse: collapse;
}

caption {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  color: #6c757d;
  text-align: left;
  caption-side: bottom;
}

th {
  text-align: inherit;
}

label {
  display: inline-block;
  margin-bottom: .5rem;
}

button {
  border-radius: 0;
}

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

input[type="radio"],
input[type="checkbox"] {
  box-sizing: border-box;
  padding: 0;
}

input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
  -webkit-appearance: listbox;
}

textarea {
  overflow: auto;
  resize: vertical;
}

fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
}

legend {
  display: block;
  width: 100%;
  max-width: 100%;
  padding: 0;
  margin-bottom: .5rem;
  font-size: 1.5rem;
  line-height: inherit;
  color: inherit;
  white-space: normal;
}

progress {
  vertical-align: baseline;
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  outline-offset: -2px;
  -webkit-appearance: none;
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button;
}

output {
  display: inline-block;
}

summary {
  display: list-item;
  cursor: pointer;
}

template {
  display: none;
}

[hidden] {
  display: none !important;
}

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  margin-bottom: 0.5rem;
  font-family: inherit;
  font-weight: 500;
  line-height: 1.2;
  color: inherit;
}

h1, .h1 {
  font-size: 2.5rem;
}

h2, .h2 {
  font-size: 2rem;
}

h3, .h3 {
  font-size: 1.75rem;
}

h4, .h4 {
  font-size: 1.5rem;
}

h5, .h5 {
  font-size: 1.25rem;
}

h6, .h6 {
  font-size: 1rem;
}

.lead {
  font-size: 1.25rem;
  font-weight: 300;
}

.display-1 {
  font-size: 6rem;
  font-weight: 300;
  line-height: 1.2;
}

.display-2 {
  font-size: 5.5rem;
  font-weight: 300;
  line-height: 1.2;
}

.display-3 {
  font-size: 4.5rem;
  font-weight: 300;
  line-height: 1.2;
}

.display-4 {
  font-size: 3.5rem;
  font-weight: 300;
  line-height: 1.2;
}

hr {
  margin-top: 1rem;
  margin-bottom: 1rem;
  border: 0;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
}

small,
.small {
  font-size: 80%;
  font-weight: 400;
}

mark,
.mark {
  padding: 0.2em;
  background-color: #fcf8e3;
}

.list-unstyled {
  padding-left: 0;
  list-style: none;
}

.list-inline {
  padding-left: 0;
  list-style: none;
}

.list-inline-item {
  display: inline-block;
}

.list-inline-item:not(:last-child) {
  margin-right: 0.5rem;
}

.initialism {
  font-size: 90%;
  text-transform: uppercase;
}

.blockquote {
  margin-bottom: 1rem;
  font-size: 1.25rem;
}

.blockquote-footer {
  display: block;
  font-size: 80%;
  color: #6c757d;
}

.blockquote-footer::before {
  content: "\2014 \00A0";
}

.img-fluid {
  max-width: 100%;
  height: auto;
}

.img-thumbnail {
  padding: 0.25rem;
  background-color: #fff;
  border: 1px solid #dee2e6;
  border-radius: 0.25rem;
  max-width: 100%;
  height: auto;
}

.figure {
  display: inline-block;
}

.figure-img {
  margin-bottom: 0.5rem;
  line-height: 1;
}

.figure-caption {
  font-size: 90%;
  color: #6c757d;
}

code,
kbd,
pre,
samp {
  font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

code {
  font-size: 87.5%;
  color: #e83e8c;
  word-break: break-word;
}

a > code {
  color: inherit;
}

kbd {
  padding: 0.2rem 0.4rem;
  font-size: 87.5%;
  color: #fff;
  background-color: #212529;
  border-radius: 0.2rem;
}

kbd kbd {
  padding: 0;
  font-size: 100%;
  font-weight: 700;
}

pre {
  display: block;
  font-size: 87.5%;
  color: #212529;
}

pre code {
  font-size: inherit;
  color: inherit;
  word-break: normal;
}

.pre-scrollable {
  max-height: 340px;
  overflow-y: scroll;
}

.container {
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: 576px) {
  .container {
    max-width: 540px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 720px;
  }
}

@media (min-width: 992px) {
  .container {
    max-width: 960px;
  }
}

@media (min-width: 1200px) {
  .container {
    max-width: 1140px;
  }
}

.container-fluid {
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -15px;
  margin-left: -15px;
}

.no-gutters {
  margin-right: 0;
  margin-left: 0;
}

.no-gutters > .col,
.no-gutters > [class*="col-"] {
  padding-right: 0;
  padding-left: 0;
}

.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col,
.col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm,
.col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md,
.col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg,
.col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl,
.col-xl-auto {
  position: relative;
  width: 100%;
  min-height: 1px;
  padding-right: 15px;
  padding-left: 15px;
}

.col {
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  max-width: 100%;
}

.col-auto {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: auto;
  max-width: none;
}

.col-1 {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 8.333333%;
  flex: 0 0 8.333333%;
  max-width: 8.333333%;
}

.col-2 {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 16.666667%;
  flex: 0 0 16.666667%;
  max-width: 16.666667%;
}

.col-3 {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 25%;
  flex: 0 0 25%;
  max-width: 25%;
}

.col-4 {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 33.333333%;
  flex: 0 0 33.333333%;
  max-width: 33.333333%;
}

.col-5 {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 41.666667%;
  flex: 0 0 41.666667%;
  max-width: 41.666667%;
}

.col-6 {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 50%;
  flex: 0 0 50%;
  max-width: 50%;
}

.col-7 {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 58.333333%;
  flex: 0 0 58.333333%;
  max-width: 58.333333%;
}

.col-8 {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 66.666667%;
  flex: 0 0 66.666667%;
  max-width: 66.666667%;
}

.col-9 {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 75%;
  flex: 0 0 75%;
  max-width: 75%;
}

.col-10 {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 83.333333%;
  flex: 0 0 83.333333%;
  max-width: 83.333333%;
}

.col-11 {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 91.666667%;
  flex: 0 0 91.666667%;
  max-width: 91.666667%;
}

.col-12 {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 100%;
  flex: 0 0 100%;
  max-width: 100%;
}

.order-first {
  -webkit-box-ordinal-group: 0;
  -ms-flex-order: -1;
  order: -1;
}

.order-last {
  -webkit-box-ordinal-group: 14;
  -ms-flex-order: 13;
  order: 13;
}

.order-0 {
  -webkit-box-ordinal-group: 1;
  -ms-flex-order: 0;
  order: 0;
}

.order-1 {
  -webkit-box-ordinal-group: 2;
  -ms-flex-order: 1;
  order: 1;
}

.order-2 {
  -webkit-box-ordinal-group: 3;
  -ms-flex-order: 2;
  order: 2;
}

.order-3 {
  -webkit-box-ordinal-group: 4;
  -ms-flex-order: 3;
  order: 3;
}

.order-4 {
  -webkit-box-ordinal-group: 5;
  -ms-flex-order: 4;
  order: 4;
}

.order-5 {
  -webkit-box-ordinal-group: 6;
  -ms-flex-order: 5;
  order: 5;
}

.order-6 {
  -webkit-box-ordinal-group: 7;
  -ms-flex-order: 6;
  order: 6;
}

.order-7 {
  -webkit-box-ordinal-group: 8;
  -ms-flex-order: 7;
  order: 7;
}

.order-8 {
  -webkit-box-ordinal-group: 9;
  -ms-flex-order: 8;
  order: 8;
}

.order-9 {
  -webkit-box-ordinal-group: 10;
  -ms-flex-order: 9;
  order: 9;
}

.order-10 {
  -webkit-box-ordinal-group: 11;
  -ms-flex-order: 10;
  order: 10;
}

.order-11 {
  -webkit-box-ordinal-group: 12;
  -ms-flex-order: 11;
  order: 11;
}

.order-12 {
  -webkit-box-ordinal-group: 13;
  -ms-flex-order: 12;
  order: 12;
}

.offset-1 {
  margin-left: 8.333333%;
}

.offset-2 {
  margin-left: 16.666667%;
}

.offset-3 {
  margin-left: 25%;
}

.offset-4 {
  margin-left: 33.333333%;
}

.offset-5 {
  margin-left: 41.666667%;
}

.offset-6 {
  margin-left: 50%;
}

.offset-7 {
  margin-left: 58.333333%;
}

.offset-8 {
  margin-left: 66.666667%;
}

.offset-9 {
  margin-left: 75%;
}

.offset-10 {
  margin-left: 83.333333%;
}

.offset-11 {
  margin-left: 91.666667%;
}

@media (min-width: 576px) {
  .col-sm {
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    max-width: 100%;
  }
  .col-sm-auto {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 auto;
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }
  .col-sm-1 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 8.333333%;
    flex: 0 0 8.333333%;
    max-width: 8.333333%;
  }
  .col-sm-2 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 16.666667%;
    flex: 0 0 16.666667%;
    max-width: 16.666667%;
  }
  .col-sm-3 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-sm-4 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 33.333333%;
    flex: 0 0 33.333333%;
    max-width: 33.333333%;
  }
  .col-sm-5 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 41.666667%;
    flex: 0 0 41.666667%;
    max-width: 41.666667%;
  }
  .col-sm-6 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-sm-7 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 58.333333%;
    flex: 0 0 58.333333%;
    max-width: 58.333333%;
  }
  .col-sm-8 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 66.666667%;
    flex: 0 0 66.666667%;
    max-width: 66.666667%;
  }
  .col-sm-9 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 75%;
    flex: 0 0 75%;
    max-width: 75%;
  }
  .col-sm-10 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 83.333333%;
    flex: 0 0 83.333333%;
    max-width: 83.333333%;
  }
  .col-sm-11 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 91.666667%;
    flex: 0 0 91.666667%;
    max-width: 91.666667%;
  }
  .col-sm-12 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
    max-width: 100%;
  }
  .order-sm-first {
    -webkit-box-ordinal-group: 0;
    -ms-flex-order: -1;
    order: -1;
  }
  .order-sm-last {
    -webkit-box-ordinal-group: 14;
    -ms-flex-order: 13;
    order: 13;
  }
  .order-sm-0 {
    -webkit-box-ordinal-group: 1;
    -ms-flex-order: 0;
    order: 0;
  }
  .order-sm-1 {
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
  .order-sm-2 {
    -webkit-box-ordinal-group: 3;
    -ms-flex-order: 2;
    order: 2;
  }
  .order-sm-3 {
    -webkit-box-ordinal-group: 4;
    -ms-flex-order: 3;
    order: 3;
  }
  .order-sm-4 {
    -webkit-box-ordinal-group: 5;
    -ms-flex-order: 4;
    order: 4;
  }
  .order-sm-5 {
    -webkit-box-ordinal-group: 6;
    -ms-flex-order: 5;
    order: 5;
  }
  .order-sm-6 {
    -webkit-box-ordinal-group: 7;
    -ms-flex-order: 6;
    order: 6;
  }
  .order-sm-7 {
    -webkit-box-ordinal-group: 8;
    -ms-flex-order: 7;
    order: 7;
  }
  .order-sm-8 {
    -webkit-box-ordinal-group: 9;
    -ms-flex-order: 8;
    order: 8;
  }
  .order-sm-9 {
    -webkit-box-ordinal-group: 10;
    -ms-flex-order: 9;
    order: 9;
  }
  .order-sm-10 {
    -webkit-box-ordinal-group: 11;
    -ms-flex-order: 10;
    order: 10;
  }
  .order-sm-11 {
    -webkit-box-ordinal-group: 12;
    -ms-flex-order: 11;
    order: 11;
  }
  .order-sm-12 {
    -webkit-box-ordinal-group: 13;
    -ms-flex-order: 12;
    order: 12;
  }
  .offset-sm-0 {
    margin-left: 0;
  }
  .offset-sm-1 {
    margin-left: 8.333333%;
  }
  .offset-sm-2 {
    margin-left: 16.666667%;
  }
  .offset-sm-3 {
    margin-left: 25%;
  }
  .offset-sm-4 {
    margin-left: 33.333333%;
  }
  .offset-sm-5 {
    margin-left: 41.666667%;
  }
  .offset-sm-6 {
    margin-left: 50%;
  }
  .offset-sm-7 {
    margin-left: 58.333333%;
  }
  .offset-sm-8 {
    margin-left: 66.666667%;
  }
  .offset-sm-9 {
    margin-left: 75%;
  }
  .offset-sm-10 {
    margin-left: 83.333333%;
  }
  .offset-sm-11 {
    margin-left: 91.666667%;
  }
}

@media (min-width: 768px) {
  .col-md {
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    max-width: 100%;
  }
  .col-md-auto {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 auto;
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }
  .col-md-1 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 8.333333%;
    flex: 0 0 8.333333%;
    max-width: 8.333333%;
  }
  .col-md-2 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 16.666667%;
    flex: 0 0 16.666667%;
    max-width: 16.666667%;
  }
  .col-md-3 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-md-4 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 33.333333%;
    flex: 0 0 33.333333%;
    max-width: 33.333333%;
  }
  .col-md-5 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 41.666667%;
    flex: 0 0 41.666667%;
    max-width: 41.666667%;
  }
  .col-md-6 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-md-7 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 58.333333%;
    flex: 0 0 58.333333%;
    max-width: 58.333333%;
  }
  .col-md-8 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 66.666667%;
    flex: 0 0 66.666667%;
    max-width: 66.666667%;
  }
  .col-md-9 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 75%;
    flex: 0 0 75%;
    max-width: 75%;
  }
  .col-md-10 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 83.333333%;
    flex: 0 0 83.333333%;
    max-width: 83.333333%;
  }
  .col-md-11 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 91.666667%;
    flex: 0 0 91.666667%;
    max-width: 91.666667%;
  }
  .col-md-12 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
    max-width: 100%;
  }
  .order-md-first {
    -webkit-box-ordinal-group: 0;
    -ms-flex-order: -1;
    order: -1;
  }
  .order-md-last {
    -webkit-box-ordinal-group: 14;
    -ms-flex-order: 13;
    order: 13;
  }
  .order-md-0 {
    -webkit-box-ordinal-group: 1;
    -ms-flex-order: 0;
    order: 0;
  }
  .order-md-1 {
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
  .order-md-2 {
    -webkit-box-ordinal-group: 3;
    -ms-flex-order: 2;
    order: 2;
  }
  .order-md-3 {
    -webkit-box-ordinal-group: 4;
    -ms-flex-order: 3;
    order: 3;
  }
  .order-md-4 {
    -webkit-box-ordinal-group: 5;
    -ms-flex-order: 4;
    order: 4;
  }
  .order-md-5 {
    -webkit-box-ordinal-group: 6;
    -ms-flex-order: 5;
    order: 5;
  }
  .order-md-6 {
    -webkit-box-ordinal-group: 7;
    -ms-flex-order: 6;
    order: 6;
  }
  .order-md-7 {
    -webkit-box-ordinal-group: 8;
    -ms-flex-order: 7;
    order: 7;
  }
  .order-md-8 {
    -webkit-box-ordinal-group: 9;
    -ms-flex-order: 8;
    order: 8;
  }
  .order-md-9 {
    -webkit-box-ordinal-group: 10;
    -ms-flex-order: 9;
    order: 9;
  }
  .order-md-10 {
    -webkit-box-ordinal-group: 11;
    -ms-flex-order: 10;
    order: 10;
  }
  .order-md-11 {
    -webkit-box-ordinal-group: 12;
    -ms-flex-order: 11;
    order: 11;
  }
  .order-md-12 {
    -webkit-box-ordinal-group: 13;
    -ms-flex-order: 12;
    order: 12;
  }
  .offset-md-0 {
    margin-left: 0;
  }
  .offset-md-1 {
    margin-left: 8.333333%;
  }
  .offset-md-2 {
    margin-left: 16.666667%;
  }
  .offset-md-3 {
    margin-left: 25%;
  }
  .offset-md-4 {
    margin-left: 33.333333%;
  }
  .offset-md-5 {
    margin-left: 41.666667%;
  }
  .offset-md-6 {
    margin-left: 50%;
  }
  .offset-md-7 {
    margin-left: 58.333333%;
  }
  .offset-md-8 {
    margin-left: 66.666667%;
  }
  .offset-md-9 {
    margin-left: 75%;
  }
  .offset-md-10 {
    margin-left: 83.333333%;
  }
  .offset-md-11 {
    margin-left: 91.666667%;
  }
}

@media (min-width: 992px) {
  .col-lg {
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    max-width: 100%;
  }
  .col-lg-auto {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 auto;
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }
  .col-lg-1 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 8.333333%;
    flex: 0 0 8.333333%;
    max-width: 8.333333%;
  }
  .col-lg-2 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 16.666667%;
    flex: 0 0 16.666667%;
    max-width: 16.666667%;
  }
  .col-lg-3 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-lg-4 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 33.333333%;
    flex: 0 0 33.333333%;
    max-width: 33.333333%;
  }
  .col-lg-5 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 41.666667%;
    flex: 0 0 41.666667%;
    max-width: 41.666667%;
  }
  .col-lg-6 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-lg-7 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 58.333333%;
    flex: 0 0 58.333333%;
    max-width: 58.333333%;
  }
  .col-lg-8 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 66.666667%;
    flex: 0 0 66.666667%;
    max-width: 66.666667%;
  }
  .col-lg-9 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 75%;
    flex: 0 0 75%;
    max-width: 75%;
  }
  .col-lg-10 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 83.333333%;
    flex: 0 0 83.333333%;
    max-width: 83.333333%;
  }
  .col-lg-11 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 91.666667%;
    flex: 0 0 91.666667%;
    max-width: 91.666667%;
  }
  .col-lg-12 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
    max-width: 100%;
  }
  .order-lg-first {
    -webkit-box-ordinal-group: 0;
    -ms-flex-order: -1;
    order: -1;
  }
  .order-lg-last {
    -webkit-box-ordinal-group: 14;
    -ms-flex-order: 13;
    order: 13;
  }
  .order-lg-0 {
    -webkit-box-ordinal-group: 1;
    -ms-flex-order: 0;
    order: 0;
  }
  .order-lg-1 {
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
  .order-lg-2 {
    -webkit-box-ordinal-group: 3;
    -ms-flex-order: 2;
    order: 2;
  }
  .order-lg-3 {
    -webkit-box-ordinal-group: 4;
    -ms-flex-order: 3;
    order: 3;
  }
  .order-lg-4 {
    -webkit-box-ordinal-group: 5;
    -ms-flex-order: 4;
    order: 4;
  }
  .order-lg-5 {
    -webkit-box-ordinal-group: 6;
    -ms-flex-order: 5;
    order: 5;
  }
  .order-lg-6 {
    -webkit-box-ordinal-group: 7;
    -ms-flex-order: 6;
    order: 6;
  }
  .order-lg-7 {
    -webkit-box-ordinal-group: 8;
    -ms-flex-order: 7;
    order: 7;
  }
  .order-lg-8 {
    -webkit-box-ordinal-group: 9;
    -ms-flex-order: 8;
    order: 8;
  }
  .order-lg-9 {
    -webkit-box-ordinal-group: 10;
    -ms-flex-order: 9;
    order: 9;
  }
  .order-lg-10 {
    -webkit-box-ordinal-group: 11;
    -ms-flex-order: 10;
    order: 10;
  }
  .order-lg-11 {
    -webkit-box-ordinal-group: 12;
    -ms-flex-order: 11;
    order: 11;
  }
  .order-lg-12 {
    -webkit-box-ordinal-group: 13;
    -ms-flex-order: 12;
    order: 12;
  }
  .offset-lg-0 {
    margin-left: 0;
  }
  .offset-lg-1 {
    margin-left: 8.333333%;
  }
  .offset-lg-2 {
    margin-left: 16.666667%;
  }
  .offset-lg-3 {
    margin-left: 25%;
  }
  .offset-lg-4 {
    margin-left: 33.333333%;
  }
  .offset-lg-5 {
    margin-left: 41.666667%;
  }
  .offset-lg-6 {
    margin-left: 50%;
  }
  .offset-lg-7 {
    margin-left: 58.333333%;
  }
  .offset-lg-8 {
    margin-left: 66.666667%;
  }
  .offset-lg-9 {
    margin-left: 75%;
  }
  .offset-lg-10 {
    margin-left: 83.333333%;
  }
  .offset-lg-11 {
    margin-left: 91.666667%;
  }
}

@media (min-width: 1200px) {
  .col-xl {
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    max-width: 100%;
  }
  .col-xl-auto {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 auto;
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }
  .col-xl-1 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 8.333333%;
    flex: 0 0 8.333333%;
    max-width: 8.333333%;
  }
  .col-xl-2 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 16.666667%;
    flex: 0 0 16.666667%;
    max-width: 16.666667%;
  }
  .col-xl-3 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-xl-4 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 33.333333%;
    flex: 0 0 33.333333%;
    max-width: 33.333333%;
  }
  .col-xl-5 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 41.666667%;
    flex: 0 0 41.666667%;
    max-width: 41.666667%;
  }
  .col-xl-6 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-xl-7 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 58.333333%;
    flex: 0 0 58.333333%;
    max-width: 58.333333%;
  }
  .col-xl-8 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 66.666667%;
    flex: 0 0 66.666667%;
    max-width: 66.666667%;
  }
  .col-xl-9 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 75%;
    flex: 0 0 75%;
    max-width: 75%;
  }
  .col-xl-10 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 83.333333%;
    flex: 0 0 83.333333%;
    max-width: 83.333333%;
  }
  .col-xl-11 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 91.666667%;
    flex: 0 0 91.666667%;
    max-width: 91.666667%;
  }
  .col-xl-12 {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
    max-width: 100%;
  }
  .order-xl-first {
    -webkit-box-ordinal-group: 0;
    -ms-flex-order: -1;
    order: -1;
  }
  .order-xl-last {
    -webkit-box-ordinal-group: 14;
    -ms-flex-order: 13;
    order: 13;
  }
  .order-xl-0 {
    -webkit-box-ordinal-group: 1;
    -ms-flex-order: 0;
    order: 0;
  }
  .order-xl-1 {
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
  .order-xl-2 {
    -webkit-box-ordinal-group: 3;
    -ms-flex-order: 2;
    order: 2;
  }
  .order-xl-3 {
    -webkit-box-ordinal-group: 4;
    -ms-flex-order: 3;
    order: 3;
  }
  .order-xl-4 {
    -webkit-box-ordinal-group: 5;
    -ms-flex-order: 4;
    order: 4;
  }
  .order-xl-5 {
    -webkit-box-ordinal-group: 6;
    -ms-flex-order: 5;
    order: 5;
  }
  .order-xl-6 {
    -webkit-box-ordinal-group: 7;
    -ms-flex-order: 6;
    order: 6;
  }
  .order-xl-7 {
    -webkit-box-ordinal-group: 8;
    -ms-flex-order: 7;
    order: 7;
  }
  .order-xl-8 {
    -webkit-box-ordinal-group: 9;
    -ms-flex-order: 8;
    order: 8;
  }
  .order-xl-9 {
    -webkit-box-ordinal-group: 10;
    -ms-flex-order: 9;
    order: 9;
  }
  .order-xl-10 {
    -webkit-box-ordinal-group: 11;
    -ms-flex-order: 10;
    order: 10;
  }
  .order-xl-11 {
    -webkit-box-ordinal-group: 12;
    -ms-flex-order: 11;
    order: 11;
  }
  .order-xl-12 {
    -webkit-box-ordinal-group: 13;
    -ms-flex-order: 12;
    order: 12;
  }
  .offset-xl-0 {
    margin-left: 0;
  }
  .offset-xl-1 {
    margin-left: 8.333333%;
  }
  .offset-xl-2 {
    margin-left: 16.666667%;
  }
  .offset-xl-3 {
    margin-left: 25%;
  }
  .offset-xl-4 {
    margin-left: 33.333333%;
  }
  .offset-xl-5 {
    margin-left: 41.666667%;
  }
  .offset-xl-6 {
    margin-left: 50%;
  }
  .offset-xl-7 {
    margin-left: 58.333333%;
  }
  .offset-xl-8 {
    margin-left: 66.666667%;
  }
  .offset-xl-9 {
    margin-left: 75%;
  }
  .offset-xl-10 {
    margin-left: 83.333333%;
  }
  .offset-xl-11 {
    margin-left: 91.666667%;
  }
}

.table {
  width: 100%;
  max-width: 100%;
  margin-bottom: 1rem;
  background-color: transparent;
}

.table th,
.table td {
  padding: 0.75rem;
  vertical-align: top;
  border-top: 1px solid #dee2e6;
}

.table thead th {
  vertical-align: bottom;
  border-bottom: 2px solid #dee2e6;
}

.table tbody + tbody {
  border-top: 2px solid #dee2e6;
}

.table .table {
  background-color: #fff;
}

.table-sm th,
.table-sm td {
  padding: 0.3rem;
}

.table-bordered {
  border: 1px solid #dee2e6;
}

.table-bordered th,
.table-bordered td {
  border: 1px solid #dee2e6;
}

.table-bordered thead th,
.table-bordered thead td {
  border-bottom-width: 2px;
}

.table-striped tbody tr:nth-of-type(odd) {
  background-color: rgba(0, 0, 0, 0.05);
}

.table-hover tbody tr:hover {
  background-color: rgba(0, 0, 0, 0.075);
}

.table-primary,
.table-primary > th,
.table-primary > td {
  background-color: #b8daff;
}

.table-hover .table-primary:hover {
  background-color: #9fcdff;
}

.table-hover .table-primary:hover > td,
.table-hover .table-primary:hover > th {
  background-color: #9fcdff;
}

.table-secondary,
.table-secondary > th,
.table-secondary > td {
  background-color: #d6d8db;
}

.table-hover .table-secondary:hover {
  background-color: #c8cbcf;
}

.table-hover .table-secondary:hover > td,
.table-hover .table-secondary:hover > th {
  background-color: #c8cbcf;
}

.table-success,
.table-success > th,
.table-success > td {
  background-color: #c3e6cb;
}

.table-hover .table-success:hover {
  background-color: #b1dfbb;
}

.table-hover .table-success:hover > td,
.table-hover .table-success:hover > th {
  background-color: #b1dfbb;
}

.table-info,
.table-info > th,
.table-info > td {
  background-color: #bee5eb;
}

.table-hover .table-info:hover {
  background-color: #abdde5;
}

.table-hover .table-info:hover > td,
.table-hover .table-info:hover > th {
  background-color: #abdde5;
}

.table-warning,
.table-warning > th,
.table-warning > td {
  background-color: #ffeeba;
}

.table-hover .table-warning:hover {
  background-color: #ffe8a1;
}

.table-hover .table-warning:hover > td,
.table-hover .table-warning:hover > th {
  background-color: #ffe8a1;
}

.table-danger,
.table-danger > th,
.table-danger > td {
  background-color: #f5c6cb;
}

.table-hover .table-danger:hover {
  background-color: #f1b0b7;
}

.table-hover .table-danger:hover > td,
.table-hover .table-danger:hover > th {
  background-color: #f1b0b7;
}

.table-light,
.table-light > th,
.table-light > td {
  background-color: #fdfdfe;
}

.table-hover .table-light:hover {
  background-color: #ececf6;
}

.table-hover .table-light:hover > td,
.table-hover .table-light:hover > th {
  background-color: #ececf6;
}

.table-dark,
.table-dark > th,
.table-dark > td {
  background-color: #c6c8ca;
}

.table-hover .table-dark:hover {
  background-color: #b9bbbe;
}

.table-hover .table-dark:hover > td,
.table-hover .table-dark:hover > th {
  background-color: #b9bbbe;
}

.table-active,
.table-active > th,
.table-active > td {
  background-color: rgba(0, 0, 0, 0.075);
}

.table-hover .table-active:hover {
  background-color: rgba(0, 0, 0, 0.075);
}

.table-hover .table-active:hover > td,
.table-hover .table-active:hover > th {
  background-color: rgba(0, 0, 0, 0.075);
}

.table .thead-dark th {
  color: #fff;
  background-color: #212529;
  border-color: #32383e;
}

.table .thead-light th {
  color: #495057;
  background-color: #e9ecef;
  border-color: #dee2e6;
}

.table-dark {
  color: #fff;
  background-color: #212529;
}

.table-dark th,
.table-dark td,
.table-dark thead th {
  border-color: #32383e;
}

.table-dark.table-bordered {
  border: 0;
}

.table-dark.table-striped tbody tr:nth-of-type(odd) {
  background-color: rgba(255, 255, 255, 0.05);
}

.table-dark.table-hover tbody tr:hover {
  background-color: rgba(255, 255, 255, 0.075);
}

@media (max-width: 575.98px) {
  .table-responsive-sm {
    display: block;
    width: 100%;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: -ms-autohiding-scrollbar;
  }
  .table-responsive-sm > .table-bordered {
    border: 0;
  }
}

@media (max-width: 767.98px) {
  .table-responsive-md {
    display: block;
    width: 100%;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: -ms-autohiding-scrollbar;
  }
  .table-responsive-md > .table-bordered {
    border: 0;
  }
}

@media (max-width: 991.98px) {
  .table-responsive-lg {
    display: block;
    width: 100%;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: -ms-autohiding-scrollbar;
  }
  .table-responsive-lg > .table-bordered {
    border: 0;
  }
}

@media (max-width: 1199.98px) {
  .table-responsive-xl {
    display: block;
    width: 100%;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: -ms-autohiding-scrollbar;
  }
  .table-responsive-xl > .table-bordered {
    border: 0;
  }
}

.table-responsive {
  display: block;
  width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  -ms-overflow-style: -ms-autohiding-scrollbar;
}

.table-responsive > .table-bordered {
  border: 0;
}

.form-control {
  display: block;
  width: 100%;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  line-height: 1.5;
  color: #495057;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid #ced4da;
  border-radius: 0.25rem;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.form-control::-ms-expand {
  background-color: transparent;
  border: 0;
}

.form-control:focus {
  color: #495057;
  background-color: #fff;
  border-color: #80bdff;
  outline: 0;
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.form-control::-webkit-input-placeholder {
  color: #6c757d;
  opacity: 1;
}

.form-control::-moz-placeholder {
  color: #6c757d;
  opacity: 1;
}

.form-control:-ms-input-placeholder {
  color: #6c757d;
  opacity: 1;
}

.form-control::-ms-input-placeholder {
  color: #6c757d;
  opacity: 1;
}

.form-control::placeholder {
  color: #6c757d;
  opacity: 1;
}

.form-control:disabled, .form-control[readonly] {
  background-color: #e9ecef;
  opacity: 1;
}

select.form-control:not([size]):not([multiple]) {
  height: calc(2.25rem + 2px);
}

select.form-control:focus::-ms-value {
  color: #495057;
  background-color: #fff;
}

.form-control-file,
.form-control-range {
  display: block;
  width: 100%;
}

.col-form-label {
  padding-top: calc(0.375rem + 1px);
  padding-bottom: calc(0.375rem + 1px);
  margin-bottom: 0;
  font-size: inherit;
  line-height: 1.5;
}

.col-form-label-lg {
  padding-top: calc(0.5rem + 1px);
  padding-bottom: calc(0.5rem + 1px);
  font-size: 1.25rem;
  line-height: 1.5;
}

.col-form-label-sm {
  padding-top: calc(0.25rem + 1px);
  padding-bottom: calc(0.25rem + 1px);
  font-size: 0.875rem;
  line-height: 1.5;
}

.form-control-plaintext {
  display: block;
  width: 100%;
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
  margin-bottom: 0;
  line-height: 1.5;
  background-color: transparent;
  border: solid transparent;
  border-width: 1px 0;
}

.form-control-plaintext.form-control-sm, .input-group-sm > .form-control-plaintext.form-control,
.input-group-sm > .input-group-prepend > .form-control-plaintext.input-group-text,
.input-group-sm > .input-group-append > .form-control-plaintext.input-group-text,
.input-group-sm > .input-group-prepend > .form-control-plaintext.btn,
.input-group-sm > .input-group-append > .form-control-plaintext.btn, .form-control-plaintext.form-control-lg, .input-group-lg > .form-control-plaintext.form-control,
.input-group-lg > .input-group-prepend > .form-control-plaintext.input-group-text,
.input-group-lg > .input-group-append > .form-control-plaintext.input-group-text,
.input-group-lg > .input-group-prepend > .form-control-plaintext.btn,
.input-group-lg > .input-group-append > .form-control-plaintext.btn {
  padding-right: 0;
  padding-left: 0;
}

.form-control-sm, .input-group-sm > .form-control,
.input-group-sm > .input-group-prepend > .input-group-text,
.input-group-sm > .input-group-append > .input-group-text,
.input-group-sm > .input-group-prepend > .btn,
.input-group-sm > .input-group-append > .btn {
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  line-height: 1.5;
  border-radius: 0.2rem;
}

select.form-control-sm:not([size]):not([multiple]), .input-group-sm > select.form-control:not([size]):not([multiple]),
.input-group-sm > .input-group-prepend > select.input-group-text:not([size]):not([multiple]),
.input-group-sm > .input-group-append > select.input-group-text:not([size]):not([multiple]),
.input-group-sm > .input-group-prepend > select.btn:not([size]):not([multiple]),
.input-group-sm > .input-group-append > select.btn:not([size]):not([multiple]) {
  height: calc(1.8125rem + 2px);
}

.form-control-lg, .input-group-lg > .form-control,
.input-group-lg > .input-group-prepend > .input-group-text,
.input-group-lg > .input-group-append > .input-group-text,
.input-group-lg > .input-group-prepend > .btn,
.input-group-lg > .input-group-append > .btn {
  padding: 0.5rem 1rem;
  font-size: 1.25rem;
  line-height: 1.5;
  border-radius: 0.3rem;
}

select.form-control-lg:not([size]):not([multiple]), .input-group-lg > select.form-control:not([size]):not([multiple]),
.input-group-lg > .input-group-prepend > select.input-group-text:not([size]):not([multiple]),
.input-group-lg > .input-group-append > select.input-group-text:not([size]):not([multiple]),
.input-group-lg > .input-group-prepend > select.btn:not([size]):not([multiple]),
.input-group-lg > .input-group-append > select.btn:not([size]):not([multiple]) {
  height: calc(2.875rem + 2px);
}

.form-group {
  margin-bottom: 1rem;
}

.form-text {
  display: block;
  margin-top: 0.25rem;
}

.form-row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -5px;
  margin-left: -5px;
}

.form-row > .col,
.form-row > [class*="col-"] {
  padding-right: 5px;
  padding-left: 5px;
}

.form-check {
  position: relative;
  display: block;
  padding-left: 1.25rem;
}

.form-check-input {
  position: absolute;
  margin-top: 0.3rem;
  margin-left: -1.25rem;
}

.form-check-input:disabled ~ .form-check-label {
  color: #6c757d;
}

.form-check-label {
  margin-bottom: 0;
}

.form-check-inline {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 0;
  margin-right: 0.75rem;
}

.form-check-inline .form-check-input {
  position: static;
  margin-top: 0;
  margin-right: 0.3125rem;
  margin-left: 0;
}

.valid-feedback {
  display: none;
  width: 100%;
  margin-top: 0.25rem;
  font-size: 80%;
  color: #28a745;
}

.valid-tooltip {
  position: absolute;
  top: 100%;
  z-index: 5;
  display: none;
  max-width: 100%;
  padding: .5rem;
  margin-top: .1rem;
  font-size: .875rem;
  line-height: 1;
  color: #fff;
  background-color: rgba(40, 167, 69, 0.8);
  border-radius: .2rem;
}

.was-validated .form-control:valid, .form-control.is-valid, .was-validated
.custom-select:valid,
.custom-select.is-valid {
  border-color: #28a745;
}

.was-validated .form-control:valid:focus, .form-control.is-valid:focus, .was-validated
.custom-select:valid:focus,
.custom-select.is-valid:focus {
  border-color: #28a745;
  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
}

.was-validated .form-control:valid ~ .valid-feedback,
.was-validated .form-control:valid ~ .valid-tooltip, .form-control.is-valid ~ .valid-feedback,
.form-control.is-valid ~ .valid-tooltip, .was-validated
.custom-select:valid ~ .valid-feedback,
.was-validated
.custom-select:valid ~ .valid-tooltip,
.custom-select.is-valid ~ .valid-feedback,
.custom-select.is-valid ~ .valid-tooltip {
  display: block;
}

.was-validated .form-check-input:valid ~ .form-check-label, .form-check-input.is-valid ~ .form-check-label {
  color: #28a745;
}

.was-validated .form-check-input:valid ~ .valid-feedback,
.was-validated .form-check-input:valid ~ .valid-tooltip, .form-check-input.is-valid ~ .valid-feedback,
.form-check-input.is-valid ~ .valid-tooltip {
  display: block;
}

.was-validated .custom-control-input:valid ~ .custom-control-label, .custom-control-input.is-valid ~ .custom-control-label {
  color: #28a745;
}

.was-validated .custom-control-input:valid ~ .custom-control-label::before, .custom-control-input.is-valid ~ .custom-control-label::before {
  background-color: #71dd8a;
}

.was-validated .custom-control-input:valid ~ .valid-feedback,
.was-validated .custom-control-input:valid ~ .valid-tooltip, .custom-control-input.is-valid ~ .valid-feedback,
.custom-control-input.is-valid ~ .valid-tooltip {
  display: block;
}

.was-validated .custom-control-input:valid:checked ~ .custom-control-label::before, .custom-control-input.is-valid:checked ~ .custom-control-label::before {
  background-color: #34ce57;
}

.was-validated .custom-control-input:valid:focus ~ .custom-control-label::before, .custom-control-input.is-valid:focus ~ .custom-control-label::before {
  box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
}

.was-validated .custom-file-input:valid ~ .custom-file-label, .custom-file-input.is-valid ~ .custom-file-label {
  border-color: #28a745;
}

.was-validated .custom-file-input:valid ~ .custom-file-label::before, .custom-file-input.is-valid ~ .custom-file-label::before {
  border-color: inherit;
}

.was-validated .custom-file-input:valid ~ .valid-feedback,
.was-validated .custom-file-input:valid ~ .valid-tooltip, .custom-file-input.is-valid ~ .valid-feedback,
.custom-file-input.is-valid ~ .valid-tooltip {
  display: block;
}

.was-validated .custom-file-input:valid:focus ~ .custom-file-label, .custom-file-input.is-valid:focus ~ .custom-file-label {
  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
}

.invalid-feedback {
  display: none;
  width: 100%;
  margin-top: 0.25rem;
  font-size: 80%;
  color: #dc3545;
}

.invalid-tooltip {
  position: absolute;
  top: 100%;
  z-index: 5;
  display: none;
  max-width: 100%;
  padding: .5rem;
  margin-top: .1rem;
  font-size: .875rem;
  line-height: 1;
  color: #fff;
  background-color: rgba(220, 53, 69, 0.8);
  border-radius: .2rem;
}

.was-validated .form-control:invalid, .form-control.is-invalid, .was-validated
.custom-select:invalid,
.custom-select.is-invalid {
  border-color: #dc3545;
}

.was-validated .form-control:invalid:focus, .form-control.is-invalid:focus, .was-validated
.custom-select:invalid:focus,
.custom-select.is-invalid:focus {
  border-color: #dc3545;
  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
}

.was-validated .form-control:invalid ~ .invalid-feedback,
.was-validated .form-control:invalid ~ .invalid-tooltip, .form-control.is-invalid ~ .invalid-feedback,
.form-control.is-invalid ~ .invalid-tooltip, .was-validated
.custom-select:invalid ~ .invalid-feedback,
.was-validated
.custom-select:invalid ~ .invalid-tooltip,
.custom-select.is-invalid ~ .invalid-feedback,
.custom-select.is-invalid ~ .invalid-tooltip {
  display: block;
}

.was-validated .form-check-input:invalid ~ .form-check-label, .form-check-input.is-invalid ~ .form-check-label {
  color: #dc3545;
}

.was-validated .form-check-input:invalid ~ .invalid-feedback,
.was-validated .form-check-input:invalid ~ .invalid-tooltip, .form-check-input.is-invalid ~ .invalid-feedback,
.form-check-input.is-invalid ~ .invalid-tooltip {
  display: block;
}

.was-validated .custom-control-input:invalid ~ .custom-control-label, .custom-control-input.is-invalid ~ .custom-control-label {
  color: #dc3545;
}

.was-validated .custom-control-input:invalid ~ .custom-control-label::before, .custom-control-input.is-invalid ~ .custom-control-label::before {
  background-color: #efa2a9;
}

.was-validated .custom-control-input:invalid ~ .invalid-feedback,
.was-validated .custom-control-input:invalid ~ .invalid-tooltip, .custom-control-input.is-invalid ~ .invalid-feedback,
.custom-control-input.is-invalid ~ .invalid-tooltip {
  display: block;
}

.was-validated .custom-control-input:invalid:checked ~ .custom-control-label::before, .custom-control-input.is-invalid:checked ~ .custom-control-label::before {
  background-color: #e4606d;
}

.was-validated .custom-control-input:invalid:focus ~ .custom-control-label::before, .custom-control-input.is-invalid:focus ~ .custom-control-label::before {
  box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
}

.was-validated .custom-file-input:invalid ~ .custom-file-label, .custom-file-input.is-invalid ~ .custom-file-label {
  border-color: #dc3545;
}

.was-validated .custom-file-input:invalid ~ .custom-file-label::before, .custom-file-input.is-invalid ~ .custom-file-label::before {
  border-color: inherit;
}

.was-validated .custom-file-input:invalid ~ .invalid-feedback,
.was-validated .custom-file-input:invalid ~ .invalid-tooltip, .custom-file-input.is-invalid ~ .invalid-feedback,
.custom-file-input.is-invalid ~ .invalid-tooltip {
  display: block;
}

.was-validated .custom-file-input:invalid:focus ~ .custom-file-label, .custom-file-input.is-invalid:focus ~ .custom-file-label {
  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
}

.form-inline {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-flow: row wrap;
  flex-flow: row wrap;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.form-inline .form-check {
  width: 100%;
}

@media (min-width: 576px) {
  .form-inline label {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    margin-bottom: 0;
  }
  .form-inline .form-group {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 0;
    -ms-flex: 0 0 auto;
    flex: 0 0 auto;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    margin-bottom: 0;
  }
  .form-inline .form-control {
    display: inline-block;
    width: auto;
    vertical-align: middle;
  }
  .form-inline .form-control-plaintext {
    display: inline-block;
  }
  .form-inline .input-group {
    width: auto;
  }
  .form-inline .form-check {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    width: auto;
    padding-left: 0;
  }
  .form-inline .form-check-input {
    position: relative;
    margin-top: 0;
    margin-right: 0.25rem;
    margin-left: 0;
  }
  .form-inline .custom-control {
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
  .form-inline .custom-control-label {
    margin-bottom: 0;
  }
}

.btn {
  display: inline-block;
  font-weight: 400;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  border: 1px solid transparent;
  padding: 0.375rem 0.75rem;
  font-size: 1rem;
  line-height: 1.5;
  border-radius: 0.25rem;
  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.btn:hover, .btn:focus {
  text-decoration: none;
}

.btn:focus, .btn.focus {
  outline: 0;
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.btn.disabled, .btn:disabled {
  opacity: 0.65;
}

.btn:not(:disabled):not(.disabled) {
  cursor: pointer;
}

.btn:not(:disabled):not(.disabled):active, .btn:not(:disabled):not(.disabled).active {
  background-image: none;
}

a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

.btn-primary {
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

.btn-primary:hover {
  color: #fff;
  background-color: #0069d9;
  border-color: #0062cc;
}

.btn-primary:focus, .btn-primary.focus {
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);
}

.btn-primary.disabled, .btn-primary:disabled {
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

.btn-primary:not(:disabled):not(.disabled):active, .btn-primary:not(:disabled):not(.disabled).active,
.show > .btn-primary.dropdown-toggle {
  color: #fff;
  background-color: #0062cc;
  border-color: #005cbf;
}

.btn-primary:not(:disabled):not(.disabled):active:focus, .btn-primary:not(:disabled):not(.disabled).active:focus,
.show > .btn-primary.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);
}

.btn-secondary {
  color: #fff;
  background-color: #6c757d;
  border-color: #6c757d;
}

.btn-secondary:hover {
  color: #fff;
  background-color: #5a6268;
  border-color: #545b62;
}

.btn-secondary:focus, .btn-secondary.focus {
  box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5);
}

.btn-secondary.disabled, .btn-secondary:disabled {
  color: #fff;
  background-color: #6c757d;
  border-color: #6c757d;
}

.btn-secondary:not(:disabled):not(.disabled):active, .btn-secondary:not(:disabled):not(.disabled).active,
.show > .btn-secondary.dropdown-toggle {
  color: #fff;
  background-color: #545b62;
  border-color: #4e555b;
}

.btn-secondary:not(:disabled):not(.disabled):active:focus, .btn-secondary:not(:disabled):not(.disabled).active:focus,
.show > .btn-secondary.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5);
}

.btn-success {
  color: #fff;
  background-color: #28a745;
  border-color: #28a745;
}

.btn-success:hover {
  color: #fff;
  background-color: #218838;
  border-color: #1e7e34;
}

.btn-success:focus, .btn-success.focus {
  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5);
}

.btn-success.disabled, .btn-success:disabled {
  color: #fff;
  background-color: #28a745;
  border-color: #28a745;
}

.btn-success:not(:disabled):not(.disabled):active, .btn-success:not(:disabled):not(.disabled).active,
.show > .btn-success.dropdown-toggle {
  color: #fff;
  background-color: #1e7e34;
  border-color: #1c7430;
}

.btn-success:not(:disabled):not(.disabled):active:focus, .btn-success:not(:disabled):not(.disabled).active:focus,
.show > .btn-success.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5);
}

.btn-info {
  color: #fff;
  background-color: #17a2b8;
  border-color: #17a2b8;
}

.btn-info:hover {
  color: #fff;
  background-color: #138496;
  border-color: #117a8b;
}

.btn-info:focus, .btn-info.focus {
  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5);
}

.btn-info.disabled, .btn-info:disabled {
  color: #fff;
  background-color: #17a2b8;
  border-color: #17a2b8;
}

.btn-info:not(:disabled):not(.disabled):active, .btn-info:not(:disabled):not(.disabled).active,
.show > .btn-info.dropdown-toggle {
  color: #fff;
  background-color: #117a8b;
  border-color: #10707f;
}

.btn-info:not(:disabled):not(.disabled):active:focus, .btn-info:not(:disabled):not(.disabled).active:focus,
.show > .btn-info.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5);
}

.btn-warning {
  color: #212529;
  background-color: #ffc107;
  border-color: #ffc107;
}

.btn-warning:hover {
  color: #212529;
  background-color: #e0a800;
  border-color: #d39e00;
}

.btn-warning:focus, .btn-warning.focus {
  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);
}

.btn-warning.disabled, .btn-warning:disabled {
  color: #212529;
  background-color: #ffc107;
  border-color: #ffc107;
}

.btn-warning:not(:disabled):not(.disabled):active, .btn-warning:not(:disabled):not(.disabled).active,
.show > .btn-warning.dropdown-toggle {
  color: #212529;
  background-color: #d39e00;
  border-color: #c69500;
}

.btn-warning:not(:disabled):not(.disabled):active:focus, .btn-warning:not(:disabled):not(.disabled).active:focus,
.show > .btn-warning.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);
}

.btn-danger {
  color: #fff;
  background-color: #dc3545;
  border-color: #dc3545;
}

.btn-danger:hover {
  color: #fff;
  background-color: #c82333;
  border-color: #bd2130;
}

.btn-danger:focus, .btn-danger.focus {
  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);
}

.btn-danger.disabled, .btn-danger:disabled {
  color: #fff;
  background-color: #dc3545;
  border-color: #dc3545;
}

.btn-danger:not(:disabled):not(.disabled):active, .btn-danger:not(:disabled):not(.disabled).active,
.show > .btn-danger.dropdown-toggle {
  color: #fff;
  background-color: #bd2130;
  border-color: #b21f2d;
}

.btn-danger:not(:disabled):not(.disabled):active:focus, .btn-danger:not(:disabled):not(.disabled).active:focus,
.show > .btn-danger.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);
}

.btn-light {
  color: #212529;
  background-color: #f8f9fa;
  border-color: #f8f9fa;
}

.btn-light:hover {
  color: #212529;
  background-color: #e2e6ea;
  border-color: #dae0e5;
}

.btn-light:focus, .btn-light.focus {
  box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5);
}

.btn-light.disabled, .btn-light:disabled {
  color: #212529;
  background-color: #f8f9fa;
  border-color: #f8f9fa;
}

.btn-light:not(:disabled):not(.disabled):active, .btn-light:not(:disabled):not(.disabled).active,
.show > .btn-light.dropdown-toggle {
  color: #212529;
  background-color: #dae0e5;
  border-color: #d3d9df;
}

.btn-light:not(:disabled):not(.disabled):active:focus, .btn-light:not(:disabled):not(.disabled).active:focus,
.show > .btn-light.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5);
}

.btn-dark {
  color: #fff;
  background-color: #343a40;
  border-color: #343a40;
}

.btn-dark:hover {
  color: #fff;
  background-color: #23272b;
  border-color: #1d2124;
}

.btn-dark:focus, .btn-dark.focus {
  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);
}

.btn-dark.disabled, .btn-dark:disabled {
  color: #fff;
  background-color: #343a40;
  border-color: #343a40;
}

.btn-dark:not(:disabled):not(.disabled):active, .btn-dark:not(:disabled):not(.disabled).active,
.show > .btn-dark.dropdown-toggle {
  color: #fff;
  background-color: #1d2124;
  border-color: #171a1d;
}

.btn-dark:not(:disabled):not(.disabled):active:focus, .btn-dark:not(:disabled):not(.disabled).active:focus,
.show > .btn-dark.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);
}

.btn-outline-primary {
  color: #007bff;
  background-color: transparent;
  background-image: none;
  border-color: #007bff;
}

.btn-outline-primary:hover {
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

.btn-outline-primary:focus, .btn-outline-primary.focus {
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);
}

.btn-outline-primary.disabled, .btn-outline-primary:disabled {
  color: #007bff;
  background-color: transparent;
}

.btn-outline-primary:not(:disabled):not(.disabled):active, .btn-outline-primary:not(:disabled):not(.disabled).active,
.show > .btn-outline-primary.dropdown-toggle {
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

.btn-outline-primary:not(:disabled):not(.disabled):active:focus, .btn-outline-primary:not(:disabled):not(.disabled).active:focus,
.show > .btn-outline-primary.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);
}

.btn-outline-secondary {
  color: #6c757d;
  background-color: transparent;
  background-image: none;
  border-color: #6c757d;
}

.btn-outline-secondary:hover {
  color: #fff;
  background-color: #6c757d;
  border-color: #6c757d;
}

.btn-outline-secondary:focus, .btn-outline-secondary.focus {
  box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5);
}

.btn-outline-secondary.disabled, .btn-outline-secondary:disabled {
  color: #6c757d;
  background-color: transparent;
}

.btn-outline-secondary:not(:disabled):not(.disabled):active, .btn-outline-secondary:not(:disabled):not(.disabled).active,
.show > .btn-outline-secondary.dropdown-toggle {
  color: #fff;
  background-color: #6c757d;
  border-color: #6c757d;
}

.btn-outline-secondary:not(:disabled):not(.disabled):active:focus, .btn-outline-secondary:not(:disabled):not(.disabled).active:focus,
.show > .btn-outline-secondary.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5);
}

.btn-outline-success {
  color: #28a745;
  background-color: transparent;
  background-image: none;
  border-color: #28a745;
}

.btn-outline-success:hover {
  color: #fff;
  background-color: #28a745;
  border-color: #28a745;
}

.btn-outline-success:focus, .btn-outline-success.focus {
  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5);
}

.btn-outline-success.disabled, .btn-outline-success:disabled {
  color: #28a745;
  background-color: transparent;
}

.btn-outline-success:not(:disabled):not(.disabled):active, .btn-outline-success:not(:disabled):not(.disabled).active,
.show > .btn-outline-success.dropdown-toggle {
  color: #fff;
  background-color: #28a745;
  border-color: #28a745;
}

.btn-outline-success:not(:disabled):not(.disabled):active:focus, .btn-outline-success:not(:disabled):not(.disabled).active:focus,
.show > .btn-outline-success.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5);
}

.btn-outline-info {
  color: #17a2b8;
  background-color: transparent;
  background-image: none;
  border-color: #17a2b8;
}

.btn-outline-info:hover {
  color: #fff;
  background-color: #17a2b8;
  border-color: #17a2b8;
}

.btn-outline-info:focus, .btn-outline-info.focus {
  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5);
}

.btn-outline-info.disabled, .btn-outline-info:disabled {
  color: #17a2b8;
  background-color: transparent;
}

.btn-outline-info:not(:disabled):not(.disabled):active, .btn-outline-info:not(:disabled):not(.disabled).active,
.show > .btn-outline-info.dropdown-toggle {
  color: #fff;
  background-color: #17a2b8;
  border-color: #17a2b8;
}

.btn-outline-info:not(:disabled):not(.disabled):active:focus, .btn-outline-info:not(:disabled):not(.disabled).active:focus,
.show > .btn-outline-info.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5);
}

.btn-outline-warning {
  color: #ffc107;
  background-color: transparent;
  background-image: none;
  border-color: #ffc107;
}

.btn-outline-warning:hover {
  color: #212529;
  background-color: #ffc107;
  border-color: #ffc107;
}

.btn-outline-warning:focus, .btn-outline-warning.focus {
  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);
}

.btn-outline-warning.disabled, .btn-outline-warning:disabled {
  color: #ffc107;
  background-color: transparent;
}

.btn-outline-warning:not(:disabled):not(.disabled):active, .btn-outline-warning:not(:disabled):not(.disabled).active,
.show > .btn-outline-warning.dropdown-toggle {
  color: #212529;
  background-color: #ffc107;
  border-color: #ffc107;
}

.btn-outline-warning:not(:disabled):not(.disabled):active:focus, .btn-outline-warning:not(:disabled):not(.disabled).active:focus,
.show > .btn-outline-warning.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);
}

.btn-outline-danger {
  color: #dc3545;
  background-color: transparent;
  background-image: none;
  border-color: #dc3545;
}

.btn-outline-danger:hover {
  color: #fff;
  background-color: #dc3545;
  border-color: #dc3545;
}

.btn-outline-danger:focus, .btn-outline-danger.focus {
  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);
}

.btn-outline-danger.disabled, .btn-outline-danger:disabled {
  color: #dc3545;
  background-color: transparent;
}

.btn-outline-danger:not(:disabled):not(.disabled):active, .btn-outline-danger:not(:disabled):not(.disabled).active,
.show > .btn-outline-danger.dropdown-toggle {
  color: #fff;
  background-color: #dc3545;
  border-color: #dc3545;
}

.btn-outline-danger:not(:disabled):not(.disabled):active:focus, .btn-outline-danger:not(:disabled):not(.disabled).active:focus,
.show > .btn-outline-danger.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);
}

.btn-outline-light {
  color: #f8f9fa;
  background-color: transparent;
  background-image: none;
  border-color: #f8f9fa;
}

.btn-outline-light:hover {
  color: #212529;
  background-color: #f8f9fa;
  border-color: #f8f9fa;
}

.btn-outline-light:focus, .btn-outline-light.focus {
  box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5);
}

.btn-outline-light.disabled, .btn-outline-light:disabled {
  color: #f8f9fa;
  background-color: transparent;
}

.btn-outline-light:not(:disabled):not(.disabled):active, .btn-outline-light:not(:disabled):not(.disabled).active,
.show > .btn-outline-light.dropdown-toggle {
  color: #212529;
  background-color: #f8f9fa;
  border-color: #f8f9fa;
}

.btn-outline-light:not(:disabled):not(.disabled):active:focus, .btn-outline-light:not(:disabled):not(.disabled).active:focus,
.show > .btn-outline-light.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5);
}

.btn-outline-dark {
  color: #343a40;
  background-color: transparent;
  background-image: none;
  border-color: #343a40;
}

.btn-outline-dark:hover {
  color: #fff;
  background-color: #343a40;
  border-color: #343a40;
}

.btn-outline-dark:focus, .btn-outline-dark.focus {
  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);
}

.btn-outline-dark.disabled, .btn-outline-dark:disabled {
  color: #343a40;
  background-color: transparent;
}

.btn-outline-dark:not(:disabled):not(.disabled):active, .btn-outline-dark:not(:disabled):not(.disabled).active,
.show > .btn-outline-dark.dropdown-toggle {
  color: #fff;
  background-color: #343a40;
  border-color: #343a40;
}

.btn-outline-dark:not(:disabled):not(.disabled):active:focus, .btn-outline-dark:not(:disabled):not(.disabled).active:focus,
.show > .btn-outline-dark.dropdown-toggle:focus {
  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);
}

.btn-link {
  font-weight: 400;
  color: #007bff;
  background-color: transparent;
}

.btn-link:hover {
  color: #0056b3;
  text-decoration: underline;
  background-color: transparent;
  border-color: transparent;
}

.btn-link:focus, .btn-link.focus {
  text-decoration: underline;
  border-color: transparent;
  box-shadow: none;
}

.btn-link:disabled, .btn-link.disabled {
  color: #6c757d;
}

.btn-lg, .btn-group-lg > .btn {
  padding: 0.5rem 1rem;
  font-size: 1.25rem;
  line-height: 1.5;
  border-radius: 0.3rem;
}

.btn-sm, .btn-group-sm > .btn {
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  line-height: 1.5;
  border-radius: 0.2rem;
}

.btn-block {
  display: block;
  width: 100%;
}

.btn-block + .btn-block {
  margin-top: 0.5rem;
}

input[type="submit"].btn-block,
input[type="reset"].btn-block,
input[type="button"].btn-block {
  width: 100%;
}

.fade {
  opacity: 0;
  transition: opacity 0.15s linear;
}

.fade.show {
  opacity: 1;
}

.collapse {
  display: none;
}

.collapse.show {
  display: block;
}

tr.collapse.show {
  display: table-row;
}

tbody.collapse.show {
  display: table-row-group;
}

.collapsing {
  position: relative;
  height: 0;
  overflow: hidden;
  transition: height 0.35s ease;
}

.dropup,
.dropdown {
  position: relative;
}

.dropdown-toggle::after {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 0.255em;
  vertical-align: 0.255em;
  content: "";
  border-top: 0.3em solid;
  border-right: 0.3em solid transparent;
  border-bottom: 0;
  border-left: 0.3em solid transparent;
}

.dropdown-toggle:empty::after {
  margin-left: 0;
}

.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  display: none;
  float: left;
  min-width: 10rem;
  padding: 0.5rem 0;
  margin: 0.125rem 0 0;
  font-size: 1rem;
  color: #212529;
  text-align: left;
  list-style: none;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-radius: 0.25rem;
}

.dropup .dropdown-menu {
  margin-top: 0;
  margin-bottom: 0.125rem;
}

.dropup .dropdown-toggle::after {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 0.255em;
  vertical-align: 0.255em;
  content: "";
  border-top: 0;
  border-right: 0.3em solid transparent;
  border-bottom: 0.3em solid;
  border-left: 0.3em solid transparent;
}

.dropup .dropdown-toggle:empty::after {
  margin-left: 0;
}

.dropright .dropdown-menu {
  margin-top: 0;
  margin-left: 0.125rem;
}

.dropright .dropdown-toggle::after {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 0.255em;
  vertical-align: 0.255em;
  content: "";
  border-top: 0.3em solid transparent;
  border-bottom: 0.3em solid transparent;
  border-left: 0.3em solid;
}

.dropright .dropdown-toggle:empty::after {
  margin-left: 0;
}

.dropright .dropdown-toggle::after {
  vertical-align: 0;
}

.dropleft .dropdown-menu {
  margin-top: 0;
  margin-right: 0.125rem;
}

.dropleft .dropdown-toggle::after {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 0.255em;
  vertical-align: 0.255em;
  content: "";
}

.dropleft .dropdown-toggle::after {
  display: none;
}

.dropleft .dropdown-toggle::before {
  display: inline-block;
  width: 0;
  height: 0;
  margin-right: 0.255em;
  vertical-align: 0.255em;
  content: "";
  border-top: 0.3em solid transparent;
  border-right: 0.3em solid;
  border-bottom: 0.3em solid transparent;
}

.dropleft .dropdown-toggle:empty::after {
  margin-left: 0;
}

.dropleft .dropdown-toggle::before {
  vertical-align: 0;
}

.dropdown-divider {
  height: 0;
  margin: 0.5rem 0;
  overflow: hidden;
  border-top: 1px solid #e9ecef;
}

.dropdown-item {
  display: block;
  width: 100%;
  padding: 0.25rem 1.5rem;
  clear: both;
  font-weight: 400;
  color: #212529;
  text-align: inherit;
  white-space: nowrap;
  background-color: transparent;
  border: 0;
}

.dropdown-item:hover, .dropdown-item:focus {
  color: #16181b;
  text-decoration: none;
  background-color: #f8f9fa;
}

.dropdown-item.active, .dropdown-item:active {
  color: #fff;
  text-decoration: none;
  background-color: #007bff;
}

.dropdown-item.disabled, .dropdown-item:disabled {
  color: #6c757d;
  background-color: transparent;
}

.dropdown-menu.show {
  display: block;
}

.dropdown-header {
  display: block;
  padding: 0.5rem 1.5rem;
  margin-bottom: 0;
  font-size: 0.875rem;
  color: #6c757d;
  white-space: nowrap;
}

.btn-group,
.btn-group-vertical {
  position: relative;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  vertical-align: middle;
}

.btn-group > .btn,
.btn-group-vertical > .btn {
  position: relative;
  -webkit-box-flex: 0;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
}

.btn-group > .btn:hover,
.btn-group-vertical > .btn:hover {
  z-index: 1;
}

.btn-group > .btn:focus, .btn-group > .btn:active, .btn-group > .btn.active,
.btn-group-vertical > .btn:focus,
.btn-group-vertical > .btn:active,
.btn-group-vertical > .btn.active {
  z-index: 1;
}

.btn-group .btn + .btn,
.btn-group .btn + .btn-group,
.btn-group .btn-group + .btn,
.btn-group .btn-group + .btn-group,
.btn-group-vertical .btn + .btn,
.btn-group-vertical .btn + .btn-group,
.btn-group-vertical .btn-group + .btn,
.btn-group-vertical .btn-group + .btn-group {
  margin-left: -1px;
}

.btn-toolbar {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.btn-toolbar .input-group {
  width: auto;
}

.btn-group > .btn:first-child {
  margin-left: 0;
}

.btn-group > .btn:not(:last-child):not(.dropdown-toggle),
.btn-group > .btn-group:not(:last-child) > .btn {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.btn-group > .btn:not(:first-child),
.btn-group > .btn-group:not(:first-child) > .btn {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.dropdown-toggle-split {
  padding-right: 0.5625rem;
  padding-left: 0.5625rem;
}

.dropdown-toggle-split::after {
  margin-left: 0;
}

.btn-sm + .dropdown-toggle-split, .btn-group-sm > .btn + .dropdown-toggle-split {
  padding-right: 0.375rem;
  padding-left: 0.375rem;
}

.btn-lg + .dropdown-toggle-split, .btn-group-lg > .btn + .dropdown-toggle-split {
  padding-right: 0.75rem;
  padding-left: 0.75rem;
}

.btn-group-vertical {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.btn-group-vertical .btn,
.btn-group-vertical .btn-group {
  width: 100%;
}

.btn-group-vertical > .btn + .btn,
.btn-group-vertical > .btn + .btn-group,
.btn-group-vertical > .btn-group + .btn,
.btn-group-vertical > .btn-group + .btn-group {
  margin-top: -1px;
  margin-left: 0;
}

.btn-group-vertical > .btn:not(:last-child):not(.dropdown-toggle),
.btn-group-vertical > .btn-group:not(:last-child) > .btn {
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

.btn-group-vertical > .btn:not(:first-child),
.btn-group-vertical > .btn-group:not(:first-child) > .btn {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.btn-group-toggle > .btn,
.btn-group-toggle > .btn-group > .btn {
  margin-bottom: 0;
}

.btn-group-toggle > .btn input[type="radio"],
.btn-group-toggle > .btn input[type="checkbox"],
.btn-group-toggle > .btn-group > .btn input[type="radio"],
.btn-group-toggle > .btn-group > .btn input[type="checkbox"] {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  pointer-events: none;
}

.input-group {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  width: 100%;
}

.input-group > .form-control,
.input-group > .custom-select,
.input-group > .custom-file {
  position: relative;
  -webkit-box-flex: 1;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 1%;
  margin-bottom: 0;
}

.input-group > .form-control:focus,
.input-group > .custom-select:focus,
.input-group > .custom-file:focus {
  z-index: 3;
}

.input-group > .form-control + .form-control,
.input-group > .form-control + .custom-select,
.input-group > .form-control + .custom-file,
.input-group > .custom-select + .form-control,
.input-group > .custom-select + .custom-select,
.input-group > .custom-select + .custom-file,
.input-group > .custom-file + .form-control,
.input-group > .custom-file + .custom-select,
.input-group > .custom-file + .custom-file {
  margin-left: -1px;
}

.input-group > .form-control:not(:last-child),
.input-group > .custom-select:not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.input-group > .form-control:not(:first-child),
.input-group > .custom-select:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.input-group > .custom-file {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.input-group > .custom-file:not(:last-child) .custom-file-label,
.input-group > .custom-file:not(:last-child) .custom-file-label::before {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.input-group > .custom-file:not(:first-child) .custom-file-label,
.input-group > .custom-file:not(:first-child) .custom-file-label::before {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.input-group-prepend,
.input-group-append {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.input-group-prepend .btn,
.input-group-append .btn {
  position: relative;
  z-index: 2;
}

.input-group-prepend .btn + .btn,
.input-group-prepend .btn + .input-group-text,
.input-group-prepend .input-group-text + .input-group-text,
.input-group-prepend .input-group-text + .btn,
.input-group-append .btn + .btn,
.input-group-append .btn + .input-group-text,
.input-group-append .input-group-text + .input-group-text,
.input-group-append .input-group-text + .btn {
  margin-left: -1px;
}

.input-group-prepend {
  margin-right: -1px;
}

.input-group-append {
  margin-left: -1px;
}

.input-group-text {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0.375rem 0.75rem;
  margin-bottom: 0;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #495057;
  text-align: center;
  white-space: nowrap;
  background-color: #e9ecef;
  border: 1px solid #ced4da;
  border-radius: 0.25rem;
}

.input-group-text input[type="radio"],
.input-group-text input[type="checkbox"] {
  margin-top: 0;
}

.input-group > .input-group-prepend > .btn,
.input-group > .input-group-prepend > .input-group-text,
.input-group > .input-group-append:not(:last-child) > .btn,
.input-group > .input-group-append:not(:last-child) > .input-group-text,
.input-group > .input-group-append:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group > .input-group-append:last-child > .input-group-text:not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.input-group > .input-group-append > .btn,
.input-group > .input-group-append > .input-group-text,
.input-group > .input-group-prepend:not(:first-child) > .btn,
.input-group > .input-group-prepend:not(:first-child) > .input-group-text,
.input-group > .input-group-prepend:first-child > .btn:not(:first-child),
.input-group > .input-group-prepend:first-child > .input-group-text:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.custom-control {
  position: relative;
  display: block;
  min-height: 1.5rem;
  padding-left: 1.5rem;
}

.custom-control-inline {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  margin-right: 1rem;
}

.custom-control-input {
  position: absolute;
  z-index: -1;
  opacity: 0;
}

.custom-control-input:checked ~ .custom-control-label::before {
  color: #fff;
  background-color: #007bff;
}

.custom-control-input:focus ~ .custom-control-label::before {
  box-shadow: 0 0 0 1px #fff, 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.custom-control-input:active ~ .custom-control-label::before {
  color: #fff;
  background-color: #b3d7ff;
}

.custom-control-input:disabled ~ .custom-control-label {
  color: #6c757d;
}

.custom-control-input:disabled ~ .custom-control-label::before {
  background-color: #e9ecef;
}

.custom-control-label {
  margin-bottom: 0;
}

.custom-control-label::before {
  position: absolute;
  top: 0.25rem;
  left: 0;
  display: block;
  width: 1rem;
  height: 1rem;
  pointer-events: none;
  content: "";
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  background-color: #dee2e6;
}

.custom-control-label::after {
  position: absolute;
  top: 0.25rem;
  left: 0;
  display: block;
  width: 1rem;
  height: 1rem;
  content: "";
  background-repeat: no-repeat;
  background-position: center center;
  background-size: 50% 50%;
}

.custom-checkbox .custom-control-label::before {
  border-radius: 0.25rem;
}

.custom-checkbox .custom-control-input:checked ~ .custom-control-label::before {
  background-color: #007bff;
}

.custom-checkbox .custom-control-input:checked ~ .custom-control-label::after {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E");
}

.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::before {
  background-color: #007bff;
}

.custom-checkbox .custom-control-input:indeterminate ~ .custom-control-label::after {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='%23fff' d='M0 2h4'/%3E%3C/svg%3E");
}

.custom-checkbox .custom-control-input:disabled:checked ~ .custom-control-label::before {
  background-color: rgba(0, 123, 255, 0.5);
}

.custom-checkbox .custom-control-input:disabled:indeterminate ~ .custom-control-label::before {
  background-color: rgba(0, 123, 255, 0.5);
}

.custom-radio .custom-control-label::before {
  border-radius: 50%;
}

.custom-radio .custom-control-input:checked ~ .custom-control-label::before {
  background-color: #007bff;
}

.custom-radio .custom-control-input:checked ~ .custom-control-label::after {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23fff'/%3E%3C/svg%3E");
}

.custom-radio .custom-control-input:disabled:checked ~ .custom-control-label::before {
  background-color: rgba(0, 123, 255, 0.5);
}

.custom-select {
  display: inline-block;
  width: 100%;
  height: calc(2.25rem + 2px);
  padding: 0.375rem 1.75rem 0.375rem 0.75rem;
  line-height: 1.5;
  color: #495057;
  vertical-align: middle;
  background: #fff url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E") no-repeat right 0.75rem center;
  background-size: 8px 10px;
  border: 1px solid #ced4da;
  border-radius: 0.25rem;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.custom-select:focus {
  border-color: #80bdff;
  outline: 0;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.075), 0 0 5px rgba(128, 189, 255, 0.5);
}

.custom-select:focus::-ms-value {
  color: #495057;
  background-color: #fff;
}

.custom-select[multiple], .custom-select[size]:not([size="1"]) {
  height: auto;
  padding-right: 0.75rem;
  background-image: none;
}

.custom-select:disabled {
  color: #6c757d;
  background-color: #e9ecef;
}

.custom-select::-ms-expand {
  opacity: 0;
}

.custom-select-sm {
  height: calc(1.8125rem + 2px);
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
  font-size: 75%;
}

.custom-select-lg {
  height: calc(2.875rem + 2px);
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
  font-size: 125%;
}

.custom-file {
  position: relative;
  display: inline-block;
  width: 100%;
  height: calc(2.25rem + 2px);
  margin-bottom: 0;
}

.custom-file-input {
  position: relative;
  z-index: 2;
  width: 100%;
  height: calc(2.25rem + 2px);
  margin: 0;
  opacity: 0;
}

.custom-file-input:focus ~ .custom-file-control {
  border-color: #80bdff;
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.custom-file-input:focus ~ .custom-file-control::before {
  border-color: #80bdff;
}

.custom-file-input:lang(en) ~ .custom-file-label::after {
  content: "Browse";
}

.custom-file-label {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1;
  height: calc(2.25rem + 2px);
  padding: 0.375rem 0.75rem;
  line-height: 1.5;
  color: #495057;
  background-color: #fff;
  border: 1px solid #ced4da;
  border-radius: 0.25rem;
}

.custom-file-label::after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  z-index: 3;
  display: block;
  height: calc(calc(2.25rem + 2px) - 1px * 2);
  padding: 0.375rem 0.75rem;
  line-height: 1.5;
  color: #495057;
  content: "Browse";
  background-color: #e9ecef;
  border-left: 1px solid #ced4da;
  border-radius: 0 0.25rem 0.25rem 0;
}

.nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}

.nav-link {
  display: block;
  padding: 0.5rem 1rem;
}

.nav-link:hover, .nav-link:focus {
  text-decoration: none;
}

.nav-link.disabled {
  color: #6c757d;
}

.nav-tabs {
  border-bottom: 1px solid #dee2e6;
}

.nav-tabs .nav-item {
  margin-bottom: -1px;
}

.nav-tabs .nav-link {
  border: 1px solid transparent;
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

.nav-tabs .nav-link:hover, .nav-tabs .nav-link:focus {
  border-color: #e9ecef #e9ecef #dee2e6;
}

.nav-tabs .nav-link.disabled {
  color: #6c757d;
  background-color: transparent;
  border-color: transparent;
}

.nav-tabs .nav-link.active,
.nav-tabs .nav-item.show .nav-link {
  color: #495057;
  background-color: #fff;
  border-color: #dee2e6 #dee2e6 #fff;
}

.nav-tabs .dropdown-menu {
  margin-top: -1px;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.nav-pills .nav-link {
  border-radius: 0.25rem;
}

.nav-pills .nav-link.active,
.nav-pills .show > .nav-link {
  color: #fff;
  background-color: #007bff;
}

.nav-fill .nav-item {
  -webkit-box-flex: 1;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  text-align: center;
}

.nav-justified .nav-item {
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  text-align: center;
}

.tab-content > .tab-pane {
  display: none;
}

.tab-content > .active {
  display: block;
}

.navbar {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.5rem 1rem;
}

.navbar > .container,
.navbar > .container-fluid {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.navbar-brand {
  display: inline-block;
  padding-top: 0.3125rem;
  padding-bottom: 0.3125rem;
  margin-right: 1rem;
  font-size: 1.25rem;
  line-height: inherit;
  white-space: nowrap;
}

.navbar-brand:hover, .navbar-brand:focus {
  text-decoration: none;
}

.navbar-nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}

.navbar-nav .nav-link {
  padding-right: 0;
  padding-left: 0;
}

.navbar-nav .dropdown-menu {
  position: static;
  float: none;
}

.navbar-text {
  display: inline-block;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.navbar-collapse {
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.navbar-toggler {
  padding: 0.25rem 0.75rem;
  font-size: 1.25rem;
  line-height: 1;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 0.25rem;
}

.navbar-toggler:hover, .navbar-toggler:focus {
  text-decoration: none;
}

.navbar-toggler:not(:disabled):not(.disabled) {
  cursor: pointer;
}

.navbar-toggler-icon {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  vertical-align: middle;
  content: "";
  background: no-repeat center center;
  background-size: 100% 100%;
}

@media (max-width: 575.98px) {
  .navbar-expand-sm > .container,
  .navbar-expand-sm > .container-fluid {
    padding-right: 0;
    padding-left: 0;
  }
}

@media (min-width: 576px) {
  .navbar-expand-sm {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
  .navbar-expand-sm .navbar-nav {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
  }
  .navbar-expand-sm .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .navbar-expand-sm .navbar-nav .dropdown-menu-right {
    right: 0;
    left: auto;
  }
  .navbar-expand-sm .navbar-nav .nav-link {
    padding-right: 0.5rem;
    padding-left: 0.5rem;
  }
  .navbar-expand-sm > .container,
  .navbar-expand-sm > .container-fluid {
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  }
  .navbar-expand-sm .navbar-collapse {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
  }
  .navbar-expand-sm .navbar-toggler {
    display: none;
  }
  .navbar-expand-sm .dropup .dropdown-menu {
    top: auto;
    bottom: 100%;
  }
}

@media (max-width: 767.98px) {
  .navbar-expand-md > .container,
  .navbar-expand-md > .container-fluid {
    padding-right: 0;
    padding-left: 0;
  }
}

@media (min-width: 768px) {
  .navbar-expand-md {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
  .navbar-expand-md .navbar-nav {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
  }
  .navbar-expand-md .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .navbar-expand-md .navbar-nav .dropdown-menu-right {
    right: 0;
    left: auto;
  }
  .navbar-expand-md .navbar-nav .nav-link {
    padding-right: 0.5rem;
    padding-left: 0.5rem;
  }
  .navbar-expand-md > .container,
  .navbar-expand-md > .container-fluid {
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  }
  .navbar-expand-md .navbar-collapse {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
  }
  .navbar-expand-md .navbar-toggler {
    display: none;
  }
  .navbar-expand-md .dropup .dropdown-menu {
    top: auto;
    bottom: 100%;
  }
}

@media (max-width: 991.98px) {
  .navbar-expand-lg > .container,
  .navbar-expand-lg > .container-fluid {
    padding-right: 0;
    padding-left: 0;
  }
}

@media (min-width: 992px) {
  .navbar-expand-lg {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
  .navbar-expand-lg .navbar-nav {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
  }
  .navbar-expand-lg .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .navbar-expand-lg .navbar-nav .dropdown-menu-right {
    right: 0;
    left: auto;
  }
  .navbar-expand-lg .navbar-nav .nav-link {
    padding-right: 0.5rem;
    padding-left: 0.5rem;
  }
  .navbar-expand-lg > .container,
  .navbar-expand-lg > .container-fluid {
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  }
  .navbar-expand-lg .navbar-collapse {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
  }
  .navbar-expand-lg .navbar-toggler {
    display: none;
  }
  .navbar-expand-lg .dropup .dropdown-menu {
    top: auto;
    bottom: 100%;
  }
}

@media (max-width: 1199.98px) {
  .navbar-expand-xl > .container,
  .navbar-expand-xl > .container-fluid {
    padding-right: 0;
    padding-left: 0;
  }
}

@media (min-width: 1200px) {
  .navbar-expand-xl {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-flow: row nowrap;
    flex-flow: row nowrap;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
  }
  .navbar-expand-xl .navbar-nav {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
  }
  .navbar-expand-xl .navbar-nav .dropdown-menu {
    position: absolute;
  }
  .navbar-expand-xl .navbar-nav .dropdown-menu-right {
    right: 0;
    left: auto;
  }
  .navbar-expand-xl .navbar-nav .nav-link {
    padding-right: 0.5rem;
    padding-left: 0.5rem;
  }
  .navbar-expand-xl > .container,
  .navbar-expand-xl > .container-fluid {
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  }
  .navbar-expand-xl .navbar-collapse {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
    -ms-flex-preferred-size: auto;
    flex-basis: auto;
  }
  .navbar-expand-xl .navbar-toggler {
    display: none;
  }
  .navbar-expand-xl .dropup .dropdown-menu {
    top: auto;
    bottom: 100%;
  }
}

.navbar-expand {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.navbar-expand > .container,
.navbar-expand > .container-fluid {
  padding-right: 0;
  padding-left: 0;
}

.navbar-expand .navbar-nav {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
}

.navbar-expand .navbar-nav .dropdown-menu {
  position: absolute;
}

.navbar-expand .navbar-nav .dropdown-menu-right {
  right: 0;
  left: auto;
}

.navbar-expand .navbar-nav .nav-link {
  padding-right: 0.5rem;
  padding-left: 0.5rem;
}

.navbar-expand > .container,
.navbar-expand > .container-fluid {
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}

.navbar-expand .navbar-collapse {
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
}

.navbar-expand .navbar-toggler {
  display: none;
}

.navbar-expand .dropup .dropdown-menu {
  top: auto;
  bottom: 100%;
}

.navbar-light .navbar-brand {
  color: rgba(0, 0, 0, 0.9);
}

.navbar-light .navbar-brand:hover, .navbar-light .navbar-brand:focus {
  color: rgba(0, 0, 0, 0.9);
}

.navbar-light .navbar-nav .nav-link {
  color: rgba(0, 0, 0, 0.5);
}

.navbar-light .navbar-nav .nav-link:hover, .navbar-light .navbar-nav .nav-link:focus {
  color: rgba(0, 0, 0, 0.7);
}

.navbar-light .navbar-nav .nav-link.disabled {
  color: rgba(0, 0, 0, 0.3);
}

.navbar-light .navbar-nav .show > .nav-link,
.navbar-light .navbar-nav .active > .nav-link,
.navbar-light .navbar-nav .nav-link.show,
.navbar-light .navbar-nav .nav-link.active {
  color: rgba(0, 0, 0, 0.9);
}

.navbar-light .navbar-toggler {
  color: rgba(0, 0, 0, 0.5);
  border-color: rgba(0, 0, 0, 0.1);
}

.navbar-light .navbar-toggler-icon {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(0, 0, 0, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E");
}

.navbar-light .navbar-text {
  color: rgba(0, 0, 0, 0.5);
}

.navbar-light .navbar-text a {
  color: rgba(0, 0, 0, 0.9);
}

.navbar-light .navbar-text a:hover, .navbar-light .navbar-text a:focus {
  color: rgba(0, 0, 0, 0.9);
}

.navbar-dark .navbar-brand {
  color: #fff;
}

.navbar-dark .navbar-brand:hover, .navbar-dark .navbar-brand:focus {
  color: #fff;
}

.navbar-dark .navbar-nav .nav-link {
  color: rgba(255, 255, 255, 0.5);
}

.navbar-dark .navbar-nav .nav-link:hover, .navbar-dark .navbar-nav .nav-link:focus {
  color: rgba(255, 255, 255, 0.75);
}

.navbar-dark .navbar-nav .nav-link.disabled {
  color: rgba(255, 255, 255, 0.25);
}

.navbar-dark .navbar-nav .show > .nav-link,
.navbar-dark .navbar-nav .active > .nav-link,
.navbar-dark .navbar-nav .nav-link.show,
.navbar-dark .navbar-nav .nav-link.active {
  color: #fff;
}

.navbar-dark .navbar-toggler {
  color: rgba(255, 255, 255, 0.5);
  border-color: rgba(255, 255, 255, 0.1);
}

.navbar-dark .navbar-toggler-icon {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='rgba(255, 255, 255, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E");
}

.navbar-dark .navbar-text {
  color: rgba(255, 255, 255, 0.5);
}

.navbar-dark .navbar-text a {
  color: #fff;
}

.navbar-dark .navbar-text a:hover, .navbar-dark .navbar-text a:focus {
  color: #fff;
}

.card {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;
  background-color: #fff;
  background-clip: border-box;
  border: 1px solid rgba(0, 0, 0, 0.125);
  border-radius: 0.25rem;
}

.card > hr {
  margin-right: 0;
  margin-left: 0;
}

.card > .list-group:first-child .list-group-item:first-child {
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

.card > .list-group:last-child .list-group-item:last-child {
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.card-body {
  -webkit-box-flex: 1;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding: 1.25rem;
}

.card-title {
  margin-bottom: 0.75rem;
}

.card-subtitle {
  margin-top: -0.375rem;
  margin-bottom: 0;
}

.card-text:last-child {
  margin-bottom: 0;
}

.card-link:hover {
  text-decoration: none;
}

.card-link + .card-link {
  margin-left: 1.25rem;
}

.card-header {
  padding: 0.75rem 1.25rem;
  margin-bottom: 0;
  background-color: rgba(0, 0, 0, 0.03);
  border-bottom: 1px solid rgba(0, 0, 0, 0.125);
}

.card-header:first-child {
  border-radius: calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0;
}

.card-header + .list-group .list-group-item:first-child {
  border-top: 0;
}

.card-footer {
  padding: 0.75rem 1.25rem;
  background-color: rgba(0, 0, 0, 0.03);
  border-top: 1px solid rgba(0, 0, 0, 0.125);
}

.card-footer:last-child {
  border-radius: 0 0 calc(0.25rem - 1px) calc(0.25rem - 1px);
}

.card-header-tabs {
  margin-right: -0.625rem;
  margin-bottom: -0.75rem;
  margin-left: -0.625rem;
  border-bottom: 0;
}

.card-header-pills {
  margin-right: -0.625rem;
  margin-left: -0.625rem;
}

.card-img-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: 1.25rem;
}

.card-img {
  width: 100%;
  border-radius: calc(0.25rem - 1px);
}

.card-img-top {
  width: 100%;
  border-top-left-radius: calc(0.25rem - 1px);
  border-top-right-radius: calc(0.25rem - 1px);
}

.card-img-bottom {
  width: 100%;
  border-bottom-right-radius: calc(0.25rem - 1px);
  border-bottom-left-radius: calc(0.25rem - 1px);
}

.card-deck {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.card-deck .card {
  margin-bottom: 15px;
}

@media (min-width: 576px) {
  .card-deck {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
    margin-right: -15px;
    margin-left: -15px;
  }
  .card-deck .card {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-flex: 1;
    -ms-flex: 1 0 0%;
    flex: 1 0 0%;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    margin-right: 15px;
    margin-bottom: 0;
    margin-left: 15px;
  }
}

.card-group {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.card-group > .card {
  margin-bottom: 15px;
}

@media (min-width: 576px) {
  .card-group {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-flow: row wrap;
    flex-flow: row wrap;
  }
  .card-group > .card {
    -webkit-box-flex: 1;
    -ms-flex: 1 0 0%;
    flex: 1 0 0%;
    margin-bottom: 0;
  }
  .card-group > .card + .card {
    margin-left: 0;
    border-left: 0;
  }
  .card-group > .card:first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  .card-group > .card:first-child .card-img-top,
  .card-group > .card:first-child .card-header {
    border-top-right-radius: 0;
  }
  .card-group > .card:first-child .card-img-bottom,
  .card-group > .card:first-child .card-footer {
    border-bottom-right-radius: 0;
  }
  .card-group > .card:last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
  .card-group > .card:last-child .card-img-top,
  .card-group > .card:last-child .card-header {
    border-top-left-radius: 0;
  }
  .card-group > .card:last-child .card-img-bottom,
  .card-group > .card:last-child .card-footer {
    border-bottom-left-radius: 0;
  }
  .card-group > .card:only-child {
    border-radius: 0.25rem;
  }
  .card-group > .card:only-child .card-img-top,
  .card-group > .card:only-child .card-header {
    border-top-left-radius: 0.25rem;
    border-top-right-radius: 0.25rem;
  }
  .card-group > .card:only-child .card-img-bottom,
  .card-group > .card:only-child .card-footer {
    border-bottom-right-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
  }
  .card-group > .card:not(:first-child):not(:last-child):not(:only-child) {
    border-radius: 0;
  }
  .card-group > .card:not(:first-child):not(:last-child):not(:only-child) .card-img-top,
  .card-group > .card:not(:first-child):not(:last-child):not(:only-child) .card-img-bottom,
  .card-group > .card:not(:first-child):not(:last-child):not(:only-child) .card-header,
  .card-group > .card:not(:first-child):not(:last-child):not(:only-child) .card-footer {
    border-radius: 0;
  }
}

.card-columns .card {
  margin-bottom: 0.75rem;
}

@media (min-width: 576px) {
  .card-columns {
    -webkit-column-count: 3;
    -moz-column-count: 3;
    column-count: 3;
    -webkit-column-gap: 1.25rem;
    -moz-column-gap: 1.25rem;
    column-gap: 1.25rem;
  }
  .card-columns .card {
    display: inline-block;
    width: 100%;
  }
}

.breadcrumb {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 0.75rem 1rem;
  margin-bottom: 1rem;
  list-style: none;
  background-color: #e9ecef;
  border-radius: 0.25rem;
}

.breadcrumb-item + .breadcrumb-item::before {
  display: inline-block;
  padding-right: 0.5rem;
  padding-left: 0.5rem;
  color: #6c757d;
  content: "/";
}

.breadcrumb-item + .breadcrumb-item:hover::before {
  text-decoration: underline;
}

.breadcrumb-item + .breadcrumb-item:hover::before {
  text-decoration: none;
}

.breadcrumb-item.active {
  color: #6c757d;
}

.pagination {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding-left: 0;
  list-style: none;
  border-radius: 0.25rem;
}

.page-link {
  position: relative;
  display: block;
  padding: 0.5rem 0.75rem;
  margin-left: -1px;
  line-height: 1.25;
  color: #007bff;
  background-color: #fff;
  border: 1px solid #dee2e6;
}

.page-link:hover {
  color: #0056b3;
  text-decoration: none;
  background-color: #e9ecef;
  border-color: #dee2e6;
}

.page-link:focus {
  z-index: 2;
  outline: 0;
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

.page-link:not(:disabled):not(.disabled) {
  cursor: pointer;
}

.page-item:first-child .page-link {
  margin-left: 0;
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.page-item:last-child .page-link {
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
}

.page-item.active .page-link {
  z-index: 1;
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

.page-item.disabled .page-link {
  color: #6c757d;
  pointer-events: none;
  cursor: auto;
  background-color: #fff;
  border-color: #dee2e6;
}

.pagination-lg .page-link {
  padding: 0.75rem 1.5rem;
  font-size: 1.25rem;
  line-height: 1.5;
}

.pagination-lg .page-item:first-child .page-link {
  border-top-left-radius: 0.3rem;
  border-bottom-left-radius: 0.3rem;
}

.pagination-lg .page-item:last-child .page-link {
  border-top-right-radius: 0.3rem;
  border-bottom-right-radius: 0.3rem;
}

.pagination-sm .page-link {
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  line-height: 1.5;
}

.pagination-sm .page-item:first-child .page-link {
  border-top-left-radius: 0.2rem;
  border-bottom-left-radius: 0.2rem;
}

.pagination-sm .page-item:last-child .page-link {
  border-top-right-radius: 0.2rem;
  border-bottom-right-radius: 0.2rem;
}

.badge {
  display: inline-block;
  padding: 0.25em 0.4em;
  font-size: 75%;
  font-weight: 700;
  line-height: 1;
  text-align: center;
  white-space: nowrap;
  vertical-align: baseline;
  border-radius: 0.25rem;
}

.badge:empty {
  display: none;
}

.btn .badge {
  position: relative;
  top: -1px;
}

.badge-pill {
  padding-right: 0.6em;
  padding-left: 0.6em;
  border-radius: 10rem;
}

.badge-primary {
  color: #fff;
  background-color: #007bff;
}

.badge-primary[href]:hover, .badge-primary[href]:focus {
  color: #fff;
  text-decoration: none;
  background-color: #0062cc;
}

.badge-secondary {
  color: #fff;
  background-color: #6c757d;
}

.badge-secondary[href]:hover, .badge-secondary[href]:focus {
  color: #fff;
  text-decoration: none;
  background-color: #545b62;
}

.badge-success {
  color: #fff;
  background-color: #28a745;
}

.badge-success[href]:hover, .badge-success[href]:focus {
  color: #fff;
  text-decoration: none;
  background-color: #1e7e34;
}

.badge-info {
  color: #fff;
  background-color: #17a2b8;
}

.badge-info[href]:hover, .badge-info[href]:focus {
  color: #fff;
  text-decoration: none;
  background-color: #117a8b;
}

.badge-warning {
  color: #212529;
  background-color: #ffc107;
}

.badge-warning[href]:hover, .badge-warning[href]:focus {
  color: #212529;
  text-decoration: none;
  background-color: #d39e00;
}

.badge-danger {
  color: #fff;
  background-color: #dc3545;
}

.badge-danger[href]:hover, .badge-danger[href]:focus {
  color: #fff;
  text-decoration: none;
  background-color: #bd2130;
}

.badge-light {
  color: #212529;
  background-color: #f8f9fa;
}

.badge-light[href]:hover, .badge-light[href]:focus {
  color: #212529;
  text-decoration: none;
  background-color: #dae0e5;
}

.badge-dark {
  color: #fff;
  background-color: #343a40;
}

.badge-dark[href]:hover, .badge-dark[href]:focus {
  color: #fff;
  text-decoration: none;
  background-color: #1d2124;
}

.jumbotron {
  padding: 2rem 1rem;
  margin-bottom: 2rem;
  background-color: #e9ecef;
  border-radius: 0.3rem;
}

@media (min-width: 576px) {
  .jumbotron {
    padding: 4rem 2rem;
  }
}

.jumbotron-fluid {
  padding-right: 0;
  padding-left: 0;
  border-radius: 0;
}

.alert {
  position: relative;
  padding: 0.75rem 1.25rem;
  margin-bottom: 1rem;
  border: 1px solid transparent;
  border-radius: 0.25rem;
}

.alert-heading {
  color: inherit;
}

.alert-link {
  font-weight: 700;
}

.alert-dismissible {
  padding-right: 4rem;
}

.alert-dismissible .close {
  position: absolute;
  top: 0;
  right: 0;
  padding: 0.75rem 1.25rem;
  color: inherit;
}

.alert-primary {
  color: #004085;
  background-color: #cce5ff;
  border-color: #b8daff;
}

.alert-primary hr {
  border-top-color: #9fcdff;
}

.alert-primary .alert-link {
  color: #002752;
}

.alert-secondary {
  color: #383d41;
  background-color: #e2e3e5;
  border-color: #d6d8db;
}

.alert-secondary hr {
  border-top-color: #c8cbcf;
}

.alert-secondary .alert-link {
  color: #202326;
}

.alert-success {
  color: #155724;
  background-color: #d4edda;
  border-color: #c3e6cb;
}

.alert-success hr {
  border-top-color: #b1dfbb;
}

.alert-success .alert-link {
  color: #0b2e13;
}

.alert-info {
  color: #0c5460;
  background-color: #d1ecf1;
  border-color: #bee5eb;
}

.alert-info hr {
  border-top-color: #abdde5;
}

.alert-info .alert-link {
  color: #062c33;
}

.alert-warning {
  color: #856404;
  background-color: #fff3cd;
  border-color: #ffeeba;
}

.alert-warning hr {
  border-top-color: #ffe8a1;
}

.alert-warning .alert-link {
  color: #533f03;
}

.alert-danger {
  color: #721c24;
  background-color: #f8d7da;
  border-color: #f5c6cb;
}

.alert-danger hr {
  border-top-color: #f1b0b7;
}

.alert-danger .alert-link {
  color: #491217;
}

.alert-light {
  color: #818182;
  background-color: #fefefe;
  border-color: #fdfdfe;
}

.alert-light hr {
  border-top-color: #ececf6;
}

.alert-light .alert-link {
  color: #686868;
}

.alert-dark {
  color: #1b1e21;
  background-color: #d6d8d9;
  border-color: #c6c8ca;
}

.alert-dark hr {
  border-top-color: #b9bbbe;
}

.alert-dark .alert-link {
  color: #040505;
}

@-webkit-keyframes progress-bar-stripes {
  from {
    background-position: 1rem 0;
  }
  to {
    background-position: 0 0;
  }
}

@keyframes progress-bar-stripes {
  from {
    background-position: 1rem 0;
  }
  to {
    background-position: 0 0;
  }
}

.progress {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  height: 1rem;
  overflow: hidden;
  font-size: 0.75rem;
  background-color: #e9ecef;
  border-radius: 0.25rem;
}

.progress-bar {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #fff;
  text-align: center;
  background-color: #007bff;
  transition: width 0.6s ease;
}

.progress-bar-striped {
  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
  background-size: 1rem 1rem;
}

.progress-bar-animated {
  -webkit-animation: progress-bar-stripes 1s linear infinite;
  animation: progress-bar-stripes 1s linear infinite;
}

.media {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
}

.media-body {
  -webkit-box-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.list-group {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-left: 0;
  margin-bottom: 0;
}

.list-group-item-action {
  width: 100%;
  color: #495057;
  text-align: inherit;
}

.list-group-item-action:hover, .list-group-item-action:focus {
  color: #495057;
  text-decoration: none;
  background-color: #f8f9fa;
}

.list-group-item-action:active {
  color: #212529;
  background-color: #e9ecef;
}

.list-group-item {
  position: relative;
  display: block;
  padding: 0.75rem 1.25rem;
  margin-bottom: -1px;
  background-color: #fff;
  border: 1px solid rgba(0, 0, 0, 0.125);
}

.list-group-item:first-child {
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

.list-group-item:last-child {
  margin-bottom: 0;
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.list-group-item:hover, .list-group-item:focus {
  z-index: 1;
  text-decoration: none;
}

.list-group-item.disabled, .list-group-item:disabled {
  color: #6c757d;
  background-color: #fff;
}

.list-group-item.active {
  z-index: 2;
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

.list-group-flush .list-group-item {
  border-right: 0;
  border-left: 0;
  border-radius: 0;
}

.list-group-flush:first-child .list-group-item:first-child {
  border-top: 0;
}

.list-group-flush:last-child .list-group-item:last-child {
  border-bottom: 0;
}

.list-group-item-primary {
  color: #004085;
  background-color: #b8daff;
}

.list-group-item-primary.list-group-item-action:hover, .list-group-item-primary.list-group-item-action:focus {
  color: #004085;
  background-color: #9fcdff;
}

.list-group-item-primary.list-group-item-action.active {
  color: #fff;
  background-color: #004085;
  border-color: #004085;
}

.list-group-item-secondary {
  color: #383d41;
  background-color: #d6d8db;
}

.list-group-item-secondary.list-group-item-action:hover, .list-group-item-secondary.list-group-item-action:focus {
  color: #383d41;
  background-color: #c8cbcf;
}

.list-group-item-secondary.list-group-item-action.active {
  color: #fff;
  background-color: #383d41;
  border-color: #383d41;
}

.list-group-item-success {
  color: #155724;
  background-color: #c3e6cb;
}

.list-group-item-success.list-group-item-action:hover, .list-group-item-success.list-group-item-action:focus {
  color: #155724;
  background-color: #b1dfbb;
}

.list-group-item-success.list-group-item-action.active {
  color: #fff;
  background-color: #155724;
  border-color: #155724;
}

.list-group-item-info {
  color: #0c5460;
  background-color: #bee5eb;
}

.list-group-item-info.list-group-item-action:hover, .list-group-item-info.list-group-item-action:focus {
  color: #0c5460;
  background-color: #abdde5;
}

.list-group-item-info.list-group-item-action.active {
  color: #fff;
  background-color: #0c5460;
  border-color: #0c5460;
}

.list-group-item-warning {
  color: #856404;
  background-color: #ffeeba;
}

.list-group-item-warning.list-group-item-action:hover, .list-group-item-warning.list-group-item-action:focus {
  color: #856404;
  background-color: #ffe8a1;
}

.list-group-item-warning.list-group-item-action.active {
  color: #fff;
  background-color: #856404;
  border-color: #856404;
}

.list-group-item-danger {
  color: #721c24;
  background-color: #f5c6cb;
}

.list-group-item-danger.list-group-item-action:hover, .list-group-item-danger.list-group-item-action:focus {
  color: #721c24;
  background-color: #f1b0b7;
}

.list-group-item-danger.list-group-item-action.active {
  color: #fff;
  background-color: #721c24;
  border-color: #721c24;
}

.list-group-item-light {
  color: #818182;
  background-color: #fdfdfe;
}

.list-group-item-light.list-group-item-action:hover, .list-group-item-light.list-group-item-action:focus {
  color: #818182;
  background-color: #ececf6;
}

.list-group-item-light.list-group-item-action.active {
  color: #fff;
  background-color: #818182;
  border-color: #818182;
}

.list-group-item-dark {
  color: #1b1e21;
  background-color: #c6c8ca;
}

.list-group-item-dark.list-group-item-action:hover, .list-group-item-dark.list-group-item-action:focus {
  color: #1b1e21;
  background-color: #b9bbbe;
}

.list-group-item-dark.list-group-item-action.active {
  color: #fff;
  background-color: #1b1e21;
  border-color: #1b1e21;
}

.close {
  float: right;
  font-size: 1.5rem;
  font-weight: 700;
  line-height: 1;
  color: #000;
  text-shadow: 0 1px 0 #fff;
  opacity: .5;
}

.close:hover, .close:focus {
  color: #000;
  text-decoration: none;
  opacity: .75;
}

.close:not(:disabled):not(.disabled) {
  cursor: pointer;
}

button.close {
  padding: 0;
  background-color: transparent;
  border: 0;
  -webkit-appearance: none;
}

.modal-open {
  overflow: hidden;
}

.modal {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1050;
  display: none;
  overflow: hidden;
  outline: 0;
}

.modal-open .modal {
  overflow-x: hidden;
  overflow-y: auto;
}

.modal-dialog {
  position: relative;
  width: auto;
  margin: 0.5rem;
  pointer-events: none;
}

.modal.fade .modal-dialog {
  transition: -webkit-transform 0.3s ease-out;
  transition: transform 0.3s ease-out;
  transition: transform 0.3s ease-out, -webkit-transform 0.3s ease-out;
  -webkit-transform: translate(0, -25%);
  transform: translate(0, -25%);
}

.modal.show .modal-dialog {
  -webkit-transform: translate(0, 0);
  transform: translate(0, 0);
}

.modal-dialog-centered {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  min-height: calc(100% - (0.5rem * 2));
}

.modal-content {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  pointer-events: auto;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0.3rem;
  outline: 0;
}

.modal-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1040;
  background-color: #000;
}

.modal-backdrop.fade {
  opacity: 0;
}

.modal-backdrop.show {
  opacity: 0.5;
}

.modal-header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 1rem;
  border-bottom: 1px solid #e9ecef;
  border-top-left-radius: 0.3rem;
  border-top-right-radius: 0.3rem;
}

.modal-header .close {
  padding: 1rem;
  margin: -1rem -1rem -1rem auto;
}

.modal-title {
  margin-bottom: 0;
  line-height: 1.5;
}

.modal-body {
  position: relative;
  -webkit-box-flex: 1;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  padding: 1rem;
}

.modal-footer {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  padding: 1rem;
  border-top: 1px solid #e9ecef;
}

.modal-footer > :not(:first-child) {
  margin-left: .25rem;
}

.modal-footer > :not(:last-child) {
  margin-right: .25rem;
}

.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll;
}

@media (min-width: 576px) {
  .modal-dialog {
    max-width: 500px;
    margin: 1.75rem auto;
  }
  .modal-dialog-centered {
    min-height: calc(100% - (1.75rem * 2));
  }
  .modal-sm {
    max-width: 300px;
  }
}

@media (min-width: 992px) {
  .modal-lg {
    max-width: 800px;
  }
}

.tooltip {
  position: absolute;
  z-index: 1070;
  display: block;
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  text-align: left;
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  word-spacing: normal;
  white-space: normal;
  line-break: auto;
  font-size: 0.875rem;
  word-wrap: break-word;
  opacity: 0;
}

.tooltip.show {
  opacity: 0.9;
}

.tooltip .arrow {
  position: absolute;
  display: block;
  width: 0.8rem;
  height: 0.4rem;
}

.tooltip .arrow::before {
  position: absolute;
  content: "";
  border-color: transparent;
  border-style: solid;
}

.bs-tooltip-top, .bs-tooltip-auto[x-placement^="top"] {
  padding: 0.4rem 0;
}

.bs-tooltip-top .arrow, .bs-tooltip-auto[x-placement^="top"] .arrow {
  bottom: 0;
}

.bs-tooltip-top .arrow::before, .bs-tooltip-auto[x-placement^="top"] .arrow::before {
  top: 0;
  border-width: 0.4rem 0.4rem 0;
  border-top-color: #000;
}

.bs-tooltip-right, .bs-tooltip-auto[x-placement^="right"] {
  padding: 0 0.4rem;
}

.bs-tooltip-right .arrow, .bs-tooltip-auto[x-placement^="right"] .arrow {
  left: 0;
  width: 0.4rem;
  height: 0.8rem;
}

.bs-tooltip-right .arrow::before, .bs-tooltip-auto[x-placement^="right"] .arrow::before {
  right: 0;
  border-width: 0.4rem 0.4rem 0.4rem 0;
  border-right-color: #000;
}

.bs-tooltip-bottom, .bs-tooltip-auto[x-placement^="bottom"] {
  padding: 0.4rem 0;
}

.bs-tooltip-bottom .arrow, .bs-tooltip-auto[x-placement^="bottom"] .arrow {
  top: 0;
}

.bs-tooltip-bottom .arrow::before, .bs-tooltip-auto[x-placement^="bottom"] .arrow::before {
  bottom: 0;
  border-width: 0 0.4rem 0.4rem;
  border-bottom-color: #000;
}

.bs-tooltip-left, .bs-tooltip-auto[x-placement^="left"] {
  padding: 0 0.4rem;
}

.bs-tooltip-left .arrow, .bs-tooltip-auto[x-placement^="left"] .arrow {
  right: 0;
  width: 0.4rem;
  height: 0.8rem;
}

.bs-tooltip-left .arrow::before, .bs-tooltip-auto[x-placement^="left"] .arrow::before {
  left: 0;
  border-width: 0.4rem 0 0.4rem 0.4rem;
  border-left-color: #000;
}

.tooltip-inner {
  max-width: 200px;
  padding: 0.25rem 0.5rem;
  color: #fff;
  text-align: center;
  background-color: #000;
  border-radius: 0.25rem;
}

.popover {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1060;
  display: block;
  max-width: 276px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-style: normal;
  font-weight: 400;
  line-height: 1.5;
  text-align: left;
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  word-spacing: normal;
  white-space: normal;
  line-break: auto;
  font-size: 0.875rem;
  word-wrap: break-word;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0.3rem;
}

.popover .arrow {
  position: absolute;
  display: block;
  width: 1rem;
  height: 0.5rem;
  margin: 0 0.3rem;
}

.popover .arrow::before, .popover .arrow::after {
  position: absolute;
  display: block;
  content: "";
  border-color: transparent;
  border-style: solid;
}

.bs-popover-top, .bs-popover-auto[x-placement^="top"] {
  margin-bottom: 0.5rem;
}

.bs-popover-top .arrow, .bs-popover-auto[x-placement^="top"] .arrow {
  bottom: calc((0.5rem + 1px) * -1);
}

.bs-popover-top .arrow::before, .bs-popover-auto[x-placement^="top"] .arrow::before,
.bs-popover-top .arrow::after, .bs-popover-auto[x-placement^="top"] .arrow::after {
  border-width: 0.5rem 0.5rem 0;
}

.bs-popover-top .arrow::before, .bs-popover-auto[x-placement^="top"] .arrow::before {
  bottom: 0;
  border-top-color: rgba(0, 0, 0, 0.25);
}

.bs-popover-top .arrow::after, .bs-popover-auto[x-placement^="top"] .arrow::after {
  bottom: 1px;
  border-top-color: #fff;
}

.bs-popover-right, .bs-popover-auto[x-placement^="right"] {
  margin-left: 0.5rem;
}

.bs-popover-right .arrow, .bs-popover-auto[x-placement^="right"] .arrow {
  left: calc((0.5rem + 1px) * -1);
  width: 0.5rem;
  height: 1rem;
  margin: 0.3rem 0;
}

.bs-popover-right .arrow::before, .bs-popover-auto[x-placement^="right"] .arrow::before,
.bs-popover-right .arrow::after, .bs-popover-auto[x-placement^="right"] .arrow::after {
  border-width: 0.5rem 0.5rem 0.5rem 0;
}

.bs-popover-right .arrow::before, .bs-popover-auto[x-placement^="right"] .arrow::before {
  left: 0;
  border-right-color: rgba(0, 0, 0, 0.25);
}

.bs-popover-right .arrow::after, .bs-popover-auto[x-placement^="right"] .arrow::after {
  left: 1px;
  border-right-color: #fff;
}

.bs-popover-bottom, .bs-popover-auto[x-placement^="bottom"] {
  margin-top: 0.5rem;
}

.bs-popover-bottom .arrow, .bs-popover-auto[x-placement^="bottom"] .arrow {
  top: calc((0.5rem + 1px) * -1);
}

.bs-popover-bottom .arrow::before, .bs-popover-auto[x-placement^="bottom"] .arrow::before,
.bs-popover-bottom .arrow::after, .bs-popover-auto[x-placement^="bottom"] .arrow::after {
  border-width: 0 0.5rem 0.5rem 0.5rem;
}

.bs-popover-bottom .arrow::before, .bs-popover-auto[x-placement^="bottom"] .arrow::before {
  top: 0;
  border-bottom-color: rgba(0, 0, 0, 0.25);
}

.bs-popover-bottom .arrow::after, .bs-popover-auto[x-placement^="bottom"] .arrow::after {
  top: 1px;
  border-bottom-color: #fff;
}

.bs-popover-bottom .popover-header::before, .bs-popover-auto[x-placement^="bottom"] .popover-header::before {
  position: absolute;
  top: 0;
  left: 50%;
  display: block;
  width: 1rem;
  margin-left: -0.5rem;
  content: "";
  border-bottom: 1px solid #f7f7f7;
}

.bs-popover-left, .bs-popover-auto[x-placement^="left"] {
  margin-right: 0.5rem;
}

.bs-popover-left .arrow, .bs-popover-auto[x-placement^="left"] .arrow {
  right: calc((0.5rem + 1px) * -1);
  width: 0.5rem;
  height: 1rem;
  margin: 0.3rem 0;
}

.bs-popover-left .arrow::before, .bs-popover-auto[x-placement^="left"] .arrow::before,
.bs-popover-left .arrow::after, .bs-popover-auto[x-placement^="left"] .arrow::after {
  border-width: 0.5rem 0 0.5rem 0.5rem;
}

.bs-popover-left .arrow::before, .bs-popover-auto[x-placement^="left"] .arrow::before {
  right: 0;
  border-left-color: rgba(0, 0, 0, 0.25);
}

.bs-popover-left .arrow::after, .bs-popover-auto[x-placement^="left"] .arrow::after {
  right: 1px;
  border-left-color: #fff;
}

.popover-header {
  padding: 0.5rem 0.75rem;
  margin-bottom: 0;
  font-size: 1rem;
  color: inherit;
  background-color: #f7f7f7;
  border-bottom: 1px solid #ebebeb;
  border-top-left-radius: calc(0.3rem - 1px);
  border-top-right-radius: calc(0.3rem - 1px);
}

.popover-header:empty {
  display: none;
}

.popover-body {
  padding: 0.5rem 0.75rem;
  color: #212529;
}

.carousel {
  position: relative;
}

.carousel-inner {
  position: relative;
  width: 100%;
  overflow: hidden;
}

.carousel-item {
  position: relative;
  display: none;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  transition: -webkit-transform 0.6s ease;
  transition: transform 0.6s ease;
  transition: transform 0.6s ease, -webkit-transform 0.6s ease;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-perspective: 1000px;
  perspective: 1000px;
}

.carousel-item.active,
.carousel-item-next,
.carousel-item-prev {
  display: block;
}

.carousel-item-next,
.carousel-item-prev {
  position: absolute;
  top: 0;
}

.carousel-item-next.carousel-item-left,
.carousel-item-prev.carousel-item-right {
  -webkit-transform: translateX(0);
  transform: translateX(0);
}

@supports ((-webkit-transform-style: preserve-3d) or (transform-style: preserve-3d)) {
  .carousel-item-next.carousel-item-left,
  .carousel-item-prev.carousel-item-right {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

.carousel-item-next,
.active.carousel-item-right {
  -webkit-transform: translateX(100%);
  transform: translateX(100%);
}

@supports ((-webkit-transform-style: preserve-3d) or (transform-style: preserve-3d)) {
  .carousel-item-next,
  .active.carousel-item-right {
    -webkit-transform: translate3d(100%, 0, 0);
    transform: translate3d(100%, 0, 0);
  }
}

.carousel-item-prev,
.active.carousel-item-left {
  -webkit-transform: translateX(-100%);
  transform: translateX(-100%);
}

@supports ((-webkit-transform-style: preserve-3d) or (transform-style: preserve-3d)) {
  .carousel-item-prev,
  .active.carousel-item-left {
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0);
  }
}

.carousel-control-prev,
.carousel-control-next {
  position: absolute;
  top: 0;
  bottom: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 15%;
  color: #fff;
  text-align: center;
  opacity: 0.5;
}

.carousel-control-prev:hover, .carousel-control-prev:focus,
.carousel-control-next:hover,
.carousel-control-next:focus {
  color: #fff;
  text-decoration: none;
  outline: 0;
  opacity: .9;
}

.carousel-control-prev {
  left: 0;
}

.carousel-control-next {
  right: 0;
}

.carousel-control-prev-icon,
.carousel-control-next-icon {
  display: inline-block;
  width: 20px;
  height: 20px;
  background: transparent no-repeat center center;
  background-size: 100% 100%;
}

.carousel-control-prev-icon {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E");
}

.carousel-control-next-icon {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E");
}

.carousel-indicators {
  position: absolute;
  right: 0;
  bottom: 10px;
  left: 0;
  z-index: 15;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding-left: 0;
  margin-right: 15%;
  margin-left: 15%;
  list-style: none;
}

.carousel-indicators li {
  position: relative;
  -webkit-box-flex: 0;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  width: 30px;
  height: 3px;
  margin-right: 3px;
  margin-left: 3px;
  text-indent: -999px;
  background-color: rgba(255, 255, 255, 0.5);
}

.carousel-indicators li::before {
  position: absolute;
  top: -10px;
  left: 0;
  display: inline-block;
  width: 100%;
  height: 10px;
  content: "";
}

.carousel-indicators li::after {
  position: absolute;
  bottom: -10px;
  left: 0;
  display: inline-block;
  width: 100%;
  height: 10px;
  content: "";
}

.carousel-indicators .active {
  background-color: #fff;
}

.carousel-caption {
  position: absolute;
  right: 15%;
  bottom: 20px;
  left: 15%;
  z-index: 10;
  padding-top: 20px;
  padding-bottom: 20px;
  color: #fff;
  text-align: center;
}

.align-baseline {
  vertical-align: baseline !important;
}

.align-top {
  vertical-align: top !important;
}

.align-middle {
  vertical-align: middle !important;
}

.align-bottom {
  vertical-align: bottom !important;
}

.align-text-bottom {
  vertical-align: text-bottom !important;
}

.align-text-top {
  vertical-align: text-top !important;
}

.bg-primary {
  background-color: #007bff !important;
}

a.bg-primary:hover, a.bg-primary:focus,
button.bg-primary:hover,
button.bg-primary:focus {
  background-color: #0062cc !important;
}

.bg-secondary {
  background-color: #6c757d !important;
}

a.bg-secondary:hover, a.bg-secondary:focus,
button.bg-secondary:hover,
button.bg-secondary:focus {
  background-color: #545b62 !important;
}

.bg-success {
  background-color: #28a745 !important;
}

a.bg-success:hover, a.bg-success:focus,
button.bg-success:hover,
button.bg-success:focus {
  background-color: #1e7e34 !important;
}

.bg-info {
  background-color: #17a2b8 !important;
}

a.bg-info:hover, a.bg-info:focus,
button.bg-info:hover,
button.bg-info:focus {
  background-color: #117a8b !important;
}

.bg-warning {
  background-color: #ffc107 !important;
}

a.bg-warning:hover, a.bg-warning:focus,
button.bg-warning:hover,
button.bg-warning:focus {
  background-color: #d39e00 !important;
}

.bg-danger {
  background-color: #dc3545 !important;
}

a.bg-danger:hover, a.bg-danger:focus,
button.bg-danger:hover,
button.bg-danger:focus {
  background-color: #bd2130 !important;
}

.bg-light {
  background-color: #f8f9fa !important;
}

a.bg-light:hover, a.bg-light:focus,
button.bg-light:hover,
button.bg-light:focus {
  background-color: #dae0e5 !important;
}

.bg-dark {
  background-color: #343a40 !important;
}

a.bg-dark:hover, a.bg-dark:focus,
button.bg-dark:hover,
button.bg-dark:focus {
  background-color: #1d2124 !important;
}

.bg-white {
  background-color: #fff !important;
}

.bg-transparent {
  background-color: transparent !important;
}

.border {
  border: 1px solid #dee2e6 !important;
}

.border-top {
  border-top: 1px solid #dee2e6 !important;
}

.border-right {
  border-right: 1px solid #dee2e6 !important;
}

.border-bottom {
  border-bottom: 1px solid #dee2e6 !important;
}

.border-left {
  border-left: 1px solid #dee2e6 !important;
}

.border-0 {
  border: 0 !important;
}

.border-top-0 {
  border-top: 0 !important;
}

.border-right-0 {
  border-right: 0 !important;
}

.border-bottom-0 {
  border-bottom: 0 !important;
}

.border-left-0 {
  border-left: 0 !important;
}

.border-primary {
  border-color: #007bff !important;
}

.border-secondary {
  border-color: #6c757d !important;
}

.border-success {
  border-color: #28a745 !important;
}

.border-info {
  border-color: #17a2b8 !important;
}

.border-warning {
  border-color: #ffc107 !important;
}

.border-danger {
  border-color: #dc3545 !important;
}

.border-light {
  border-color: #f8f9fa !important;
}

.border-dark {
  border-color: #343a40 !important;
}

.border-white {
  border-color: #fff !important;
}

.rounded {
  border-radius: 0.25rem !important;
}

.rounded-top {
  border-top-left-radius: 0.25rem !important;
  border-top-right-radius: 0.25rem !important;
}

.rounded-right {
  border-top-right-radius: 0.25rem !important;
  border-bottom-right-radius: 0.25rem !important;
}

.rounded-bottom {
  border-bottom-right-radius: 0.25rem !important;
  border-bottom-left-radius: 0.25rem !important;
}

.rounded-left {
  border-top-left-radius: 0.25rem !important;
  border-bottom-left-radius: 0.25rem !important;
}

.rounded-circle {
  border-radius: 50% !important;
}

.rounded-0 {
  border-radius: 0 !important;
}

.clearfix::after {
  display: block;
  clear: both;
  content: "";
}

.d-none {
  display: none !important;
}

.d-inline {
  display: inline !important;
}

.d-inline-block {
  display: inline-block !important;
}

.d-block {
  display: block !important;
}

.d-table {
  display: table !important;
}

.d-table-row {
  display: table-row !important;
}

.d-table-cell {
  display: table-cell !important;
}

.d-flex {
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important;
}

.d-inline-flex {
  display: -webkit-inline-box !important;
  display: -ms-inline-flexbox !important;
  display: inline-flex !important;
}

@media (min-width: 576px) {
  .d-sm-none {
    display: none !important;
  }
  .d-sm-inline {
    display: inline !important;
  }
  .d-sm-inline-block {
    display: inline-block !important;
  }
  .d-sm-block {
    display: block !important;
  }
  .d-sm-table {
    display: table !important;
  }
  .d-sm-table-row {
    display: table-row !important;
  }
  .d-sm-table-cell {
    display: table-cell !important;
  }
  .d-sm-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }
  .d-sm-inline-flex {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }
}

@media (min-width: 768px) {
  .d-md-none {
    display: none !important;
  }
  .d-md-inline {
    display: inline !important;
  }
  .d-md-inline-block {
    display: inline-block !important;
  }
  .d-md-block {
    display: block !important;
  }
  .d-md-table {
    display: table !important;
  }
  .d-md-table-row {
    display: table-row !important;
  }
  .d-md-table-cell {
    display: table-cell !important;
  }
  .d-md-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }
  .d-md-inline-flex {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }
}

@media (min-width: 992px) {
  .d-lg-none {
    display: none !important;
  }
  .d-lg-inline {
    display: inline !important;
  }
  .d-lg-inline-block {
    display: inline-block !important;
  }
  .d-lg-block {
    display: block !important;
  }
  .d-lg-table {
    display: table !important;
  }
  .d-lg-table-row {
    display: table-row !important;
  }
  .d-lg-table-cell {
    display: table-cell !important;
  }
  .d-lg-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }
  .d-lg-inline-flex {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }
}

@media (min-width: 1200px) {
  .d-xl-none {
    display: none !important;
  }
  .d-xl-inline {
    display: inline !important;
  }
  .d-xl-inline-block {
    display: inline-block !important;
  }
  .d-xl-block {
    display: block !important;
  }
  .d-xl-table {
    display: table !important;
  }
  .d-xl-table-row {
    display: table-row !important;
  }
  .d-xl-table-cell {
    display: table-cell !important;
  }
  .d-xl-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }
  .d-xl-inline-flex {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }
}

@media print {
  .d-print-none {
    display: none !important;
  }
  .d-print-inline {
    display: inline !important;
  }
  .d-print-inline-block {
    display: inline-block !important;
  }
  .d-print-block {
    display: block !important;
  }
  .d-print-table {
    display: table !important;
  }
  .d-print-table-row {
    display: table-row !important;
  }
  .d-print-table-cell {
    display: table-cell !important;
  }
  .d-print-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }
  .d-print-inline-flex {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }
}

.embed-responsive {
  position: relative;
  display: block;
  width: 100%;
  padding: 0;
  overflow: hidden;
}

.embed-responsive::before {
  display: block;
  content: "";
}

.embed-responsive .embed-responsive-item,
.embed-responsive iframe,
.embed-responsive embed,
.embed-responsive object,
.embed-responsive video {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
}

.embed-responsive-21by9::before {
  padding-top: 42.857143%;
}

.embed-responsive-16by9::before {
  padding-top: 56.25%;
}

.embed-responsive-4by3::before {
  padding-top: 75%;
}

.embed-responsive-1by1::before {
  padding-top: 100%;
}

.flex-row {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: normal !important;
  -ms-flex-direction: row !important;
  flex-direction: row !important;
}

.flex-column {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: normal !important;
  -ms-flex-direction: column !important;
  flex-direction: column !important;
}

.flex-row-reverse {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: reverse !important;
  -ms-flex-direction: row-reverse !important;
  flex-direction: row-reverse !important;
}

.flex-column-reverse {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: reverse !important;
  -ms-flex-direction: column-reverse !important;
  flex-direction: column-reverse !important;
}

.flex-wrap {
  -ms-flex-wrap: wrap !important;
  flex-wrap: wrap !important;
}

.flex-nowrap {
  -ms-flex-wrap: nowrap !important;
  flex-wrap: nowrap !important;
}

.flex-wrap-reverse {
  -ms-flex-wrap: wrap-reverse !important;
  flex-wrap: wrap-reverse !important;
}

.justify-content-start {
  -webkit-box-pack: start !important;
  -ms-flex-pack: start !important;
  justify-content: flex-start !important;
}

.justify-content-end {
  -webkit-box-pack: end !important;
  -ms-flex-pack: end !important;
  justify-content: flex-end !important;
}

.justify-content-center {
  -webkit-box-pack: center !important;
  -ms-flex-pack: center !important;
  justify-content: center !important;
}

.justify-content-between {
  -webkit-box-pack: justify !important;
  -ms-flex-pack: justify !important;
  justify-content: space-between !important;
}

.justify-content-around {
  -ms-flex-pack: distribute !important;
  justify-content: space-around !important;
}

.align-items-start {
  -webkit-box-align: start !important;
  -ms-flex-align: start !important;
  align-items: flex-start !important;
}

.align-items-end {
  -webkit-box-align: end !important;
  -ms-flex-align: end !important;
  align-items: flex-end !important;
}

.align-items-center {
  -webkit-box-align: center !important;
  -ms-flex-align: center !important;
  align-items: center !important;
}

.align-items-baseline {
  -webkit-box-align: baseline !important;
  -ms-flex-align: baseline !important;
  align-items: baseline !important;
}

.align-items-stretch {
  -webkit-box-align: stretch !important;
  -ms-flex-align: stretch !important;
  align-items: stretch !important;
}

.align-content-start {
  -ms-flex-line-pack: start !important;
  align-content: flex-start !important;
}

.align-content-end {
  -ms-flex-line-pack: end !important;
  align-content: flex-end !important;
}

.align-content-center {
  -ms-flex-line-pack: center !important;
  align-content: center !important;
}

.align-content-between {
  -ms-flex-line-pack: justify !important;
  align-content: space-between !important;
}

.align-content-around {
  -ms-flex-line-pack: distribute !important;
  align-content: space-around !important;
}

.align-content-stretch {
  -ms-flex-line-pack: stretch !important;
  align-content: stretch !important;
}

.align-self-auto {
  -ms-flex-item-align: auto !important;
  align-self: auto !important;
}

.align-self-start {
  -ms-flex-item-align: start !important;
  align-self: flex-start !important;
}

.align-self-end {
  -ms-flex-item-align: end !important;
  align-self: flex-end !important;
}

.align-self-center {
  -ms-flex-item-align: center !important;
  align-self: center !important;
}

.align-self-baseline {
  -ms-flex-item-align: baseline !important;
  align-self: baseline !important;
}

.align-self-stretch {
  -ms-flex-item-align: stretch !important;
  align-self: stretch !important;
}

@media (min-width: 576px) {
  .flex-sm-row {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
    -ms-flex-direction: row !important;
    flex-direction: row !important;
  }
  .flex-sm-column {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
    -ms-flex-direction: column !important;
    flex-direction: column !important;
  }
  .flex-sm-row-reverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
    -ms-flex-direction: row-reverse !important;
    flex-direction: row-reverse !important;
  }
  .flex-sm-column-reverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
    -ms-flex-direction: column-reverse !important;
    flex-direction: column-reverse !important;
  }
  .flex-sm-wrap {
    -ms-flex-wrap: wrap !important;
    flex-wrap: wrap !important;
  }
  .flex-sm-nowrap {
    -ms-flex-wrap: nowrap !important;
    flex-wrap: nowrap !important;
  }
  .flex-sm-wrap-reverse {
    -ms-flex-wrap: wrap-reverse !important;
    flex-wrap: wrap-reverse !important;
  }
  .justify-content-sm-start {
    -webkit-box-pack: start !important;
    -ms-flex-pack: start !important;
    justify-content: flex-start !important;
  }
  .justify-content-sm-end {
    -webkit-box-pack: end !important;
    -ms-flex-pack: end !important;
    justify-content: flex-end !important;
  }
  .justify-content-sm-center {
    -webkit-box-pack: center !important;
    -ms-flex-pack: center !important;
    justify-content: center !important;
  }
  .justify-content-sm-between {
    -webkit-box-pack: justify !important;
    -ms-flex-pack: justify !important;
    justify-content: space-between !important;
  }
  .justify-content-sm-around {
    -ms-flex-pack: distribute !important;
    justify-content: space-around !important;
  }
  .align-items-sm-start {
    -webkit-box-align: start !important;
    -ms-flex-align: start !important;
    align-items: flex-start !important;
  }
  .align-items-sm-end {
    -webkit-box-align: end !important;
    -ms-flex-align: end !important;
    align-items: flex-end !important;
  }
  .align-items-sm-center {
    -webkit-box-align: center !important;
    -ms-flex-align: center !important;
    align-items: center !important;
  }
  .align-items-sm-baseline {
    -webkit-box-align: baseline !important;
    -ms-flex-align: baseline !important;
    align-items: baseline !important;
  }
  .align-items-sm-stretch {
    -webkit-box-align: stretch !important;
    -ms-flex-align: stretch !important;
    align-items: stretch !important;
  }
  .align-content-sm-start {
    -ms-flex-line-pack: start !important;
    align-content: flex-start !important;
  }
  .align-content-sm-end {
    -ms-flex-line-pack: end !important;
    align-content: flex-end !important;
  }
  .align-content-sm-center {
    -ms-flex-line-pack: center !important;
    align-content: center !important;
  }
  .align-content-sm-between {
    -ms-flex-line-pack: justify !important;
    align-content: space-between !important;
  }
  .align-content-sm-around {
    -ms-flex-line-pack: distribute !important;
    align-content: space-around !important;
  }
  .align-content-sm-stretch {
    -ms-flex-line-pack: stretch !important;
    align-content: stretch !important;
  }
  .align-self-sm-auto {
    -ms-flex-item-align: auto !important;
    align-self: auto !important;
  }
  .align-self-sm-start {
    -ms-flex-item-align: start !important;
    align-self: flex-start !important;
  }
  .align-self-sm-end {
    -ms-flex-item-align: end !important;
    align-self: flex-end !important;
  }
  .align-self-sm-center {
    -ms-flex-item-align: center !important;
    align-self: center !important;
  }
  .align-self-sm-baseline {
    -ms-flex-item-align: baseline !important;
    align-self: baseline !important;
  }
  .align-self-sm-stretch {
    -ms-flex-item-align: stretch !important;
    align-self: stretch !important;
  }
}

@media (min-width: 768px) {
  .flex-md-row {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
    -ms-flex-direction: row !important;
    flex-direction: row !important;
  }
  .flex-md-column {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
    -ms-flex-direction: column !important;
    flex-direction: column !important;
  }
  .flex-md-row-reverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
    -ms-flex-direction: row-reverse !important;
    flex-direction: row-reverse !important;
  }
  .flex-md-column-reverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
    -ms-flex-direction: column-reverse !important;
    flex-direction: column-reverse !important;
  }
  .flex-md-wrap {
    -ms-flex-wrap: wrap !important;
    flex-wrap: wrap !important;
  }
  .flex-md-nowrap {
    -ms-flex-wrap: nowrap !important;
    flex-wrap: nowrap !important;
  }
  .flex-md-wrap-reverse {
    -ms-flex-wrap: wrap-reverse !important;
    flex-wrap: wrap-reverse !important;
  }
  .justify-content-md-start {
    -webkit-box-pack: start !important;
    -ms-flex-pack: start !important;
    justify-content: flex-start !important;
  }
  .justify-content-md-end {
    -webkit-box-pack: end !important;
    -ms-flex-pack: end !important;
    justify-content: flex-end !important;
  }
  .justify-content-md-center {
    -webkit-box-pack: center !important;
    -ms-flex-pack: center !important;
    justify-content: center !important;
  }
  .justify-content-md-between {
    -webkit-box-pack: justify !important;
    -ms-flex-pack: justify !important;
    justify-content: space-between !important;
  }
  .justify-content-md-around {
    -ms-flex-pack: distribute !important;
    justify-content: space-around !important;
  }
  .align-items-md-start {
    -webkit-box-align: start !important;
    -ms-flex-align: start !important;
    align-items: flex-start !important;
  }
  .align-items-md-end {
    -webkit-box-align: end !important;
    -ms-flex-align: end !important;
    align-items: flex-end !important;
  }
  .align-items-md-center {
    -webkit-box-align: center !important;
    -ms-flex-align: center !important;
    align-items: center !important;
  }
  .align-items-md-baseline {
    -webkit-box-align: baseline !important;
    -ms-flex-align: baseline !important;
    align-items: baseline !important;
  }
  .align-items-md-stretch {
    -webkit-box-align: stretch !important;
    -ms-flex-align: stretch !important;
    align-items: stretch !important;
  }
  .align-content-md-start {
    -ms-flex-line-pack: start !important;
    align-content: flex-start !important;
  }
  .align-content-md-end {
    -ms-flex-line-pack: end !important;
    align-content: flex-end !important;
  }
  .align-content-md-center {
    -ms-flex-line-pack: center !important;
    align-content: center !important;
  }
  .align-content-md-between {
    -ms-flex-line-pack: justify !important;
    align-content: space-between !important;
  }
  .align-content-md-around {
    -ms-flex-line-pack: distribute !important;
    align-content: space-around !important;
  }
  .align-content-md-stretch {
    -ms-flex-line-pack: stretch !important;
    align-content: stretch !important;
  }
  .align-self-md-auto {
    -ms-flex-item-align: auto !important;
    align-self: auto !important;
  }
  .align-self-md-start {
    -ms-flex-item-align: start !important;
    align-self: flex-start !important;
  }
  .align-self-md-end {
    -ms-flex-item-align: end !important;
    align-self: flex-end !important;
  }
  .align-self-md-center {
    -ms-flex-item-align: center !important;
    align-self: center !important;
  }
  .align-self-md-baseline {
    -ms-flex-item-align: baseline !important;
    align-self: baseline !important;
  }
  .align-self-md-stretch {
    -ms-flex-item-align: stretch !important;
    align-self: stretch !important;
  }
}

@media (min-width: 992px) {
  .flex-lg-row {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
    -ms-flex-direction: row !important;
    flex-direction: row !important;
  }
  .flex-lg-column {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
    -ms-flex-direction: column !important;
    flex-direction: column !important;
  }
  .flex-lg-row-reverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
    -ms-flex-direction: row-reverse !important;
    flex-direction: row-reverse !important;
  }
  .flex-lg-column-reverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
    -ms-flex-direction: column-reverse !important;
    flex-direction: column-reverse !important;
  }
  .flex-lg-wrap {
    -ms-flex-wrap: wrap !important;
    flex-wrap: wrap !important;
  }
  .flex-lg-nowrap {
    -ms-flex-wrap: nowrap !important;
    flex-wrap: nowrap !important;
  }
  .flex-lg-wrap-reverse {
    -ms-flex-wrap: wrap-reverse !important;
    flex-wrap: wrap-reverse !important;
  }
  .justify-content-lg-start {
    -webkit-box-pack: start !important;
    -ms-flex-pack: start !important;
    justify-content: flex-start !important;
  }
  .justify-content-lg-end {
    -webkit-box-pack: end !important;
    -ms-flex-pack: end !important;
    justify-content: flex-end !important;
  }
  .justify-content-lg-center {
    -webkit-box-pack: center !important;
    -ms-flex-pack: center !important;
    justify-content: center !important;
  }
  .justify-content-lg-between {
    -webkit-box-pack: justify !important;
    -ms-flex-pack: justify !important;
    justify-content: space-between !important;
  }
  .justify-content-lg-around {
    -ms-flex-pack: distribute !important;
    justify-content: space-around !important;
  }
  .align-items-lg-start {
    -webkit-box-align: start !important;
    -ms-flex-align: start !important;
    align-items: flex-start !important;
  }
  .align-items-lg-end {
    -webkit-box-align: end !important;
    -ms-flex-align: end !important;
    align-items: flex-end !important;
  }
  .align-items-lg-center {
    -webkit-box-align: center !important;
    -ms-flex-align: center !important;
    align-items: center !important;
  }
  .align-items-lg-baseline {
    -webkit-box-align: baseline !important;
    -ms-flex-align: baseline !important;
    align-items: baseline !important;
  }
  .align-items-lg-stretch {
    -webkit-box-align: stretch !important;
    -ms-flex-align: stretch !important;
    align-items: stretch !important;
  }
  .align-content-lg-start {
    -ms-flex-line-pack: start !important;
    align-content: flex-start !important;
  }
  .align-content-lg-end {
    -ms-flex-line-pack: end !important;
    align-content: flex-end !important;
  }
  .align-content-lg-center {
    -ms-flex-line-pack: center !important;
    align-content: center !important;
  }
  .align-content-lg-between {
    -ms-flex-line-pack: justify !important;
    align-content: space-between !important;
  }
  .align-content-lg-around {
    -ms-flex-line-pack: distribute !important;
    align-content: space-around !important;
  }
  .align-content-lg-stretch {
    -ms-flex-line-pack: stretch !important;
    align-content: stretch !important;
  }
  .align-self-lg-auto {
    -ms-flex-item-align: auto !important;
    align-self: auto !important;
  }
  .align-self-lg-start {
    -ms-flex-item-align: start !important;
    align-self: flex-start !important;
  }
  .align-self-lg-end {
    -ms-flex-item-align: end !important;
    align-self: flex-end !important;
  }
  .align-self-lg-center {
    -ms-flex-item-align: center !important;
    align-self: center !important;
  }
  .align-self-lg-baseline {
    -ms-flex-item-align: baseline !important;
    align-self: baseline !important;
  }
  .align-self-lg-stretch {
    -ms-flex-item-align: stretch !important;
    align-self: stretch !important;
  }
}

@media (min-width: 1200px) {
  .flex-xl-row {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
    -ms-flex-direction: row !important;
    flex-direction: row !important;
  }
  .flex-xl-column {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
    -ms-flex-direction: column !important;
    flex-direction: column !important;
  }
  .flex-xl-row-reverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
    -ms-flex-direction: row-reverse !important;
    flex-direction: row-reverse !important;
  }
  .flex-xl-column-reverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
    -ms-flex-direction: column-reverse !important;
    flex-direction: column-reverse !important;
  }
  .flex-xl-wrap {
    -ms-flex-wrap: wrap !important;
    flex-wrap: wrap !important;
  }
  .flex-xl-nowrap {
    -ms-flex-wrap: nowrap !important;
    flex-wrap: nowrap !important;
  }
  .flex-xl-wrap-reverse {
    -ms-flex-wrap: wrap-reverse !important;
    flex-wrap: wrap-reverse !important;
  }
  .justify-content-xl-start {
    -webkit-box-pack: start !important;
    -ms-flex-pack: start !important;
    justify-content: flex-start !important;
  }
  .justify-content-xl-end {
    -webkit-box-pack: end !important;
    -ms-flex-pack: end !important;
    justify-content: flex-end !important;
  }
  .justify-content-xl-center {
    -webkit-box-pack: center !important;
    -ms-flex-pack: center !important;
    justify-content: center !important;
  }
  .justify-content-xl-between {
    -webkit-box-pack: justify !important;
    -ms-flex-pack: justify !important;
    justify-content: space-between !important;
  }
  .justify-content-xl-around {
    -ms-flex-pack: distribute !important;
    justify-content: space-around !important;
  }
  .align-items-xl-start {
    -webkit-box-align: start !important;
    -ms-flex-align: start !important;
    align-items: flex-start !important;
  }
  .align-items-xl-end {
    -webkit-box-align: end !important;
    -ms-flex-align: end !important;
    align-items: flex-end !important;
  }
  .align-items-xl-center {
    -webkit-box-align: center !important;
    -ms-flex-align: center !important;
    align-items: center !important;
  }
  .align-items-xl-baseline {
    -webkit-box-align: baseline !important;
    -ms-flex-align: baseline !important;
    align-items: baseline !important;
  }
  .align-items-xl-stretch {
    -webkit-box-align: stretch !important;
    -ms-flex-align: stretch !important;
    align-items: stretch !important;
  }
  .align-content-xl-start {
    -ms-flex-line-pack: start !important;
    align-content: flex-start !important;
  }
  .align-content-xl-end {
    -ms-flex-line-pack: end !important;
    align-content: flex-end !important;
  }
  .align-content-xl-center {
    -ms-flex-line-pack: center !important;
    align-content: center !important;
  }
  .align-content-xl-between {
    -ms-flex-line-pack: justify !important;
    align-content: space-between !important;
  }
  .align-content-xl-around {
    -ms-flex-line-pack: distribute !important;
    align-content: space-around !important;
  }
  .align-content-xl-stretch {
    -ms-flex-line-pack: stretch !important;
    align-content: stretch !important;
  }
  .align-self-xl-auto {
    -ms-flex-item-align: auto !important;
    align-self: auto !important;
  }
  .align-self-xl-start {
    -ms-flex-item-align: start !important;
    align-self: flex-start !important;
  }
  .align-self-xl-end {
    -ms-flex-item-align: end !important;
    align-self: flex-end !important;
  }
  .align-self-xl-center {
    -ms-flex-item-align: center !important;
    align-self: center !important;
  }
  .align-self-xl-baseline {
    -ms-flex-item-align: baseline !important;
    align-self: baseline !important;
  }
  .align-self-xl-stretch {
    -ms-flex-item-align: stretch !important;
    align-self: stretch !important;
  }
}

.float-left {
  float: left !important;
}

.float-right {
  float: right !important;
}

.float-none {
  float: none !important;
}

@media (min-width: 576px) {
  .float-sm-left {
    float: left !important;
  }
  .float-sm-right {
    float: right !important;
  }
  .float-sm-none {
    float: none !important;
  }
}

@media (min-width: 768px) {
  .float-md-left {
    float: left !important;
  }
  .float-md-right {
    float: right !important;
  }
  .float-md-none {
    float: none !important;
  }
}

@media (min-width: 992px) {
  .float-lg-left {
    float: left !important;
  }
  .float-lg-right {
    float: right !important;
  }
  .float-lg-none {
    float: none !important;
  }
}

@media (min-width: 1200px) {
  .float-xl-left {
    float: left !important;
  }
  .float-xl-right {
    float: right !important;
  }
  .float-xl-none {
    float: none !important;
  }
}

.position-static {
  position: static !important;
}

.position-relative {
  position: relative !important;
}

.position-absolute {
  position: absolute !important;
}

.position-fixed {
  position: fixed !important;
}

.position-sticky {
  position: -webkit-sticky !important;
  position: sticky !important;
}

.fixed-top {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1030;
}

.fixed-bottom {
  position: fixed;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1030;
}

@supports ((position: -webkit-sticky) or (position: sticky)) {
  .sticky-top {
    position: -webkit-sticky;
    position: sticky;
    top: 0;
    z-index: 1020;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  border: 0;
}

.sr-only-focusable:active, .sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  overflow: visible;
  clip: auto;
  white-space: normal;
  -webkit-clip-path: none;
  clip-path: none;
}

.w-25 {
  width: 25% !important;
}

.w-50 {
  width: 50% !important;
}

.w-75 {
  width: 75% !important;
}

.w-100 {
  width: 100% !important;
}

.h-25 {
  height: 25% !important;
}

.h-50 {
  height: 50% !important;
}

.h-75 {
  height: 75% !important;
}

.h-100 {
  height: 100% !important;
}

.mw-100 {
  max-width: 100% !important;
}

.mh-100 {
  max-height: 100% !important;
}

.m-0 {
  margin: 0 !important;
}

.mt-0,
.my-0 {
  margin-top: 0 !important;
}

.mr-0,
.mx-0 {
  margin-right: 0 !important;
}

.mb-0,
.my-0 {
  margin-bottom: 0 !important;
}

.ml-0,
.mx-0 {
  margin-left: 0 !important;
}

.m-1 {
  margin: 0.25rem !important;
}

.mt-1,
.my-1 {
  margin-top: 0.25rem !important;
}

.mr-1,
.mx-1 {
  margin-right: 0.25rem !important;
}

.mb-1,
.my-1 {
  margin-bottom: 0.25rem !important;
}

.ml-1,
.mx-1 {
  margin-left: 0.25rem !important;
}

.m-2 {
  margin: 0.5rem !important;
}

.mt-2,
.my-2 {
  margin-top: 0.5rem !important;
}

.mr-2,
.mx-2 {
  margin-right: 0.5rem !important;
}

.mb-2,
.my-2 {
  margin-bottom: 0.5rem !important;
}

.ml-2,
.mx-2 {
  margin-left: 0.5rem !important;
}

.m-3 {
  margin: 1rem !important;
}

.mt-3,
.my-3 {
  margin-top: 1rem !important;
}

.mr-3,
.mx-3 {
  margin-right: 1rem !important;
}

.mb-3,
.my-3 {
  margin-bottom: 1rem !important;
}

.ml-3,
.mx-3 {
  margin-left: 1rem !important;
}

.m-4 {
  margin: 1.5rem !important;
}

.mt-4,
.my-4 {
  margin-top: 1.5rem !important;
}

.mr-4,
.mx-4 {
  margin-right: 1.5rem !important;
}

.mb-4,
.my-4 {
  margin-bottom: 1.5rem !important;
}

.ml-4,
.mx-4 {
  margin-left: 1.5rem !important;
}

.m-5 {
  margin: 3rem !important;
}

.mt-5,
.my-5 {
  margin-top: 3rem !important;
}

.mr-5,
.mx-5 {
  margin-right: 3rem !important;
}

.mb-5,
.my-5 {
  margin-bottom: 3rem !important;
}

.ml-5,
.mx-5 {
  margin-left: 3rem !important;
}

.p-0 {
  padding: 0 !important;
}

.pt-0,
.py-0 {
  padding-top: 0 !important;
}

.pr-0,
.px-0 {
  padding-right: 0 !important;
}

.pb-0,
.py-0 {
  padding-bottom: 0 !important;
}

.pl-0,
.px-0 {
  padding-left: 0 !important;
}

.p-1 {
  padding: 0.25rem !important;
}

.pt-1,
.py-1 {
  padding-top: 0.25rem !important;
}

.pr-1,
.px-1 {
  padding-right: 0.25rem !important;
}

.pb-1,
.py-1 {
  padding-bottom: 0.25rem !important;
}

.pl-1,
.px-1 {
  padding-left: 0.25rem !important;
}

.p-2 {
  padding: 0.5rem !important;
}

.pt-2,
.py-2 {
  padding-top: 0.5rem !important;
}

.pr-2,
.px-2 {
  padding-right: 0.5rem !important;
}

.pb-2,
.py-2 {
  padding-bottom: 0.5rem !important;
}

.pl-2,
.px-2 {
  padding-left: 0.5rem !important;
}

.p-3 {
  padding: 1rem !important;
}

.pt-3,
.py-3 {
  padding-top: 1rem !important;
}

.pr-3,
.px-3 {
  padding-right: 1rem !important;
}

.pb-3,
.py-3 {
  padding-bottom: 1rem !important;
}

.pl-3,
.px-3 {
  padding-left: 1rem !important;
}

.p-4 {
  padding: 1.5rem !important;
}

.pt-4,
.py-4 {
  padding-top: 1.5rem !important;
}

.pr-4,
.px-4 {
  padding-right: 1.5rem !important;
}

.pb-4,
.py-4 {
  padding-bottom: 1.5rem !important;
}

.pl-4,
.px-4 {
  padding-left: 1.5rem !important;
}

.p-5 {
  padding: 3rem !important;
}

.pt-5,
.py-5 {
  padding-top: 3rem !important;
}

.pr-5,
.px-5 {
  padding-right: 3rem !important;
}

.pb-5,
.py-5 {
  padding-bottom: 3rem !important;
}

.pl-5,
.px-5 {
  padding-left: 3rem !important;
}

.m-auto {
  margin: auto !important;
}

.mt-auto,
.my-auto {
  margin-top: auto !important;
}

.mr-auto,
.mx-auto {
  margin-right: auto !important;
}

.mb-auto,
.my-auto {
  margin-bottom: auto !important;
}

.ml-auto,
.mx-auto {
  margin-left: auto !important;
}

@media (min-width: 576px) {
  .m-sm-0 {
    margin: 0 !important;
  }
  .mt-sm-0,
  .my-sm-0 {
    margin-top: 0 !important;
  }
  .mr-sm-0,
  .mx-sm-0 {
    margin-right: 0 !important;
  }
  .mb-sm-0,
  .my-sm-0 {
    margin-bottom: 0 !important;
  }
  .ml-sm-0,
  .mx-sm-0 {
    margin-left: 0 !important;
  }
  .m-sm-1 {
    margin: 0.25rem !important;
  }
  .mt-sm-1,
  .my-sm-1 {
    margin-top: 0.25rem !important;
  }
  .mr-sm-1,
  .mx-sm-1 {
    margin-right: 0.25rem !important;
  }
  .mb-sm-1,
  .my-sm-1 {
    margin-bottom: 0.25rem !important;
  }
  .ml-sm-1,
  .mx-sm-1 {
    margin-left: 0.25rem !important;
  }
  .m-sm-2 {
    margin: 0.5rem !important;
  }
  .mt-sm-2,
  .my-sm-2 {
    margin-top: 0.5rem !important;
  }
  .mr-sm-2,
  .mx-sm-2 {
    margin-right: 0.5rem !important;
  }
  .mb-sm-2,
  .my-sm-2 {
    margin-bottom: 0.5rem !important;
  }
  .ml-sm-2,
  .mx-sm-2 {
    margin-left: 0.5rem !important;
  }
  .m-sm-3 {
    margin: 1rem !important;
  }
  .mt-sm-3,
  .my-sm-3 {
    margin-top: 1rem !important;
  }
  .mr-sm-3,
  .mx-sm-3 {
    margin-right: 1rem !important;
  }
  .mb-sm-3,
  .my-sm-3 {
    margin-bottom: 1rem !important;
  }
  .ml-sm-3,
  .mx-sm-3 {
    margin-left: 1rem !important;
  }
  .m-sm-4 {
    margin: 1.5rem !important;
  }
  .mt-sm-4,
  .my-sm-4 {
    margin-top: 1.5rem !important;
  }
  .mr-sm-4,
  .mx-sm-4 {
    margin-right: 1.5rem !important;
  }
  .mb-sm-4,
  .my-sm-4 {
    margin-bottom: 1.5rem !important;
  }
  .ml-sm-4,
  .mx-sm-4 {
    margin-left: 1.5rem !important;
  }
  .m-sm-5 {
    margin: 3rem !important;
  }
  .mt-sm-5,
  .my-sm-5 {
    margin-top: 3rem !important;
  }
  .mr-sm-5,
  .mx-sm-5 {
    margin-right: 3rem !important;
  }
  .mb-sm-5,
  .my-sm-5 {
    margin-bottom: 3rem !important;
  }
  .ml-sm-5,
  .mx-sm-5 {
    margin-left: 3rem !important;
  }
  .p-sm-0 {
    padding: 0 !important;
  }
  .pt-sm-0,
  .py-sm-0 {
    padding-top: 0 !important;
  }
  .pr-sm-0,
  .px-sm-0 {
    padding-right: 0 !important;
  }
  .pb-sm-0,
  .py-sm-0 {
    padding-bottom: 0 !important;
  }
  .pl-sm-0,
  .px-sm-0 {
    padding-left: 0 !important;
  }
  .p-sm-1 {
    padding: 0.25rem !important;
  }
  .pt-sm-1,
  .py-sm-1 {
    padding-top: 0.25rem !important;
  }
  .pr-sm-1,
  .px-sm-1 {
    padding-right: 0.25rem !important;
  }
  .pb-sm-1,
  .py-sm-1 {
    padding-bottom: 0.25rem !important;
  }
  .pl-sm-1,
  .px-sm-1 {
    padding-left: 0.25rem !important;
  }
  .p-sm-2 {
    padding: 0.5rem !important;
  }
  .pt-sm-2,
  .py-sm-2 {
    padding-top: 0.5rem !important;
  }
  .pr-sm-2,
  .px-sm-2 {
    padding-right: 0.5rem !important;
  }
  .pb-sm-2,
  .py-sm-2 {
    padding-bottom: 0.5rem !important;
  }
  .pl-sm-2,
  .px-sm-2 {
    padding-left: 0.5rem !important;
  }
  .p-sm-3 {
    padding: 1rem !important;
  }
  .pt-sm-3,
  .py-sm-3 {
    padding-top: 1rem !important;
  }
  .pr-sm-3,
  .px-sm-3 {
    padding-right: 1rem !important;
  }
  .pb-sm-3,
  .py-sm-3 {
    padding-bottom: 1rem !important;
  }
  .pl-sm-3,
  .px-sm-3 {
    padding-left: 1rem !important;
  }
  .p-sm-4 {
    padding: 1.5rem !important;
  }
  .pt-sm-4,
  .py-sm-4 {
    padding-top: 1.5rem !important;
  }
  .pr-sm-4,
  .px-sm-4 {
    padding-right: 1.5rem !important;
  }
  .pb-sm-4,
  .py-sm-4 {
    padding-bottom: 1.5rem !important;
  }
  .pl-sm-4,
  .px-sm-4 {
    padding-left: 1.5rem !important;
  }
  .p-sm-5 {
    padding: 3rem !important;
  }
  .pt-sm-5,
  .py-sm-5 {
    padding-top: 3rem !important;
  }
  .pr-sm-5,
  .px-sm-5 {
    padding-right: 3rem !important;
  }
  .pb-sm-5,
  .py-sm-5 {
    padding-bottom: 3rem !important;
  }
  .pl-sm-5,
  .px-sm-5 {
    padding-left: 3rem !important;
  }
  .m-sm-auto {
    margin: auto !important;
  }
  .mt-sm-auto,
  .my-sm-auto {
    margin-top: auto !important;
  }
  .mr-sm-auto,
  .mx-sm-auto {
    margin-right: auto !important;
  }
  .mb-sm-auto,
  .my-sm-auto {
    margin-bottom: auto !important;
  }
  .ml-sm-auto,
  .mx-sm-auto {
    margin-left: auto !important;
  }
}

@media (min-width: 768px) {
  .m-md-0 {
    margin: 0 !important;
  }
  .mt-md-0,
  .my-md-0 {
    margin-top: 0 !important;
  }
  .mr-md-0,
  .mx-md-0 {
    margin-right: 0 !important;
  }
  .mb-md-0,
  .my-md-0 {
    margin-bottom: 0 !important;
  }
  .ml-md-0,
  .mx-md-0 {
    margin-left: 0 !important;
  }
  .m-md-1 {
    margin: 0.25rem !important;
  }
  .mt-md-1,
  .my-md-1 {
    margin-top: 0.25rem !important;
  }
  .mr-md-1,
  .mx-md-1 {
    margin-right: 0.25rem !important;
  }
  .mb-md-1,
  .my-md-1 {
    margin-bottom: 0.25rem !important;
  }
  .ml-md-1,
  .mx-md-1 {
    margin-left: 0.25rem !important;
  }
  .m-md-2 {
    margin: 0.5rem !important;
  }
  .mt-md-2,
  .my-md-2 {
    margin-top: 0.5rem !important;
  }
  .mr-md-2,
  .mx-md-2 {
    margin-right: 0.5rem !important;
  }
  .mb-md-2,
  .my-md-2 {
    margin-bottom: 0.5rem !important;
  }
  .ml-md-2,
  .mx-md-2 {
    margin-left: 0.5rem !important;
  }
  .m-md-3 {
    margin: 1rem !important;
  }
  .mt-md-3,
  .my-md-3 {
    margin-top: 1rem !important;
  }
  .mr-md-3,
  .mx-md-3 {
    margin-right: 1rem !important;
  }
  .mb-md-3,
  .my-md-3 {
    margin-bottom: 1rem !important;
  }
  .ml-md-3,
  .mx-md-3 {
    margin-left: 1rem !important;
  }
  .m-md-4 {
    margin: 1.5rem !important;
  }
  .mt-md-4,
  .my-md-4 {
    margin-top: 1.5rem !important;
  }
  .mr-md-4,
  .mx-md-4 {
    margin-right: 1.5rem !important;
  }
  .mb-md-4,
  .my-md-4 {
    margin-bottom: 1.5rem !important;
  }
  .ml-md-4,
  .mx-md-4 {
    margin-left: 1.5rem !important;
  }
  .m-md-5 {
    margin: 3rem !important;
  }
  .mt-md-5,
  .my-md-5 {
    margin-top: 3rem !important;
  }
  .mr-md-5,
  .mx-md-5 {
    margin-right: 3rem !important;
  }
  .mb-md-5,
  .my-md-5 {
    margin-bottom: 3rem !important;
  }
  .ml-md-5,
  .mx-md-5 {
    margin-left: 3rem !important;
  }
  .p-md-0 {
    padding: 0 !important;
  }
  .pt-md-0,
  .py-md-0 {
    padding-top: 0 !important;
  }
  .pr-md-0,
  .px-md-0 {
    padding-right: 0 !important;
  }
  .pb-md-0,
  .py-md-0 {
    padding-bottom: 0 !important;
  }
  .pl-md-0,
  .px-md-0 {
    padding-left: 0 !important;
  }
  .p-md-1 {
    padding: 0.25rem !important;
  }
  .pt-md-1,
  .py-md-1 {
    padding-top: 0.25rem !important;
  }
  .pr-md-1,
  .px-md-1 {
    padding-right: 0.25rem !important;
  }
  .pb-md-1,
  .py-md-1 {
    padding-bottom: 0.25rem !important;
  }
  .pl-md-1,
  .px-md-1 {
    padding-left: 0.25rem !important;
  }
  .p-md-2 {
    padding: 0.5rem !important;
  }
  .pt-md-2,
  .py-md-2 {
    padding-top: 0.5rem !important;
  }
  .pr-md-2,
  .px-md-2 {
    padding-right: 0.5rem !important;
  }
  .pb-md-2,
  .py-md-2 {
    padding-bottom: 0.5rem !important;
  }
  .pl-md-2,
  .px-md-2 {
    padding-left: 0.5rem !important;
  }
  .p-md-3 {
    padding: 1rem !important;
  }
  .pt-md-3,
  .py-md-3 {
    padding-top: 1rem !important;
  }
  .pr-md-3,
  .px-md-3 {
    padding-right: 1rem !important;
  }
  .pb-md-3,
  .py-md-3 {
    padding-bottom: 1rem !important;
  }
  .pl-md-3,
  .px-md-3 {
    padding-left: 1rem !important;
  }
  .p-md-4 {
    padding: 1.5rem !important;
  }
  .pt-md-4,
  .py-md-4 {
    padding-top: 1.5rem !important;
  }
  .pr-md-4,
  .px-md-4 {
    padding-right: 1.5rem !important;
  }
  .pb-md-4,
  .py-md-4 {
    padding-bottom: 1.5rem !important;
  }
  .pl-md-4,
  .px-md-4 {
    padding-left: 1.5rem !important;
  }
  .p-md-5 {
    padding: 3rem !important;
  }
  .pt-md-5,
  .py-md-5 {
    padding-top: 3rem !important;
  }
  .pr-md-5,
  .px-md-5 {
    padding-right: 3rem !important;
  }
  .pb-md-5,
  .py-md-5 {
    padding-bottom: 3rem !important;
  }
  .pl-md-5,
  .px-md-5 {
    padding-left: 3rem !important;
  }
  .m-md-auto {
    margin: auto !important;
  }
  .mt-md-auto,
  .my-md-auto {
    margin-top: auto !important;
  }
  .mr-md-auto,
  .mx-md-auto {
    margin-right: auto !important;
  }
  .mb-md-auto,
  .my-md-auto {
    margin-bottom: auto !important;
  }
  .ml-md-auto,
  .mx-md-auto {
    margin-left: auto !important;
  }
}

@media (min-width: 992px) {
  .m-lg-0 {
    margin: 0 !important;
  }
  .mt-lg-0,
  .my-lg-0 {
    margin-top: 0 !important;
  }
  .mr-lg-0,
  .mx-lg-0 {
    margin-right: 0 !important;
  }
  .mb-lg-0,
  .my-lg-0 {
    margin-bottom: 0 !important;
  }
  .ml-lg-0,
  .mx-lg-0 {
    margin-left: 0 !important;
  }
  .m-lg-1 {
    margin: 0.25rem !important;
  }
  .mt-lg-1,
  .my-lg-1 {
    margin-top: 0.25rem !important;
  }
  .mr-lg-1,
  .mx-lg-1 {
    margin-right: 0.25rem !important;
  }
  .mb-lg-1,
  .my-lg-1 {
    margin-bottom: 0.25rem !important;
  }
  .ml-lg-1,
  .mx-lg-1 {
    margin-left: 0.25rem !important;
  }
  .m-lg-2 {
    margin: 0.5rem !important;
  }
  .mt-lg-2,
  .my-lg-2 {
    margin-top: 0.5rem !important;
  }
  .mr-lg-2,
  .mx-lg-2 {
    margin-right: 0.5rem !important;
  }
  .mb-lg-2,
  .my-lg-2 {
    margin-bottom: 0.5rem !important;
  }
  .ml-lg-2,
  .mx-lg-2 {
    margin-left: 0.5rem !important;
  }
  .m-lg-3 {
    margin: 1rem !important;
  }
  .mt-lg-3,
  .my-lg-3 {
    margin-top: 1rem !important;
  }
  .mr-lg-3,
  .mx-lg-3 {
    margin-right: 1rem !important;
  }
  .mb-lg-3,
  .my-lg-3 {
    margin-bottom: 1rem !important;
  }
  .ml-lg-3,
  .mx-lg-3 {
    margin-left: 1rem !important;
  }
  .m-lg-4 {
    margin: 1.5rem !important;
  }
  .mt-lg-4,
  .my-lg-4 {
    margin-top: 1.5rem !important;
  }
  .mr-lg-4,
  .mx-lg-4 {
    margin-right: 1.5rem !important;
  }
  .mb-lg-4,
  .my-lg-4 {
    margin-bottom: 1.5rem !important;
  }
  .ml-lg-4,
  .mx-lg-4 {
    margin-left: 1.5rem !important;
  }
  .m-lg-5 {
    margin: 3rem !important;
  }
  .mt-lg-5,
  .my-lg-5 {
    margin-top: 3rem !important;
  }
  .mr-lg-5,
  .mx-lg-5 {
    margin-right: 3rem !important;
  }
  .mb-lg-5,
  .my-lg-5 {
    margin-bottom: 3rem !important;
  }
  .ml-lg-5,
  .mx-lg-5 {
    margin-left: 3rem !important;
  }
  .p-lg-0 {
    padding: 0 !important;
  }
  .pt-lg-0,
  .py-lg-0 {
    padding-top: 0 !important;
  }
  .pr-lg-0,
  .px-lg-0 {
    padding-right: 0 !important;
  }
  .pb-lg-0,
  .py-lg-0 {
    padding-bottom: 0 !important;
  }
  .pl-lg-0,
  .px-lg-0 {
    padding-left: 0 !important;
  }
  .p-lg-1 {
    padding: 0.25rem !important;
  }
  .pt-lg-1,
  .py-lg-1 {
    padding-top: 0.25rem !important;
  }
  .pr-lg-1,
  .px-lg-1 {
    padding-right: 0.25rem !important;
  }
  .pb-lg-1,
  .py-lg-1 {
    padding-bottom: 0.25rem !important;
  }
  .pl-lg-1,
  .px-lg-1 {
    padding-left: 0.25rem !important;
  }
  .p-lg-2 {
    padding: 0.5rem !important;
  }
  .pt-lg-2,
  .py-lg-2 {
    padding-top: 0.5rem !important;
  }
  .pr-lg-2,
  .px-lg-2 {
    padding-right: 0.5rem !important;
  }
  .pb-lg-2,
  .py-lg-2 {
    padding-bottom: 0.5rem !important;
  }
  .pl-lg-2,
  .px-lg-2 {
    padding-left: 0.5rem !important;
  }
  .p-lg-3 {
    padding: 1rem !important;
  }
  .pt-lg-3,
  .py-lg-3 {
    padding-top: 1rem !important;
  }
  .pr-lg-3,
  .px-lg-3 {
    padding-right: 1rem !important;
  }
  .pb-lg-3,
  .py-lg-3 {
    padding-bottom: 1rem !important;
  }
  .pl-lg-3,
  .px-lg-3 {
    padding-left: 1rem !important;
  }
  .p-lg-4 {
    padding: 1.5rem !important;
  }
  .pt-lg-4,
  .py-lg-4 {
    padding-top: 1.5rem !important;
  }
  .pr-lg-4,
  .px-lg-4 {
    padding-right: 1.5rem !important;
  }
  .pb-lg-4,
  .py-lg-4 {
    padding-bottom: 1.5rem !important;
  }
  .pl-lg-4,
  .px-lg-4 {
    padding-left: 1.5rem !important;
  }
  .p-lg-5 {
    padding: 3rem !important;
  }
  .pt-lg-5,
  .py-lg-5 {
    padding-top: 3rem !important;
  }
  .pr-lg-5,
  .px-lg-5 {
    padding-right: 3rem !important;
  }
  .pb-lg-5,
  .py-lg-5 {
    padding-bottom: 3rem !important;
  }
  .pl-lg-5,
  .px-lg-5 {
    padding-left: 3rem !important;
  }
  .m-lg-auto {
    margin: auto !important;
  }
  .mt-lg-auto,
  .my-lg-auto {
    margin-top: auto !important;
  }
  .mr-lg-auto,
  .mx-lg-auto {
    margin-right: auto !important;
  }
  .mb-lg-auto,
  .my-lg-auto {
    margin-bottom: auto !important;
  }
  .ml-lg-auto,
  .mx-lg-auto {
    margin-left: auto !important;
  }
}

@media (min-width: 1200px) {
  .m-xl-0 {
    margin: 0 !important;
  }
  .mt-xl-0,
  .my-xl-0 {
    margin-top: 0 !important;
  }
  .mr-xl-0,
  .mx-xl-0 {
    margin-right: 0 !important;
  }
  .mb-xl-0,
  .my-xl-0 {
    margin-bottom: 0 !important;
  }
  .ml-xl-0,
  .mx-xl-0 {
    margin-left: 0 !important;
  }
  .m-xl-1 {
    margin: 0.25rem !important;
  }
  .mt-xl-1,
  .my-xl-1 {
    margin-top: 0.25rem !important;
  }
  .mr-xl-1,
  .mx-xl-1 {
    margin-right: 0.25rem !important;
  }
  .mb-xl-1,
  .my-xl-1 {
    margin-bottom: 0.25rem !important;
  }
  .ml-xl-1,
  .mx-xl-1 {
    margin-left: 0.25rem !important;
  }
  .m-xl-2 {
    margin: 0.5rem !important;
  }
  .mt-xl-2,
  .my-xl-2 {
    margin-top: 0.5rem !important;
  }
  .mr-xl-2,
  .mx-xl-2 {
    margin-right: 0.5rem !important;
  }
  .mb-xl-2,
  .my-xl-2 {
    margin-bottom: 0.5rem !important;
  }
  .ml-xl-2,
  .mx-xl-2 {
    margin-left: 0.5rem !important;
  }
  .m-xl-3 {
    margin: 1rem !important;
  }
  .mt-xl-3,
  .my-xl-3 {
    margin-top: 1rem !important;
  }
  .mr-xl-3,
  .mx-xl-3 {
    margin-right: 1rem !important;
  }
  .mb-xl-3,
  .my-xl-3 {
    margin-bottom: 1rem !important;
  }
  .ml-xl-3,
  .mx-xl-3 {
    margin-left: 1rem !important;
  }
  .m-xl-4 {
    margin: 1.5rem !important;
  }
  .mt-xl-4,
  .my-xl-4 {
    margin-top: 1.5rem !important;
  }
  .mr-xl-4,
  .mx-xl-4 {
    margin-right: 1.5rem !important;
  }
  .mb-xl-4,
  .my-xl-4 {
    margin-bottom: 1.5rem !important;
  }
  .ml-xl-4,
  .mx-xl-4 {
    margin-left: 1.5rem !important;
  }
  .m-xl-5 {
    margin: 3rem !important;
  }
  .mt-xl-5,
  .my-xl-5 {
    margin-top: 3rem !important;
  }
  .mr-xl-5,
  .mx-xl-5 {
    margin-right: 3rem !important;
  }
  .mb-xl-5,
  .my-xl-5 {
    margin-bottom: 3rem !important;
  }
  .ml-xl-5,
  .mx-xl-5 {
    margin-left: 3rem !important;
  }
  .p-xl-0 {
    padding: 0 !important;
  }
  .pt-xl-0,
  .py-xl-0 {
    padding-top: 0 !important;
  }
  .pr-xl-0,
  .px-xl-0 {
    padding-right: 0 !important;
  }
  .pb-xl-0,
  .py-xl-0 {
    padding-bottom: 0 !important;
  }
  .pl-xl-0,
  .px-xl-0 {
    padding-left: 0 !important;
  }
  .p-xl-1 {
    padding: 0.25rem !important;
  }
  .pt-xl-1,
  .py-xl-1 {
    padding-top: 0.25rem !important;
  }
  .pr-xl-1,
  .px-xl-1 {
    padding-right: 0.25rem !important;
  }
  .pb-xl-1,
  .py-xl-1 {
    padding-bottom: 0.25rem !important;
  }
  .pl-xl-1,
  .px-xl-1 {
    padding-left: 0.25rem !important;
  }
  .p-xl-2 {
    padding: 0.5rem !important;
  }
  .pt-xl-2,
  .py-xl-2 {
    padding-top: 0.5rem !important;
  }
  .pr-xl-2,
  .px-xl-2 {
    padding-right: 0.5rem !important;
  }
  .pb-xl-2,
  .py-xl-2 {
    padding-bottom: 0.5rem !important;
  }
  .pl-xl-2,
  .px-xl-2 {
    padding-left: 0.5rem !important;
  }
  .p-xl-3 {
    padding: 1rem !important;
  }
  .pt-xl-3,
  .py-xl-3 {
    padding-top: 1rem !important;
  }
  .pr-xl-3,
  .px-xl-3 {
    padding-right: 1rem !important;
  }
  .pb-xl-3,
  .py-xl-3 {
    padding-bottom: 1rem !important;
  }
  .pl-xl-3,
  .px-xl-3 {
    padding-left: 1rem !important;
  }
  .p-xl-4 {
    padding: 1.5rem !important;
  }
  .pt-xl-4,
  .py-xl-4 {
    padding-top: 1.5rem !important;
  }
  .pr-xl-4,
  .px-xl-4 {
    padding-right: 1.5rem !important;
  }
  .pb-xl-4,
  .py-xl-4 {
    padding-bottom: 1.5rem !important;
  }
  .pl-xl-4,
  .px-xl-4 {
    padding-left: 1.5rem !important;
  }
  .p-xl-5 {
    padding: 3rem !important;
  }
  .pt-xl-5,
  .py-xl-5 {
    padding-top: 3rem !important;
  }
  .pr-xl-5,
  .px-xl-5 {
    padding-right: 3rem !important;
  }
  .pb-xl-5,
  .py-xl-5 {
    padding-bottom: 3rem !important;
  }
  .pl-xl-5,
  .px-xl-5 {
    padding-left: 3rem !important;
  }
  .m-xl-auto {
    margin: auto !important;
  }
  .mt-xl-auto,
  .my-xl-auto {
    margin-top: auto !important;
  }
  .mr-xl-auto,
  .mx-xl-auto {
    margin-right: auto !important;
  }
  .mb-xl-auto,
  .my-xl-auto {
    margin-bottom: auto !important;
  }
  .ml-xl-auto,
  .mx-xl-auto {
    margin-left: auto !important;
  }
}

.text-justify {
  text-align: justify !important;
}

.text-nowrap {
  white-space: nowrap !important;
}

.text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-left {
  text-align: left !important;
}

.text-right {
  text-align: right !important;
}

.text-center {
  text-align: center !important;
}

@media (min-width: 576px) {
  .text-sm-left {
    text-align: left !important;
  }
  .text-sm-right {
    text-align: right !important;
  }
  .text-sm-center {
    text-align: center !important;
  }
}

@media (min-width: 768px) {
  .text-md-left {
    text-align: left !important;
  }
  .text-md-right {
    text-align: right !important;
  }
  .text-md-center {
    text-align: center !important;
  }
}

@media (min-width: 992px) {
  .text-lg-left {
    text-align: left !important;
  }
  .text-lg-right {
    text-align: right !important;
  }
  .text-lg-center {
    text-align: center !important;
  }
}

@media (min-width: 1200px) {
  .text-xl-left {
    text-align: left !important;
  }
  .text-xl-right {
    text-align: right !important;
  }
  .text-xl-center {
    text-align: center !important;
  }
}

.text-lowercase {
  text-transform: lowercase !important;
}

.text-uppercase {
  text-transform: uppercase !important;
}

.text-capitalize {
  text-transform: capitalize !important;
}

.font-weight-light {
  font-weight: 300 !important;
}

.font-weight-normal {
  font-weight: 400 !important;
}

.font-weight-bold {
  font-weight: 700 !important;
}

.font-italic {
  font-style: italic !important;
}

.text-white {
  color: #fff !important;
}

.text-primary {
  color: #007bff !important;
}

a.text-primary:hover, a.text-primary:focus {
  color: #0062cc !important;
}

.text-secondary {
  color: #6c757d !important;
}

a.text-secondary:hover, a.text-secondary:focus {
  color: #545b62 !important;
}

.text-success {
  color: #28a745 !important;
}

a.text-success:hover, a.text-success:focus {
  color: #1e7e34 !important;
}

.text-info {
  color: #17a2b8 !important;
}

a.text-info:hover, a.text-info:focus {
  color: #117a8b !important;
}

.text-warning {
  color: #ffc107 !important;
}

a.text-warning:hover, a.text-warning:focus {
  color: #d39e00 !important;
}

.text-danger {
  color: #dc3545 !important;
}

a.text-danger:hover, a.text-danger:focus {
  color: #bd2130 !important;
}

.text-light {
  color: #f8f9fa !important;
}

a.text-light:hover, a.text-light:focus {
  color: #dae0e5 !important;
}

.text-dark {
  color: #343a40 !important;
}

a.text-dark:hover, a.text-dark:focus {
  color: #1d2124 !important;
}

.text-muted {
  color: #6c757d !important;
}

.text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

.visible {
  visibility: visible !important;
}

.invisible {
  visibility: hidden !important;
}

@media print {
  *,
  *::before,
  *::after {
    text-shadow: none !important;
    box-shadow: none !important;
  }
  a:not(.btn) {
    text-decoration: underline;
  }
  abbr[title]::after {
    content: " (" attr(title) ")";
  }
  pre {
    white-space: pre-wrap !important;
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
  @page {
    size: a3;
  }
  body {
    min-width: 992px !important;
  }
  .container {
    min-width: 992px !important;
  }
  .navbar {
    display: none;
  }
  .badge {
    border: 1px solid #000;
  }
  .table {
    border-collapse: collapse !important;
  }
  .table td,
  .table th {
    background-color: #fff !important;
  }
  .table-bordered th,
  .table-bordered td {
    border: 1px solid #ddd !important;
  }
}
/*# sourceMappingURL=bootstrap.css.map */


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

C:\Maheshwar\workspace\ReactUI\src\css\cmacommon.css


/*
 * Contains common styles for Card Member Acquisition Group Web Applications
 */
a {
    font-size: 100%;
    color: blue;
    text-decoration: underline;
    cursor: hand
}


hr {
    color: black;
    height: 1px
}

/*************************************/
/* This section contains menu styles */
/*************************************/


#dropmenu0,#dropmenu1,#dropmenu3,#dropmenu4,#dropmenu5,#dropmenu6,#dropmenu7,#dropmenu8 {
    background-color:#6699CC;
    width:150px
}

#dropmenu2 {
    border: 2px solid black
}

.iewrap1 {
    position:absolute;height:20px
}

.iewrap2 {
    color:#FFFFFF
}

.iewrap3 {
    position:relative
}

.menuback {
    background-color:#6699CC
}

.menuhead {
    color: #FFFFFF
}

.topmenu {
    font-size: 8pt;
    color: #FFFFFF;
    padding-left: 3px;
    width: 150px;
    cursor: default
}

/* This is for the custom pulldown */
.topmenub {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    font-size: 9pt;
    color: #002266;
    text-decoration: none;
    width: 140px;
    cursor: default
}

/* This is for the custom pulldown */
.topmenuc {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    font-size: 9pt;
    color: #002266;
    text-decoration: none;
    width: 300px;
    cursor: default
}

/********************************************************/
/* This section contains table styles                   */
/********************************************************/

/* For use with cells that require a bottom border*/
.tblBorderBottomThin{
    border-bottom : thin solid Black;
}

/*For use with  table cell with bottom thin border of 1px*/
.tblBorderBottomThin1px{
    border-bottom : thin solid Black;
    border-bottom-width : 1px;
}

/*For use with  table cell with bottom and right thin border*/
.tblBorderBottomRightThin{
    border-right : thin solid Black;
    border-bottom : thin solid Black;
}

/*For use with  table cell with right thin border*/
.tblBorderRightThin{
    border-right : thin solid Black;
}

/*For use with  table cell with right thin border of 1px*/
.tblBorderRightThin1px{
    border-right : thin solid Black;
    border-width : 1px;
}

/* For use with cells that require a top border*/
.tblBorderTopThin{
    border-top : thin solid Black;
}

/*For use with  table cell with top and right thin border*/
.tblBorderTopRightThin{
    border-right : thin solid Black;
    border-top : thin solid Black;
}

.tblheadercma {
    text-align: left;
    vertical-align: top;
    width: 100%;
    background-color: #FFFFFF;
    border: thin groove #ADD8E6;
    border-width : 2px 0px 2px 0px
}

.tblmaincma {
    text-align: left;
    vertical-align: top;
    height: 100%;
    width: 100%;
    background-color: #F0F8FF;
    border: thin groove #ADD8E6;
    border-width : 0px 2px 2px 2px
}

.tdapplication {
    font-style : normal;
    font-size: 100%;
    font-weight: bold;
    color: white;
    text-transform: capitalize;
    padding-bottom: 3px;

}

.tdbtnpullback {
    background-color: #E6E6FA
}

.tdcntntR {
    font-size: 75%;
    color: Red
}

.tdsmallR {
    font-size: 58%;
    color: Red
}

.tdcntntsmall {
    font-size: 70%;
    color: Blue
}
.tdcntntBoldGreen {
    font-size: 80%;

    color: green;
    text-align: left;
}
.tdcntntsmallcaps {
    font-size: 70%;
    color: Blue;
    text-transform : uppercase;
}

.tdcntntsmallcapsbold {
    font-size: 60%;
    color: White;
    text-transform : uppercase;
    background-color : #639ACE;

}
.tdcntntGreenbold {
    padding-top:2px;
    color: Green;

}
.tdcntntsmallG {
    font-size: 70%;
    color: Green;
}

.tdcntntsmallR {
    font-size: 70%;
    color: Red;
}
.tdcntntsmallB {
    font-size: 70%;
    color: Blue;
}
.tdcntntsmallR1 {
    font-size: 80%;
    color: Red;
}

.tddepartment {
    font-size: 75%;
    font-weight: bold;
    color:white;
    text-transform: capitalize;
    padding-bottom: 3px
}

.tddivider {
    border-left: thin dotted silver
}

/*Small text for cells*/
.tdfrmsmall {
    font-size: 60%;
}
.tdfrmleadsmall {
    font-size: 60%;
    text-transform: uppercase
}

/*Small italic text for cells*/
.tdfrmsmallitalic {
    font-size: 60%;
    font-style : italic;
}

.tdheadsmall {
    font-weight: bold;
    font-size: 70%;
    color: navy
}

.tdRedTxt {
    color: Red;
}

/*Small Italic Text*/
.tdShade1Italic {
    font-size: 75%;
    background-color: #F0F8FF;
    font-style : italic;
}

/*Small Italic Text*/
.tdShade2Italic {
    font-size: 75%;
    background-color: #F0FFF0;
    font-style : italic;
}

.tdShade3Italic {
    font-size: 70%;
    background-color: #F0F8FF;
    font-style : italic;
}

/*Red Text*/
.tdShadeRed {
    color: white;
    font-size: 75%;
    background-color: Red;
}

/*for table cells with shade1 and no font change*/
.tdshade1bgonly {
    background-color: #F0F8FF;
    font-size: 75%;
}

/*for table cells with shade2 and no font change*/
.tdshade2bgonly {
    background-color: #F0FFF0;
}

/*Small Gray Text*/
.tdSmallGray {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    font-weight: normal;
    font-size: 75%;
    color: gray;
}

.tdsubtitlecma {
    font-size: 80%;
    font-weight: bold;
    color: navy;
    text-transform: capitalize;
    padding-bottom: 0px
}

/********************************************/
/* This section contains form object styles */
/********************************************/
.btnbannobold {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    font-weight: normal;
    color: #002266;
    font-size: 75%;
    height: 20px;
    vertical-align: middle;
    text-transform: capitalize
}

.btnprint {
    background-color: silver;
    vertical-align: middle;
    height: 26px;
    width: 26px;
    padding: 0;
}

.btnpull {
    background-color: silver;
    width: 15px;
    height: 24px;
    margin-top: 2px;
    vertical-align: middle;
    border-top: 1px groove black;
}

.btnsmall {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    font-weight: normal;
    color: #002266;
    font-size: 70%;
    width: 60px;
    height: 20px;
    vertical-align: middle;
    text-transform: capitalize
}

.btnheader {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    font-weight: normal;
    color: #002266;
    font-size: 70%;
    width: 45px;
    height: 20px;
    vertical-align: middle;
    text-transform: capitalize
}

.btnmedium {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    font-weight: normal;
    color: #002266;
    font-size: 70%;
    width: 110px;
    height: 20px;
    vertical-align: middle;
    text-transform: capitalize
}

.btnmedium1 {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    font-weight: normal;
    color: #002266;
    font-size: 75%;
    width: 110px;
    height: 20px;
    vertical-align: middle ;
    text-transform: capitalize
}

   .btnmediumRedColor {
       font-family: Tahoma, Arial, Helvetica, sans-serif;
       background-color: #8B0000;
       font-weight: normal;
       color: #002266;
       font-size: 100%;
       width: 110px;
       height: 35px;
       vertical-align: middle ;
       text-transform: capitalize
   }

.btnmediumGreenColor {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #008000;
    font-weight: normal;
    color: #002266;
    font-size: 100%;
    width: 110px;
    height: 35px;
    vertical-align: middle ;
    text-transform: capitalize
}

.btnmediumRedClr {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: Red;
    font-weight: normal;
    color: #002266;
    font-size: 100%;
    width: 110px;
    height: 35px;
    vertical-align: middle ;
    text-transform: capitalize
}


#txtcustbox {
    border-top: 1px groove white;
    border-right: 1px solid #E6E6FA;
    border-bottom: 1px groove #000000;
    padding-left: 2px;
    height: 20px
}

/*********************************************/
/* This section contains specific CMA styles */
/*********************************************/

/* For use with the expanding/contracting text*/
.hiddentext {
    display:none;
}

/* For use with the expanding/contracting text*/
.hiddentext1{
    font-size: 14px; !important
background-color: #F0F8FF;
    display:none;
}

/* For use with the expanding/contracting text*/
.hiddentext2{
    font-size: 14px; !important
background-color: #F0FFF0;
    display:none;
}

#pullstyle {
    width: 150px;
    color: white;
    font-weight: normal;
    text-decoration: none;
    padding-top: 1px;
    padding-bottom: 1px;
}

/* This is for the custom pulldown */
#pullstyleb {
    width: 140px;
    color: #002266;
    font-weight: normal;
    text-decoration: none;
    padding-top: 1px;
    padding-bottom: 1px;
    padding-left: 2px
}/***************************************************/
/*******        For Credit Summary              ****/
/***************************************************/
.tdGreenColorbold {
    color: Green;
    font-size: 90%;
}

.tdBlueColorbold {
    color: #000033;
    font-size: 90%;
}

.tdBlueColorbold1 {
    color: #0000A0;
    font-size: 100%;
}

.tdGreyColorNormal {
    color: #808080;
    font-size: 100%;
}

.tdGreenColorNormal {
    color: Green;
    font-size: 75%;

}

.tdBlueColorNormal {
    color: #000033;
    font-size: 75%;

}.tdShade1New {
     font-size: 100%;
     background-color: #F0F8FF
 }
.btnmediumNew {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    font-weight: normal;
    color: #002266;
    font-size: 50%;
    width: 80px;
    height: 20px;
    vertical-align: middle;
    text-transform: capitalize
}

.tdshade1Font {
    font-size: 80%;
    background-color: #F0F8FF
}
.noBorder {
    border: 0px;
}

.tdShade1Grey {
    font-size: 75%;
    color: #848484
}
.tdShadeNoBorder {
    border: 0px;
    font-size: 75%;
    background-color: #F0F8FF
}
.tdShadeRedNoBorder {
    border: 0px;
    font-size: 75%;
    color: red;
}


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\css\discover.css


/* This is the main style sheet for Discover Financial Services web applications
and is based on both the style sheet developed for the Prism NT application
and the style sheet developed for the eOrion web application  prototype.
The above style sheets were created by Robert Sobkoviak in 2000-2002

Please note well:  This style sheet is not yet a standard at Discover, but a work in progress.
Use this style sheet with the warning that changes are likely and may affect your design.

This style sheet was last edited on 2-15-2002 by Rob Sobkoviak */

/*This section contains selectors for main page elements*/

body {
    background-color: #F0F8FF;
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    font-size: 75%;
    font-weight: normal;
    font-weight: normal;
    color: #002266;
    cursor: default;
    margin-top:2px;
    margin-left: 3px;
    margin-bottom: 2px;
    margin-right: 3px
}
a {
    font-size: 75%;
    cursor: default
}
/*This section contains styles used in tables and table components */

.divbox {
    background-color: #E6E6FA;
    border: thin groove #ADD8E6;
    cursor: default;
    overflow-x : auto;
    overflow-y : auto
}

.divtdcnt {
    text-transform: uppercase;
    font-size: 75%;
    vertical-align: middle;
    text-align: left
}
.tdcntnt {
    font-size: 75%;
    color: Blue
}
.tdcntntcaps {
    font-size: 75%;
    color: Blue;
    text-transform: uppercase
}
.tdbancntnt {
    font-size: 75%;
    font-weight: bold;
    color: white;
    filter: glow(color=navy, strength=1);
    letter-spacing : 1px
}
.tdbancntntdis {
    font-size: 75%;
    font-weight: bold;
    color: gray;
    filter : dropshadow(color=white, offX=2, offy=2, positive=2);
    letter-spacing: 1px
}
.tblmain {
    text-align: left;
    vertical-align: top;
    height: 100%;
    width: 100%;
    background-color: #FFFFFF;
    border: thin groove #ADD8E6;
    border-width : 0px 2px 2px 2px
}
.tblthin {
    border : thin groove #ADD8E6;
    padding : 2px 2px 2px 2px
}
.tblPersData {
    background-color: #F0F8FF
}
.tblPersInfo {
    background-color: #F5FFFA;
    padding-top: 8px;
    padding-bottom: 8px
}
.tblMainData {
    background-color: #F0F8FF
}
.tblRowHead {
    background-color: #E0FFFF
}
.tdShade1 {
    font-size: 75%;
    background-color: #F0F8FF;
}
.tdShadeGreen {
    font-size: 75%;
    background-color: #008000
}
.tdShadeRed {
    font-size: 75%;
    background-color: #FF0000
}
.tdboldtext {
    font-size: 75%;
    background-color: #F0F8FF;
    font-weight: bold;
}
.tdShade2 {
    font-size: 75%;
    background-color: #F0FFF0;
}
.tdhead {
    font-weight: bold;
    font-size: 75%;
    color: navy
}
.tdShade1Red {
    font-size: 75%;
    color: red;
}
.tdheaddis {
    font-weight: bold;
    font-size: 75%;
    color: gray;
    filter : dropshadow(color=silver, offX=2, offy=2, positive=2)
}
.tdheadnobold {
    font-size: 75%;
    color: navy
}
.tdheadnobolddis {
    font-size: 75%;
    color: gray;
    filter : dropshadow(color=silver, offX=2, offy=2, positive=2)
}
.tdbanhead {
    font-weight: bold;
    font-size: 75%;
    color: white;
    filter: glow(color=navy, strength=2);
    letter-spacing: 1px
}
.tdbanheaddis {
    font-weight: bold;
    font-size: 75%;
    color: gray;
    filter : dropshadow(color=white, offX=2, offy=2, positive=2);
    letter-spacing: 1px
}
.tdoutmar {
    width: 1%
}
.tdmain {
    vertical-align : top;
    text-align : left;
    width: 95%
}
.tddivider {
    width: 10px;
    border-left: thin groove White
}
.tdscroll {
    overflow: auto
}
.tdsmall {
    font-size: 75%
}
.tdlarge {
    font-size: 85%
}

.tdtitle {
    font-size: 110%;
    color: navy;
    text-transform: uppercase;
    padding-bottom: 5px
}
.tdsubtitle {
    font-size: 100%;
    font-weight: bold;
    color: navy;
    text-transform: capitalize;
    padding-bottom: 3px
}

/*This section contains form object styles */

.btnmain {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    font-weight: normal;
    color: #002266;
    font-size: 75%;
    width: 80px;
    height: 24px;
    vertical-align: middle;
    text-transform: capitalize
}

.btnmain1 {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    font-weight: bold;
    color: #002266;
    font-size: 75%;
    width: 20px;
    height: 20px;
    vertical-align: middle;
    text-transform: capitalize
}



.btnban {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    font-weight: bold;
    color: #002266;
    font-size: 75%;
    height: 20px;
    vertical-align: middle;
    text-transform: capitalize
}
.btndec {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    font-weight: normal;
    color: #002266;
    width: 65px;
    font-size: 70%;
    height: 20px;
    vertical-align: middle;
    text-transform: capitalize
}
.btncalc {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    font-weight: bold;
    color: #002266;
    width: 110px;
    font-size: 100%;
    height: 20px;
    vertical-align: middle;
    text-transform: capitalize
}

.chkCheck {
    background-color: #E0FFFF;
}
.txtregular {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    color: #002266;
    font-weight: normal;
    font-size: 75%;
    cursor: text;
    height: 24px;
}
.txtredregular {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    color: #FF0000;
    font-weight: normal;
    font-size: 75%;
    cursor: text
}
.txtregular1 {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    color: #002266;
    font-weight: normal;
    font-size: 100%;
    cursor: text
}
.txtregulardis {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: silver;
    font-weight: normal;
    font-size: 75%;
    cursor: text
}
.slctpull {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    color: #002266;
    font-weight: normal;
    font-size: 70%;
    padding: 0;
    margin: 0;
    height:18px;
}
.slctpulldis {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: silver;
    font-weight: normal;
    font-size: 74%
}
.slctbox {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    color: #002266;
    font-weight: normal;
    font-size: 74%
}
.slctboxdis {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: silver;
    font-weight: normal;
    font-size: 74%
}

/*This section contains miscellaneous styles applied to text */

.txtwarning {
    font-weight: bold;
    font-size: 75%;
    color: Red;
    overflow:auto
}
.txtsmall {
    font-size: 55%;
    font-weight: bold
}
.txtcaps {
    text-transform: uppercase;
    font-size: 75%
}
.txtcapsbld {
    text-transform: uppercase;
    font-size: 75%;
    font-weight: bold
}
.txtfirstcaps {
    font-size: 75%;
    text-transform: capitalize
}
.txtfirstcapDCP {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    text-transform: capitalize;
    text-align: left;
    background-color: #e0e0f8;
    font-size: 70%;
    height: 16px
}
.txtmono {
    font-family: monospace, Tahoma, Arial, sans-serif;
    font-size: 70%;
    font-weight: bold;
    text-transform: uppercase;
    padding-top: 1px
}
.txtdate {
    font-family: monospace, Tahoma, Arial, sans-serif;
    font-size: 75%;
    font-weight: bold
}
.txtdis {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    font-weight: normal;
    font-size: 75%;
    color: gray;
    filter : dropshadow(color=silver, offX=2, offy=2, positive=2)
}
.negval {
    color: red;
    font-size: 75%
}
.txtfirstcapsDisp{
    font-size: 60%;
    text-transform: capitalize
}
.tdShade1boldyellow {
    font-weight: bold;
    font-size: 75%;
    background-color: yellow
}
.tdShade1boldgreen {
    font-weight: bold;
    font-size: 75%;
    background-color:green
}
.tdShade1boldred {
    font-weight: bold;
    font-size: 75%;
    background-color: red
}
.tableWidget_headerCell,.tableWigdet_headerCellOver,.tableWigdet_headerCellDown{
/* General rules for both standard column header and mouse on header of sortable columns */
    cursor:pointer;
    border-bottom:3px solid #C5C2B2;
    border-right:1px solid #ACA899;
    border-left:1px solid #FFF;
    background-color: #ECE9D8;
}

.tableWidget_headerCell{ /* Standard column header */
    border-top:2px solid #ECE9D8;

}

.tableWigdet_headerCellOver{ /* Rollover on sortable column header */
    border-top:2px solid #FFC83C;
}
.tableWidget tbody .tableWidget_dataRollOver{  /* Rollover style on mouse over (Data) */
    background-color:#FFF; /* No mouseover color in this example - specify another color if you want this */
}

.tableWigdet_headerCellDown{
    border-top:2px solid #FFC83C;
    background-color:#DBD8C5;
    border-left:1px solid #ACA899;
    border-right:1px solid #FFF;
}
.tableWidget td{
    margin:0px;
    padding:2px;


}
.tableWidget tbody{
    background-color:#FFF;
}
.tableWidget{
    font-family:Tahoma, Arial, Helvetica, sans-serif;
    font-size:15.5px;
    width:400px;
    table-layout: fixed;
    z-index: 1;
    overflow: hidden;
}
div.widget_tableDiv {
    border:1px solid #ACA899; /* Border around entire widget */
    height: 100px;
    overflow:auto;
    overflow-y:auto;
    overflow:-moz-scrollbars-vertical;
    width:400px;

}

html>body div.widget_tableDiv {
    overflow: hidden;
    width:400px;
}


.tableWidget thead tr{
    position : relative;

}

.tableWidget .scrollingContent{
    overflow-y:auto;
    overflow:-moz-scrollbars-vertical;
    width:100%;

}
.tableStyleFinalist {
    color: gray;
    border: thin groove #ADD8E6;
    overflow-x: auto;
    overflow-y: auto;
    cursor: default;
    height: 100%;
    width: 100%;
}

   .txtbgcolorred {
       font-family: Tahoma, Arial, Helvetica, sans-serif;
       background-color: #FF0000;
       color: #002266;
       font-weight: normal;
       font-size: 75%;
       cursor: text
   }
.txtbgcolorgreen {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #008000;
    color: #002266;
    font-weight: normal;
    font-size: 75%;
    cursor: text
}
/* End Discover main style sheet */


--------------------------------------------------------------------------------------------------------------------------------------------

C:\Maheshwar\workspace\ReactUI\src\css\focus.css



/********************************************************/
/* This section contains menu styles and in some cases changes to menu */
/* styles found in the cmacommon style sheet           */
/********************************************************/

#dropmenuFrdCaseId {
    position:absolute;
    visibility:hidden;
    width:125px;
    left:0px;
    top:20px;
    z-index:100;
    background-color: white
}

.iewrap2 {
    position:absolute ;
    color:#000000;
    width: 200px;
    cursor:default ;
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    font-size:10pt;
    font-weight:bold
}

.iewrap4 {
    position:absolute ;
    color:#000000;
    width: 125px;
    cursor:default ;
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    font-size:10pt;
    font-weight:bold
}

/* This is the horizontal line for the menu */
.hrmenu {
    width:150px
}

.menuback {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    font-size: 10pt;
    background-color:#6699CC;
    cursor: default
}

.menuhead {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    font-size: 10pt;
    text-decoration: none;
    font-weight: bold;
    cursor: default
}

/* This is for the fraud case pulldown */
.topmenud {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    font-size: 9pt;
    color: #002266;
    text-decoration: none;
    width: 125px;
    cursor: default
}


.tblheadercaps {
    text-align: left;
    vertical-align: top;
    width: 100%;
    background-color: #FFFFFF;
}

.tblmainfocus {
    text-align: left;
    vertical-align: top;
    height: 100%;
    width: 100%;
    background-color: #F0F8FF;
}

.tblmainfocusborder {
    text-align: left;
    vertical-align: top;
    height: 100%;
    width: 100%;
    background-color: #F0F8FF;
}

/*Only Bold */
.tdBoldTextOnly {
    font-weight: bold;
}

.tdShade1Emph {
    color: #FF00FF;
    font-weight: bold;
    font-size: 75%;
    background-color: #F0F8FF;
}

.tdsubtitlefocus {
    font-size: 80%;
    font-weight: bold;
    color: navy;
    text-transform: capitalize;
    padding-bottom: 0px
}

.largeError {
    font-size: 90%;
    color: Red
}

/*
* Below styles are added as part of DLOS freeze screen implementation.
* Delivered as part of Jan BAU 2012 install.
*/
.FreezePaneOff
{
    visibility: hidden;
    display: none;
    position: absolute;
    top: -100px;
    left: -100px;
}

.FreezePaneOn
{
    position: absolute;
    top: 0px;
    left: 0px;
    visibility: visible;
    display: block;
    width: 100%;
    height: 105%;
    background-color: #FFFFFF;
    z-index: 999;
    filter:alpha(opacity=40);
    -moz-opacity:0.85;
    padding-top: 25%;
}

.InnerFreezePane
{
    text-align: center;
    width: 45%;
    background-color: #FFFFFF;
    color: red;
    font-size: 85%;
    padding: 4px;
    border: solid 3px #111;
    border-color: green;
}
.FreezeTD
{
    text-align: center;
    background-color: #FFFFFF;
    color: red;
    font-size: 115%;
    font-weight: bold;
}


-------------------------------------------------------------------------------------------------------------------------

C:\Maheshwar\workspace\ReactUI\src\css\login.css


.header {
background-color: #6699cc;
height:55px;
  width: 100%;
  position: fixed;
  top:0
}
.panel{
  background-color: #cbeeff;
  padding: 20px;
}
.login,.clear{
  background-color:#f89f59;
  color:#fff
}
.tblmainfocus {
  text-align: left;
  vertical-align: top;
  height: 100%;
  width: 100%;
  background-color: #F0F8FF;
}

---------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\css\main.css

.header {
background-color: #6699cc;
height:55px;
  width: 100%;
  position: fixed;
  top:0
}
.panel{
  background-color: #cbeeff;
  padding: 20px;
}
.login,.clear{
  background-color:#f89f59;
  color:#fff
}
.link{
  width:169px;
  padding:1px;
  font-size: 12px;
}
.link:hover{
  background: navy;
}
.linkSpan{
  margin:10px;
}
.navDiv{
  border:1px solid black;
  position:fixed;
  left:305px;
  top:29px;
  background-color:#6699CC;
  width:170px;
  height:220px;
  z-index: 2;

}
.linkDiv{
  border:1px solid black;
  position:fixed;
  left:386px;
  top:29px;
  background-color:#6699CC;
  width:170px;
  height:290px;
  z-index: 2;

}
.mockform{
  padding: 20px;
}
.footer{
  height: 50px;
  padding: 5px;
  bottom: 0;
  position: fixed;
}
.bg-light {
  background-color: #69c !important;
}
.dropdown-item:hover{
  background-color: #3b92cc;
  color:#fff;
}
.mockText{
  font-size: 75%;
}
.searchclear {
  position: relative;
  left: -17px;
  font-size: 75%;
}
button[disabled]{
  border: 1px solid #999999;
  background-color: #cccccc;
  color: #666666;
}
.arrow{
  vertical-align: middle
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\css\mockSearch.css

.mockform{
    padding: 20px;
}
.footer{
    height: 50px;
    padding: 5px;
    bottom: 0;
    position: fixed;
}
.bg-light {
    background-color: #69c !important;
}
.dropdown-item:hover{
    background-color: #3b92cc;
    color:#fff;
}
.mockText{
    font-size: 75%;
}


------------------------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\css\scanList.css

.tblmainfocus {
    text-align: left;
    vertical-align: top;
    height: 100%;
    width: 100%;
    background-color: #F0F8FF;
    border: thin groove #ADD8E6;
    border-width : 0px 2px 2px 2px
}

.tdshade1bgonly {
    background-color: #F0F8FF;
}

.tdsubtitlefocus {
    font-size: 80%;
    font-weight: bold;
    color: navy;
    text-transform: capitalize;
    padding-bottom: 0px;
    padding-right: 5px;
    padding-left: 5px
}

.tdShade2 {
    font-size: 75%;
    background-color: #F0FFF0;
}

.divbodyLayer {
    position: absolute;
    width:98%;
    height:89%;
    z-index: 1;
    overflow: auto
}

.tdhead {
    font-weight: bold;
    font-size: 75%;
    color: navy
}

.tdfrmsmall {
    font-size: 60%;
}

.tdShade1 {
    font-size: 75%;
    background-color: #F0F8FF;
    color: #004085;
    white-space: nowrap;
}



.slctpull {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    color: #002266;
    font-weight: normal;
    font-size: 70%;
    padding: 0;
    margin: 0;
    height: 18px;;
}
.btnban {
    font-family: Tahoma, Arial, Helvetica, sans-serif;
    background-color: #E6E6FA;
    font-weight: bold;
    color: #002266;
    font-size: 75%;
    height: 20px;
    vertical-align: middle;
    text-transform: capitalize
}
.hiddennow{
    display: none;
}


---------------------------------------------------------------------------------------------------------------------------------------------------

C:\Maheshwar\workspace\ReactUI\src\reducers\loginReducer.js

const SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';
const SET_LOGIN_CREDEN = 'SET_LOGIN_CREDEN';
const SET_ERROR = 'SET_ERROR_LOGIN';
export  function reducerLogin(state = {
    isLoginSuccess: false,
    uname:'',
    password:'',
    error:''
}, action) {
    switch (action.type) {
        case SET_LOGIN_SUCCESS:
            return Object.assign({}, state, {
                isLoginSuccess: action.isLoginSuccess
            });
        break;
        case SET_LOGIN_CREDEN:
            return Object.assign({}, state, {
                uname: action.uname,
                password:action.password
            });
            break;
        case SET_ERROR:
            return Object.assign({}, state, {
                error: action.error
            });
    }
    return state;
}


----------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\reducers\mockSearchReducer.js

const SET_RESULTS = 'SET_RESULTS';
const SET_ERROR = 'SET_ERROR';
const SET_DISPLAY = 'SET_DISPLAY';
const SET_MOCK = 'SET_MOCK';
const SET_DISPLAY_ERROR = 'SET_DISPLAY_ERROR';
export  function reducerMock(state = {
    searchResults: [],
    error:"",
    display:"none",
    clickedMock:"",
    detailsLinkVisibility:"none"
}, action) {
    switch (action.type) {
        case SET_RESULTS:
            return Object.assign({}, state, {
                searchResults: action.searchResults
            });
            break;
        case SET_ERROR:
            return Object.assign({},state,{
                error:action.error,
            });
            break;
        case SET_DISPLAY:
            return Object.assign({},state,{
                display:action.display
            });
            break;
        case SET_MOCK:
            return Object.assign({},state,{
                clickedMock:action.clickedMock
            });
            break;
        case SET_DISPLAY_ERROR:
            return Object.assign({},state,{
                detailsLinkVisibility:action.detailsLinkVisibility
            });
            break;

    }
    return state;
}

------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\reducers\offerReducer.js


/**
 * Created by kgehlot on 4/24/2018.
 */
const SET_OFFER_RESULTS = 'SET_OFFER_RESULTS';
const BUTTON_DISABLED = 'BUTTON_DISABLED';
export  function reducerOffer(state = {
    searchVOList: [],
    xyz:[],
    alSrcCde:[],
    viewOfferBtn:false
}, action) {
    switch (action.type) {
        case SET_OFFER_RESULTS:
            return Object.assign({}, state, {
                searchVOList: action.searchVOList,
                alSrcCde:action.alSrcCde,
            });
        break;
        case BUTTON_DISABLED:
            return Object.assign({}, state, {
                viewOfferBtn: action.viewOfferBtn,
            });
    }
    return state;
}


-----------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\reducers\scanListReducer.js

/**
 * Created by kgehlot on 4/24/2018.
 */
const SET_OFFER_RESULTS = 'SET_OFFER_RESULTS';
const BUTTON_DISABLED = 'BUTTON_DISABLED';
export  function reducerScanList(state = {
    reviewLevelList:[
        {value:"all",Description:"ALL"},
        {value:"quick",Description:"Quick"},
        {value:"medium",Description:"Medium"},
        {value:"detailed",Description:"Detailed"}
    ],
    filterList:[
        {value:"channel",Description:"Channel"},
        {value:"segmentation",Description:"Segmentation"}
    ],
    channelOptionList:[
        {value:"4",Description:"Batch"},
        {value:"3",Description:"GUI"},
        {value:"2",Description:"Internet"}
    ],
    segmentationOptionList:[
        {value:"D",Description:"Broad Market Solicited"},
        {value:"M",Description:"Broad Market Unsolicited"},
        {value:"T",Description:"Cross Sell Solicited"},
        {value:"U",Description:"Cross Sell Unsolicited"},
        {value:"other",Description:"Other"}
    ],
    lobList:[{value:"Personal Loans",Description:"Personal Loans"}],
    queueList: [],
    displayReviewLevelList:[],
    displayFilterList:[],
    optionList:[],
    results:[],

}, action) {
    switch (action.type) {
        case SET_OFFER_RESULTS:
            return Object.assign({}, state, {
                searchVOList: action.searchVOList,
                alSrcCde:action.alSrcCde,
            });
            break;
        case BUTTON_DISABLED:
            return Object.assign({}, state, {
                viewOfferBtn: action.viewOfferBtn,
            });
    }
    return state;
}

----------------------------------------------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\reducers\SelectOfferReducer.js



const SET_SEARCH_RESULTS = 'SET_SEARCH_RESULTS';

export  function reducerSelectOffer(state = {
    unsolicited:false,
    searchVOList:[],
    offerList:[]
    }, action) {
    switch (action.type) {
        case SET_SEARCH_RESULTS:
            return Object.assign({}, state, {
                unsolicited: action.unsolicited,
                searchVOList: action.searchVOList,
                offerList: action.offerList
            });

    }

    return state;
}

------------------------------------------------------------------------------------------------------------------------------

C:\Maheshwar\workspace\ReactUI\src\App.css


.App {
  text-align: center;
}

.App-logo {
  animation: App-logo-spin infinite 20s linear;
  height: 80px;
}

.App-header {
  background-color: #222;
  height: 150px;
  padding: 20px;
  color: white;
}

.App-title {
  font-size: 1.5em;
}

.App-intro {
  font-size: large;
}

@keyframes App-logo-spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}


------------------------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\App.js

import React, {Component} from 'react';
import Login from './components/Login';

class App extends Component {
    render() {
        return (
            <Login/>
        );
    }
}
export default App;


------------------------------------------------------------------------------------------------------

C:\Maheshwar\workspace\ReactUI\src\App.test.js


import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';

it('renders without crashing', () => {
  const div = document.createElement('div');
  ReactDOM.render(<App />, div);
  ReactDOM.unmountComponentAtNode(div);
});


---------------------------------------------------------------------------------------------------
C:\Maheshwar\workspace\ReactUI\src\index.css


body {
    font-family: sans-serif;
}

html, body {
    height: 100%;
    width: 100%;
    padding: 1px;
    overflow-x: hidden;
    overflow-y: hidden;
}



-------------------------------------------------------------------------------------------------------

C:\Maheshwar\workspace\ReactUI\src\index.js



import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';

import Mock from './components/MockSearch';
import { BrowserRouter as Router, Route } from "react-router-dom";
import registerServiceWorker from './registerServiceWorker';
import store from './store';
import Offer from './components/Offer';
import Baid from './components/Baid';
import Error from './components/Error';
import ScanList from './components/ScanList';
import SelectOffer from './components/SelectOffer';
import { Provider } from 'react-redux';
import AdminScreen from './components/AdminScreen';

ReactDOM.render(

    <Provider store={store}>
    <Router>
        <div>
            <Route exact path="/" component={App} />
            <Route exact path="/Error" component={Error} />
            <Route exact path="/Baid" component={Baid} />
            <Route exact path="/MockSearch" component={Mock} />
            <Route exact path="/Offer" component={Offer} />
            <Route exact path="/ScanList" component={ScanList} />
            <Route exact path="/SelectOffer" component={SelectOffer} />
            <Route exact path="/AdminScreen" component={AdminScreen} />

        </div>
    </Router>
        </Provider>
    ,
    document.getElementById('app')
);

registerServiceWorker();


--------------------------------------------------------------------------------------------------------------------------------

C:\Maheshwar\workspace\ReactUI\src\registerServiceWorker.js

// In production, we register a service worker to serve assets from local cache.

// This lets the app load faster on subsequent visits in production, and gives
// it offline capabilities. However, it also means that developers (and users)
// will only see deployed updates on the "N+1" visit to a page, since previously
// cached resources are updated in the background.

// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.
// This link also includes instructions on opting out of this behavior.

const isLocalhost = Boolean(
  window.location.hostname === 'localhost' ||
    // [::1] is the IPv6 localhost address.
    window.location.hostname === '[::1]' ||
    // 127.0.0.1/8 is considered localhost for IPv4.
    window.location.hostname.match(
      /^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/
    )
);

export default function register() {
  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {
    // The URL constructor is available in all browsers that support SW.
    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);
    if (publicUrl.origin !== window.location.origin) {
      // Our service worker won't work if PUBLIC_URL is on a different origin
      // from what our page is served on. This might happen if a CDN is used to
      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374
      return;
    }

    window.addEventListener('load', () => {
      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;

      if (isLocalhost) {
        // This is running on localhost. Lets check if a service worker still exists or not.
        checkValidServiceWorker(swUrl);

        // Add some additional logging to localhost, pointing developers to the
        // service worker/PWA documentation.
        navigator.serviceWorker.ready.then(() => {
          console.log(
            'This web app is being served cache-first by a service ' +
              'worker. To learn more, visit https://goo.gl/SC7cgQ'
          );
        });
      } else {
        // Is not local host. Just register service worker
        registerValidSW(swUrl);
      }
    });
  }
}

function registerValidSW(swUrl) {
  navigator.serviceWorker
    .register(swUrl)
    .then(registration => {
      registration.onupdatefound = () => {
        const installingWorker = registration.installing;
        installingWorker.onstatechange = () => {
          if (installingWorker.state === 'installed') {
            if (navigator.serviceWorker.controller) {
              // At this point, the old content will have been purged and
              // the fresh content will have been added to the cache.
              // It's the perfect time to display a "New content is
              // available; please refresh." message in your web app.
              console.log('New content is available; please refresh.');
            } else {
              // At this point, everything has been precached.
              // It's the perfect time to display a
              // "Content is cached for offline use." message.
              console.log('Content is cached for offline use.');
            }
          }
        };
      };
    })
    .catch(error => {
      console.error('Error during service worker registration:', error);
    });
}

function checkValidServiceWorker(swUrl) {
  // Check if the service worker can be found. If it can't reload the page.
  fetch(swUrl)
    .then(response => {
      // Ensure service worker exists, and that we really are getting a JS file.
      if (
        response.status === 404 ||
        response.headers.get('content-type').indexOf('javascript') === -1
      ) {
        // No service worker found. Probably a different app. Reload the page.
        navigator.serviceWorker.ready.then(registration => {
          registration.unregister().then(() => {
            window.location.reload();
          });
        });
      } else {
        // Service worker found. Proceed as normal.
        registerValidSW(swUrl);
      }
    })
    .catch(() => {
      console.log(
        'No internet connection found. App is running in offline mode.'
      );
    });
}

export function unregister() {
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.ready.then(registration => {
      registration.unregister();
    });
  }
}


--------------------------------------------------------------------------------------------------------------------------------------------

C:\Maheshwar\workspace\ReactUI\src\store.js


import { createStore, applyMiddleware } from 'redux';
import thunk from 'redux-thunk';
import logger from 'redux-logger';
import {combineReducers} from 'redux';
import {reducerLogin} from './reducers/loginReducer';
import {reducerMock} from './reducers/mockSearchReducer';
import {reducerOffer} from  './reducers/offerReducer';
import {reducerSelectOffer} from './reducers/SelectOfferReducer';
import {reducerScanList} from './reducers/scanListReducer';
const reducer =  combineReducers({
    reducerLogin,reducerMock,reducerOffer,reducerSelectOffer,reducerScanList
});

const store = createStore(reducer, {}, applyMiddleware(thunk, logger));
export default store;

-------------------------------------------------------------------------------------------------------------------------------------------

C:\Maheshwar\workspace\ReactUI\package.json


{
  "name": "reactjspoc",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "axios": "^0.18.0",
    "material-ui": "^1.0.0-beta.41",
    "react": "^16.3.1",
    "react-alert": "^4.0.2",
    "react-dom": "^16.3.1",
    "react-new-window": "0.0.7",
    "react-redux": "^5.0.7",
    "react-router": "^4.2.0",
    "react-router-dom": "^4.2.2",
    "react-scripts": "1.1.4",
    "react-toggle-display": "^2.2.0",
    "reactstrap": "^5.0.0-beta.3",
    "redux": "^3.7.2",
    "redux-logger": "^3.0.6",
    "redux-thunk": "^2.2.0"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test --env=jsdom",
    "eject": "react-scripts eject"
  }
}
--------------------------------------------------------------------------------------------------------------------------------------------------
































